Search.setIndex({"alltitles": {"/v1/retrieve (POST)": [[52, "id3"]], "/v1/run (POST)": [[52, "id1"]], "/v1/stream (POST)": [[52, "id2"]], "/version (GET)": [[52, "id4"]], "0. Retrieval token metric in AutoRAG": [[56, "retrieval-token-metric-in-autorag"]], "0. Understanding AutoRAG\u2019s retrieval_gt": [[55, "understanding-autorag-s-retrieval-gt"]], "1. /v1/run (POST)": [[52, "v1-run-post"]], "1. Add File Name": [[32, "add-file-name"]], "1. Auto-truncate prompt": [[76, "auto-truncate-prompt"]], "1. Bleu": [[54, "bleu"]], "1. Build an GUI application and run it": [[57, "build-an-gui-application-and-run-it"]], "1. Build the Docker Image": [[59, "build-the-docker-image"]], "1. Clone the repository with submodules": [[57, "clone-the-repository-with-submodules"]], "1. Docker": [[71, "docker"]], "1. Error when using AutoRAG on Jupyter Notebook or API server": [[130, "error-when-using-autorag-on-jupyter-notebook-or-api-server"]], "1. Factoid": [[50, "factoid"]], "1. HTML Parser": [[41, "html-parser"]], "1. Installation": [[130, "installation"]], "1. PDF": [[42, "pdf"]], "1. Parsing": [[51, "parsing"]], "1. Precision": [[55, "precision"]], "1. Query Expansion": [[116, null]], "1. Reasoning Evolving": [[47, "reasoning-evolving"]], "1. Run as a Code": [[131, "run-as-a-code"]], "1. Sample retrieval gt": [[49, "sample-retrieval-gt"]], "1. Set chunker instance": [[32, "set-chunker-instance"]], "1. Set parser instance": [[38, "set-parser-instance"], [44, "set-parser-instance"]], "1. Token": [[33, "token"], [34, "token"]], "1. Token Precision": [[56, "token-precision"]], "1. Unanswerable question filtering": [[48, "unanswerable-question-filtering"]], "1. Use All Files": [[44, "use-all-files"]], "1. Use YAML path": [[53, "use-yaml-path"]], "2. /v1/retrieve (POST)": [[52, "v1-retrieve-post"]], "2. Accurate token output": [[76, "accurate-token-output"]], "2. CSV": [[42, "csv"]], "2. Character": [[33, "character"]], "2. Chunking": [[51, "chunking"]], "2. Concept Completion": [[50, "concept-completion"]], "2. Conditional Evolving": [[47, "conditional-evolving"]], "2. Corpus id not found in corpus_data.": [[130, "corpus-id-not-found-in-corpus-data"]], "2. Get retrieval gt contents to generate questions": [[49, "get-retrieval-gt-contents-to-generate-questions"]], "2. Optimization": [[130, "optimization"]], "2. Passage Dependent Filtering": [[48, "passage-dependent-filtering"]], "2. Recall": [[55, "recall"]], "2. Retrieval": [[120, null]], "2. Rouge": [[54, "rouge"]], "2. Run Docker Compose": [[57, "run-docker-compose"]], "2. Run as an API server": [[131, "run-as-an-api-server"]], "2. Run the Docker Container": [[59, "run-the-docker-container"]], "2. Sentence": [[34, "sentence"]], "2. Sentence Splitter": [[32, "sentence-splitter"]], "2. Set YAML file": [[32, "set-yaml-file"], [38, "set-yaml-file"], [44, "set-yaml-file"]], "2. The text information comes separately from the table information.": [[41, "the-text-information-comes-separately-from-the-table-information"]], "2. Token Recall": [[56, "token-recall"]], "2. Use Specific Files": [[44, "use-specific-files"]], "2. Use a trial path": [[53, "use-a-trial-path"]], "2. Weaviate Cloud": [[71, "weaviate-cloud"]], "3. /v1/stream (POST)": [[52, "v1-stream-post"]], "3. Access the GUI": [[57, "access-the-gui"]], "3. Accurate log prob output": [[76, "accurate-log-prob-output"]], "3. Compress Query": [[47, "compress-query"]], "3. F1 Score": [[55, "f1-score"]], "3. Generate queries": [[49, "generate-queries"]], "3. JSON": [[42, "json"]], "3. LlamaIndex": [[130, "llamaindex"]], "3. METEOR": [[54, "meteor"]], "3. Passage Augmenter": [[80, null]], "3. QA Creation": [[51, "qa-creation"]], "3. Run as a Web Interface": [[131, "run-as-a-web-interface"]], "3. Sentence": [[33, "sentence"]], "3. Start chunking": [[32, "start-chunking"]], "3. Start parsing": [[38, "start-parsing"], [44, "start-parsing"]], "3. Token F1": [[56, "token-f1"]], "3. Two-hop Incremental": [[50, "two-hop-incremental"]], "3. Use Runner": [[53, "use-runner"]], "3. Using a Custom Cache Directory with HF_HOME": [[59, "using-a-custom-cache-directory-with-hf-home"]], "3. Window": [[34, "window"]], "4. /version (GET)": [[52, "version-get"]], "4. Check the result": [[32, "check-the-result"], [38, "check-the-result"], [44, "check-the-result"]], "4. Custom": [[50, "custom"]], "4. GPU-related Error": [[130, "gpu-related-error"]], "4. Generate answers": [[49, "generate-answers"]], "4. MRR (Mean Reciprocal Rank)": [[55, "mrr-mean-reciprocal-rank"]], "4. Markdown": [[42, "markdown"]], "4. Passage_Reranker": [[102, null]], "4. QA - Corpus mapping": [[51, "qa-corpus-mapping"]], "4. Sem Score": [[54, "sem-score"]], "4. Semantic": [[34, "semantic"]], "5-1. Coherence": [[54, "coherence"]], "5-2. Consistency": [[54, "consistency"]], "5-3. Fluency": [[54, "fluency"]], "5-4. Relevance": [[54, "relevance"]], "5. Debugging and Manual Access": [[59, "debugging-and-manual-access"]], "5. Filtering questions": [[49, "filtering-questions"]], "5. G-Eval": [[54, "g-eval"]], "5. HTML": [[42, "html"]], "5. MAP (Mean Average Precision)": [[55, "map-mean-average-precision"]], "5. Ollama RequestTimeOut Error": [[130, "ollama-requesttimeout-error"]], "5. Passage Filter": [[86, null]], "5. Simple": [[34, "simple"]], "6. Bert Score": [[54, "bert-score"]], "6. NDCG (Normalized Discounted Cumulative Gain)": [[55, "ndcg-normalized-discounted-cumulative-gain"]], "6. Passage_Compressor": [[83, null]], "6. Save the QA data": [[49, "save-the-qa-data"]], "6. Use gpu version": [[59, "use-gpu-version"]], "6. XML": [[42, "xml"]], "7. All files": [[42, "all-files"]], "7. Prompt Maker": [[111, null]], "8. Generator": [[74, null]], "API client usage example": [[52, "api-client-usage-example"]], "API endpoint": [[52, null]], "AWS Bedrock x AutoRAG": [[60, null]], "Add more LLM models": [[62, "add-more-llm-models"], [72, "add-more-llm-models"]], "Add your embedding models (Legacy)": [[72, "add-your-embedding-models-legacy"]], "Additional Considerations": [[70, "additional-considerations"]], "Additional Notes": [[59, "additional-notes"]], "Advanced Configuration": [[129, "advanced-configuration"]], "Allowed IP Addresses": [[66, "allowed-ip-addresses"]], "Answer Generation": [[46, null]], "Any trouble to use Korean tokenizer?": [[117, null]], "Auto-save feature": [[40, null]], "AutoRAG GUI": [[57, null]], "AutoRAG documentation": [[58, null]], "Available Chunk Method": [[33, "available-chunk-method"], [34, "available-chunk-method"]], "Available List": [[79, null]], "Available Parse Method by File Type": [[42, "available-parse-method-by-file-type"]], "Available Sentence Splitter": [[32, "available-sentence-splitter"]], "BM25": [[117, null]], "Backend Support": [[121, "backend-support"]], "Basic Concepts": [[35, "basic-concepts"]], "Basic Generation": [[46, "basic-generation"]], "Before Usage": [[92, "before-usage"], [97, "before-usage"], [99, "before-usage"], [108, "before-usage"]], "Before you start QA Creation": [[51, "before-you-start-qa-creation"]], "Build from source": [[59, "build-from-source"]], "Chroma": [[65, null]], "Chunk": [[32, null]], "Client Types": [[65, "client-types"]], "Clova": [[41, null]], "Cluster, Bucket, Scope, Collection": [[66, "cluster-bucket-scope-collection"]], "Colab Tutorial": [[131, null]], "Colbert Reranker": [[93, null]], "Command Line": [[70, "command-line"]], "Common Parameters": [[62, "common-parameters"], [72, "common-parameters"]], "Compact": [[125, "compact"]], "Concise Generation": [[46, "concise-generation"]], "Configuration": [[66, "configuration"], [67, "configuration"], [68, "configuration"], [69, "configuration"], [71, "configuration"], [126, "configuration"]], "Configure LLM": [[62, null]], "Configure LLM & Embedding models": [[72, null]], "Configure Vector DB": [[70, null]], "Configure the Embedding model": [[72, "configure-the-embedding-model"]], "Configure the LLM model": [[62, "configure-the-llm-model"], [72, "configure-the-llm-model"]], "Configure the model name in the YAML file": [[72, "configure-the-model-name-in-the-yaml-file"]], "Contact": [[127, null]], "Contact us": [[127, "contact-us"]], "Corpus Dataset": [[36, "corpus-dataset"]], "Couchbase": [[66, null]], "Could not build wheels": [[130, "could-not-build-wheels"]], "Create Index for Query": [[66, "create-index-for-query"]], "Custom Generation": [[46, "custom-generation"]], "Data Creation": [[35, null], [73, "data-creation"]], "Dataset Format": [[36, null]], "Default Options": [[70, "default-options"]], "Default Parse Method": [[44, "default-parse-method"]], "Default Prompt": [[115, "default-prompt"]], "Deploy your optimal RAG pipeline": [[131, "deploy-your-optimal-rag-pipeline"]], "Do I need to use all nodes?": [[124, null]], "Don\u2019t know Filter": [[48, "don-t-know-filter"]], "Downloading the LLM Model": [[64, "downloading-the-llm-model"]], "Early version of AutoRAG": [[127, "early-version-of-autorag"]], "Edit Cluster Access": [[66, "edit-cluster-access"]], "Endpoints": [[52, "endpoints"]], "Error while running LLM": [[130, "error-while-running-llm"]], "Evaluate Nodes that can\u2019t evaluate": [[124, "evaluate-nodes-that-can-t-evaluate"]], "Evaluate your RAG": [[129, null]], "Evaluation data creation tutorial": [[51, null]], "Example": [[50, "example"]], "Example Code": [[129, "example-code"]], "Example Configuration Using Normalize Mean Strategy": [[126, "example-configuration-using-normalize-mean-strategy"]], "Example Configuration Using mean Strategy": [[126, "example-configuration-using-mean-strategy"]], "Example Configuration Using rank Strategy": [[126, "example-configuration-using-rank-strategy"]], "Example Node Lines": [[128, "example-node-lines"]], "Example Request": [[52, "example-request"]], "Example Response": [[52, "example-response"]], "Example YAML": [[32, "example-yaml"], [32, "id1"], [33, "example-yaml"], [34, "example-yaml"], [41, "example-yaml"], [42, "example-yaml"], [42, "id1"], [42, "id2"], [42, "id3"], [42, "id4"], [42, "id5"], [42, "id6"], [43, "example-yaml"], [45, "example-yaml"]], "Example YAML file": [[66, "example-yaml-file"], [68, "example-yaml-file"], [71, "example-yaml-file"], [71, "id1"]], "Example config.yaml": [[75, "example-config-yaml"], [76, "example-config-yaml"], [77, "example-config-yaml"], [78, "example-config-yaml"], [81, "example-config-yaml"], [82, "example-config-yaml"], [84, "example-config-yaml"], [85, "example-config-yaml"], [87, "example-config-yaml"], [88, "example-config-yaml"], [89, "example-config-yaml"], [90, "example-config-yaml"], [91, "example-config-yaml"], [92, "example-config-yaml"], [93, "example-config-yaml"], [94, "example-config-yaml"], [95, "example-config-yaml"], [96, "example-config-yaml"], [97, "example-config-yaml"], [98, "example-config-yaml"], [99, "example-config-yaml"], [100, "example-config-yaml"], [101, "example-config-yaml"], [103, "example-config-yaml"], [104, "example-config-yaml"], [105, "example-config-yaml"], [106, "example-config-yaml"], [107, "example-config-yaml"], [108, "example-config-yaml"], [109, "example-config-yaml"], [110, "example-config-yaml"], [112, "example-config-yaml"], [113, "example-config-yaml"], [114, "example-config-yaml"], [115, "example-config-yaml"], [117, "example-config-yaml"], [118, "example-config-yaml"], [119, "example-config-yaml"], [121, "example-config-yaml"]], "Example config.yaml file": [[74, "example-config-yaml-file"], [80, "example-config-yaml-file"], [83, "example-config-yaml-file"], [86, "example-config-yaml-file"], [102, "example-config-yaml-file"], [111, "example-config-yaml-file"], [116, "example-config-yaml-file"], [120, "example-config-yaml-file"]], "Explanation of concepts": [[128, "explanation-of-concepts"]], "Explanation:": [[59, "explanation"], [59, "id1"]], "Extract pipeline and evaluate test dataset": [[131, "extract-pipeline-and-evaluate-test-dataset"]], "F-String": [[109, null]], "Facing Import Error": [[130, "facing-import-error"]], "Facing OPENAI API error": [[130, "facing-openai-api-error"]], "Factoid Example": [[50, "factoid-example"]], "Features": [[32, "features"]], "Filtering": [[48, null]], "Find Optimal RAG Pipeline": [[131, "find-optimal-rag-pipeline"]], "Flag Embedding LLM Reranker": [[94, null]], "Flag Embedding Reranker": [[95, null]], "FlashRank Reranker": [[96, null]], "Folder Structure": [[123, null]], "Frequently Asked Questions": [[130, "frequently-asked-questions"]], "Full": [[125, "full"]], "Full Ingest Option": [[70, "full-ingest-option"]], "GPU": [[125, "gpu"]], "GPU + API": [[125, "gpu-api"]], "Generate QA set from Corpus data using RAGAS": [[39, "generate-qa-set-from-corpus-data-using-ragas"]], "Generation Evaluation": [[129, "generation-evaluation"]], "Generation Metrics": [[54, null]], "Get API Key": [[125, "get-api-key"]], "Half": [[125, "half"]], "How optimization works": [[124, null]], "How to Use": [[33, "how-to-use"], [34, "how-to-use"], [42, "how-to-use"]], "HuggingFace LLM x AutoRAG": [[61, null]], "Huggingface AutoTokenizer": [[117, "huggingface-autotokenizer"]], "HyDE": [[113, null]], "Hybrid - cc": [[118, null]], "Hybrid - rrf": [[119, null]], "If you have both query and generation_gt:": [[40, "if-you-have-both-query-and-generation-gt"]], "If you only have query data:": [[40, "if-you-only-have-query-data"]], "Important: Score Alignment": [[129, "important-score-alignment"]], "Index": [[40, "index"], [62, "index"], [72, "index"]], "Initialization": [[65, "initialization"]], "Initialization with YAML Configuration": [[65, "initialization-with-yaml-configuration"]], "Installation": [[57, "installation"], [63, "installation"], [64, "installation"]], "Installation and Setup": [[59, null]], "Installation for Japanese \ud83c\uddef\ud83c\uddf5": [[59, "installation-for-japanese"]], "Installation for Korean \ud83c\uddf0\ud83c\uddf7": [[59, "installation-for-korean"]], "Installation for Local Models \ud83c\udfe0": [[59, "installation-for-local-models"]], "Installation for Parsing \ud83c\udf32": [[59, "installation-for-parsing"]], "Integration list": [[62, "integration-list"]], "Key Parameters:": [[65, "key-parameters"]], "Ko-reranker": [[98, null]], "LLM-based Don\u2019t know Filter": [[48, "llm-based-don-t-know-filter"]], "Langchain Chunk": [[33, null]], "Langchain Parse": [[42, null]], "Language Support": [[43, "language-support"]], "Legacy": [[37, null]], "Llama Index Chunk": [[34, null]], "Llama Parse": [[43, null]], "LlamaIndex": [[46, "llamaindex"], [46, "id2"], [46, "id3"]], "Long Context Reorder": [[110, null]], "Long LLM Lingua": [[82, null]], "Long story short": [[36, null], [36, null], [36, null], [36, null]], "Make Node Line": [[122, "make-node-line"]], "Make YAML file": [[122, "make-yaml-file"]], "Make a Custom Evolving function": [[47, "make-a-custom-evolving-function"]], "Make a custom config YAML file": [[122, null]], "Make corpus data from raw documents": [[40, "make-corpus-data-from-raw-documents"]], "Make qa data from corpus data": [[40, "make-qa-data-from-corpus-data"]], "Merger Node": [[127, "merger-node"]], "MetricInput Dataclass": [[129, "metricinput-dataclass"]], "MetricInput for Generation": [[129, "metricinput-for-generation"]], "Migration Guide": [[73, null]], "Milvus": [[67, null]], "Mixedbread AI Reranker": [[99, null]], "Module Parameters": [[75, "module-parameters"], [76, "module-parameters"], [77, "module-parameters"], [78, "module-parameters"], [81, "module-parameters"], [82, "module-parameters"], [84, "module-parameters"], [85, "module-parameters"], [87, "module-parameters"], [88, "module-parameters"], [89, "module-parameters"], [90, "module-parameters"], [91, "module-parameters"], [92, "module-parameters"], [93, "module-parameters"], [94, "module-parameters"], [95, "module-parameters"], [96, "module-parameters"], [97, "module-parameters"], [98, "module-parameters"], [99, "module-parameters"], [100, "module-parameters"], [101, "module-parameters"], [103, "module-parameters"], [104, "module-parameters"], [105, "module-parameters"], [106, "module-parameters"], [107, "module-parameters"], [108, "module-parameters"], [109, "module-parameters"], [110, "module-parameters"], [112, "module-parameters"], [113, "module-parameters"], [114, "module-parameters"], [115, "module-parameters"], [117, "module-parameters"], [118, "module-parameters"], [119, "module-parameters"], [121, "module-parameters"]], "Module contents": [[0, "module-autorag"], [1, "module-autorag.data"], [2, "module-contents"], [3, "module-contents"], [4, "module-autorag.data.legacy"], [5, "module-autorag.data.legacy.corpus"], [6, "module-contents"], [7, "module-autorag.data.parse"], [8, "module-autorag.data.qa"], [9, "module-autorag.data.qa.evolve"], [10, "module-autorag.data.qa.filter"], [11, "module-autorag.data.qa.generation_gt"], [12, "module-autorag.data.qa.query"], [13, "module-contents"], [14, "module-autorag.data.utils"], [15, "module-autorag.deploy"], [16, "module-contents"], [17, "module-contents"], [18, "module-autorag.nodes"], [19, "module-autorag.nodes.generator"], [20, "module-contents"], [21, "module-autorag.nodes.passagecompressor"], [22, "module-contents"], [23, "module-autorag.nodes.passagereranker"], [24, "module-contents"], [25, "module-autorag.nodes.promptmaker"], [26, "module-autorag.nodes.queryexpansion"], [27, "module-contents"], [28, "module-autorag.schema"], [29, "module-autorag.utils"], [30, "module-contents"]], "Modules that use Embedding model": [[72, "modules-that-use-embedding-model"]], "Modules that use LLM model": [[62, "modules-that-use-llm-model"], [72, "modules-that-use-llm-model"]], "MonoT5": [[100, null]], "More optimization strategies": [[124, "more-optimization-strategies"]], "Multi Query Expansion": [[114, null]], "Newbie & Pro version": [[57, "newbie-pro-version"]], "Next Step": [[131, null]], "Node & Module": [[128, "node-module"]], "Node Line": [[128, "node-line"]], "Node Parameters": [[74, "node-parameters"], [80, "node-parameters"], [83, "node-parameters"], [86, "node-parameters"], [102, "node-parameters"], [111, "node-parameters"], [116, "node-parameters"], [119, "node-parameters"], [120, "node-parameters"]], "Node line for Modular RAG": [[127, "node-line-for-modular-rag"]], "Non GPU": [[125, "non-gpu"]], "Note": [[96, null]], "Note for Windows Users": [[59, "note-for-windows-users"]], "Note: Dataset Format": [[131, null]], "Nvidia Nim x AutoRAG": [[63, null]], "OLLAMA x AutoRAG": [[64, null]], "OpenAI": [[46, "openai"], [46, "id1"]], "OpenAI LLM": [[76, null]], "OpenVINO Reranker": [[101, null]], "Output Columns": [[32, "output-columns"], [38, "output-columns"], [44, "output-columns"]], "Overview": [[32, "overview"], [38, "overview"], [40, "overview"], [44, "overview"], [49, "overview"], [50, "overview"], [51, "overview"], [70, "overview"], [74, "overview"], [120, "overview"], [126, "overview"]], "Overview:": [[83, "overview"], [102, "overview"], [111, "overview"], [116, "overview"]], "Parameters": [[45, "parameters"], [52, "parameters"], [66, "parameters"], [68, "parameters"], [71, "parameters"]], "Parse": [[38, null], [44, null]], "Pass the best result to the next node": [[124, "pass-the-best-result-to-the-next-node"]], "Percentile Cutoff": [[87, null]], "Pinecone": [[68, null]], "Point": [[41, "point"]], "Policy Node": [[127, "policy-node"]], "Preparation": [[129, "preparation"]], "Prepare Evaluation Dataset": [[131, "prepare-evaluation-dataset"]], "Prev Next Augmenter": [[81, null]], "Project": [[123, "project"]], "Properties": [[52, "properties"]], "Provided Query Evolving Functions": [[47, "provided-query-evolving-functions"]], "Purpose": [[74, null], [83, null], [120, null]], "Python Code": [[70, "python-code"]], "Python Sample Code": [[52, "python-sample-code"]], "QA Dataset": [[36, "qa-dataset"]], "QA creation": [[49, null]], "Qdrant": [[69, null]], "Query Decompose": [[115, null]], "Query Evolving": [[47, null]], "Query Generation": [[50, null]], "Question types": [[50, "question-types"]], "RAGAS evaluation data generation": [[39, null]], "RAGAS question types": [[39, "ragas-question-types"]], "RankGPT": [[103, null]], "Recency Filter": [[88, null]], "Refine": [[84, null]], "Response Body": [[52, "response-body"]], "Retrieval Evaluation": [[129, "retrieval-evaluation"]], "Retrieval Metrics": [[55, null]], "Retrieval Token Metrics": [[56, null]], "Road to Modular RAG": [[127, null]], "Rule-based Don\u2019t know Filter": [[48, "rule-based-don-t-know-filter"]], "Run AutoRAG optimization": [[131, "run-autorag-optimization"]], "Run AutoRAG with \ud83d\udc33 Docker": [[59, "run-autorag-with-docker"]], "Run Chunk Pipeline": [[32, "run-chunk-pipeline"]], "Run Dashboard to see your trial result!": [[131, "run-dashboard-to-see-your-trial-result"]], "Run Parse Pipeline": [[38, "run-parse-pipeline"], [44, "run-parse-pipeline"]], "Run the GUI application from source": [[57, "run-the-gui-application-from-source"]], "Run with AutoRAG Runner": [[53, "run-with-autorag-runner"]], "Run with CLI": [[53, "run-with-cli"]], "Running API server": [[52, "running-api-server"]], "Running AutoRAG": [[60, "running-autorag"], [61, "running-autorag"], [63, "running-autorag"], [64, "running-autorag"]], "Running the Ollama Server": [[64, "running-the-ollama-server"]], "Running the Web Interface": [[53, "running-the-web-interface"]], "Sample Structure Index": [[123, "sample-structure-index"]], "Sample YAML file guide": [[125, null]], "Samples": [[36, "samples"]], "Sentence Transformer Reranker": [[104, null]], "Set Environment Variables": [[43, "set-environment-variables"]], "Set YAML File": [[51, "set-yaml-file"], [51, "id1"]], "Setting Up the AWS profile": [[60, "setting-up-the-aws-profile"]], "Setting Up the Environment": [[63, "setting-up-the-environment"], [64, "setting-up-the-environment"]], "Setup OPENAI API KEY": [[59, "setup-openai-api-key"]], "Similarity Percentile Cutoff": [[89, null]], "Similarity Threshold Cutoff": [[90, null]], "Simple": [[125, "simple"]], "Specify modules": [[122, "specify-modules"]], "Specify nodes": [[122, "specify-nodes"]], "Start Chunking": [[51, "start-chunking"]], "Start Parsing": [[51, "start-parsing"]], "Start QA Creation": [[51, "start-qa-creation"]], "Start creating your own evaluation data": [[40, null]], "Start the vLLM API server": [[78, "start-the-vllm-api-server"]], "Strategy": [[111, "strategy"], [116, "strategy"], [126, null], [128, "strategy"]], "Strategy Parameter": [[126, "strategy-parameter"]], "Strategy Parameters": [[74, "strategy-parameters"], [83, "strategy-parameters"], [102, "strategy-parameters"], [120, "strategy-parameters"]], "Strategy Parameters:": [[111, "strategy-parameters"], [116, "strategy-parameters"]], "Structure": [[128, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [4, "subpackages"], [8, "subpackages"], [16, "subpackages"], [18, "subpackages"], [23, "subpackages"]], "Success Response": [[52, "success-response"]], "Summarize": [[128, null], [128, null], [128, null]], "Supported Chunk Modules": [[32, "supported-chunk-modules"]], "Supported Model Names": [[99, "supported-model-names"], [100, "supported-model-names"], [108, "supported-model-names"]], "Supported Modules": [[74, "supported-modules"], [83, "supported-modules"], [102, "supported-modules"], [111, "supported-modules"], [116, "supported-modules"], [120, "supported-modules"]], "Supported Parse Modules": [[38, "supported-parse-modules"], [44, "supported-parse-modules"]], "Supported Vector Databases": [[70, "supported-vector-databases"]], "Supporting Embedding models (Legacy)": [[72, "supporting-embedding-models-legacy"]], "Supporting LLM Models": [[62, "supporting-llm-models"], [72, "supporting-llm-models"]], "Swapping modules in Node": [[124, "swapping-modules-in-node"]], "TART": [[105, null]], "Table Detection": [[41, "table-detection"], [45, "table-detection"]], "Table Extraction": [[43, "table-extraction"]], "Table Hybrid Parse": [[45, null]], "Table Parse Available Modules": [[45, "table-parse-available-modules"]], "The length or row is different from the original data": [[130, "the-length-or-row-is-different-from-the-original-data"]], "Threshold Cutoff": [[91, null]], "Time Reranker": [[106, null]], "Tree Summarize": [[85, null]], "Trouble with installation?": [[59, null]], "TroubleShooting": [[130, null]], "Tutorial": [[131, null]], "UPR": [[107, null]], "Usage": [[50, "usage"], [50, "id1"], [50, "id2"], [50, "id3"], [66, "usage"], [67, "usage"], [68, "usage"], [69, "usage"], [70, "usage"], [71, "usage"]], "Use Docker Compose (from source)": [[57, "use-docker-compose-from-source"]], "Use Multimodal Model": [[43, "use-multimodal-model"]], "Use NGrok Tunnel for public access": [[52, "use-ngrok-tunnel-for-public-access"]], "Use all files": [[44, "id1"]], "Use custom models": [[39, "use-custom-models"]], "Use custom prompt": [[40, "use-custom-prompt"]], "Use environment variable in the YAML file": [[122, "use-environment-variable-in-the-yaml-file"]], "Use in Multi-GPU": [[77, "use-in-multi-gpu"]], "Use multiple prompts": [[40, "use-multiple-prompts"]], "Use specific file types": [[44, "use-specific-file-types"]], "Use vllm": [[72, "use-vllm"]], "Using AWS Bedrock with AutoRAG": [[60, "using-aws-bedrock-with-autorag"]], "Using HuggingFace LLM with AutoRAG": [[61, "using-huggingface-llm-with-autorag"]], "Using HuggingFace Models": [[72, "using-huggingface-models"]], "Using Langchain Chunk Method that is not in the Available Chunk Method": [[33, "using-langchain-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using Llama Index Chunk Method that is not in the Available Chunk Method": [[34, "using-llama-index-chunk-method-that-is-not-in-the-available-chunk-method"]], "Using NVIDIA NIM with AutoRAG": [[63, "using-nvidia-nim-with-autorag"]], "Using Parse Method that is not in the Available Parse Method": [[42, "using-parse-method-that-is-not-in-the-available-parse-method"]], "Using evaluate_generation": [[129, "using-evaluate-generation"]], "Using evaluate_retrieval": [[129, "using-evaluate-retrieval"]], "Using sentence splitter that is not in the Available Sentence Splitter": [[32, "using-sentence-splitter-that-is-not-in-the-available-sentence-splitter"]], "Validate your system": [[131, "validate-your-system"]], "Vectordb": [[121, null]], "Want to know more about Modular RAG?": [[127, null]], "Want to specify project folder?": [[32, null], [38, null], [44, null], [53, null], [131, null], [131, null], [131, null]], "Weaviate": [[71, null]], "Web Interface": [[53, null]], "Web Interface example": [[53, "web-interface-example"]], "What if Trial_Path didn\u2019t also create a First Node Line?": [[131, null]], "What is Node Line?": [[127, null]], "What is difference between Passage Filter and Passage Reranker?": [[86, null]], "What is pass_compressor?": [[83, null]], "What is pass_passage_augmenter?": [[80, null]], "What is pass_passage_filter?": [[86, null]], "What is pass_query_expansion?": [[116, null]], "What is pass_reranker?": [[102, null]], "What is passage?": [[40, null]], "What is tuple in the yaml file?": [[122, null]], "When you have existing qa data": [[40, "when-you-have-existing-qa-data"]], "Why use Gradio instead of Streamlit?": [[53, null]], "Why use openai_llm module?": [[76, "why-use-openai-llm-module"]], "Why use python command?": [[131, null]], "Why use vllm module?": [[77, "why-use-vllm-module"]], "Window Replacement": [[112, null]], "Write custom config yaml file": [[131, null]], "Writing the Config YAML File": [[60, "writing-the-config-yaml-file"], [61, "writing-the-config-yaml-file"], [63, "writing-the-config-yaml-file"], [64, "writing-the-config-yaml-file"]], "YAML File Setting Guide": [[44, "yaml-file-setting-guide"]], "[Node Line] summary.csv": [[123, "node-line-summary-csv"]], "[Node] summary.csv": [[123, "node-summary-csv"]], "[trial] summary.csv": [[123, "trial-summary-csv"]], "autorag": [[31, null]], "autorag package": [[0, null]], "autorag.chunker module": [[0, "autorag-chunker-module"]], "autorag.cli module": [[0, "autorag-cli-module"]], "autorag.dashboard module": [[0, "module-autorag.dashboard"]], "autorag.data package": [[1, null]], "autorag.data.chunk package": [[2, null]], "autorag.data.chunk.base module": [[2, "autorag-data-chunk-base-module"]], "autorag.data.chunk.langchain_chunk module": [[2, "autorag-data-chunk-langchain-chunk-module"]], "autorag.data.chunk.llama_index_chunk module": [[2, "autorag-data-chunk-llama-index-chunk-module"]], "autorag.data.chunk.run module": [[2, "autorag-data-chunk-run-module"]], "autorag.data.corpus package": [[3, null]], "autorag.data.corpus.langchain module": [[3, "autorag-data-corpus-langchain-module"]], "autorag.data.corpus.llama_index module": [[3, "autorag-data-corpus-llama-index-module"]], "autorag.data.legacy package": [[4, null]], "autorag.data.legacy.corpus package": [[5, null]], "autorag.data.legacy.corpus.langchain module": [[5, "module-autorag.data.legacy.corpus.langchain"]], "autorag.data.legacy.corpus.llama_index module": [[5, "module-autorag.data.legacy.corpus.llama_index"]], "autorag.data.legacy.qacreation package": [[6, null]], "autorag.data.legacy.qacreation.base module": [[6, "autorag-data-legacy-qacreation-base-module"]], "autorag.data.legacy.qacreation.llama_index module": [[6, "autorag-data-legacy-qacreation-llama-index-module"]], "autorag.data.legacy.qacreation.ragas module": [[6, "autorag-data-legacy-qacreation-ragas-module"]], "autorag.data.legacy.qacreation.simple module": [[6, "autorag-data-legacy-qacreation-simple-module"]], "autorag.data.parse package": [[7, null]], "autorag.data.parse.base module": [[7, "module-autorag.data.parse.base"]], "autorag.data.parse.clova module": [[7, "autorag-data-parse-clova-module"]], "autorag.data.parse.langchain_parse module": [[7, "module-autorag.data.parse.langchain_parse"]], "autorag.data.parse.llamaparse module": [[7, "module-autorag.data.parse.llamaparse"]], "autorag.data.parse.run module": [[7, "module-autorag.data.parse.run"]], "autorag.data.parse.table_hybrid_parse module": [[7, "autorag-data-parse-table-hybrid-parse-module"]], "autorag.data.qa package": [[8, null]], "autorag.data.qa.evolve package": [[9, null]], "autorag.data.qa.evolve.llama_index_query_evolve module": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve"]], "autorag.data.qa.evolve.openai_query_evolve module": [[9, "module-autorag.data.qa.evolve.openai_query_evolve"]], "autorag.data.qa.evolve.prompt module": [[9, "module-autorag.data.qa.evolve.prompt"]], "autorag.data.qa.extract_evidence module": [[8, "module-autorag.data.qa.extract_evidence"]], "autorag.data.qa.filter package": [[10, null]], "autorag.data.qa.filter.dontknow module": [[10, "module-autorag.data.qa.filter.dontknow"]], "autorag.data.qa.filter.passage_dependency module": [[10, "module-autorag.data.qa.filter.passage_dependency"]], "autorag.data.qa.filter.prompt module": [[10, "module-autorag.data.qa.filter.prompt"]], "autorag.data.qa.generation_gt package": [[11, null]], "autorag.data.qa.generation_gt.base module": [[11, "module-autorag.data.qa.generation_gt.base"]], "autorag.data.qa.generation_gt.llama_index_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt"]], "autorag.data.qa.generation_gt.openai_gen_gt module": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt"]], "autorag.data.qa.generation_gt.prompt module": [[11, "module-autorag.data.qa.generation_gt.prompt"]], "autorag.data.qa.query package": [[12, null]], "autorag.data.qa.query.llama_gen_query module": [[12, "autorag-data-qa-query-llama-gen-query-module"]], "autorag.data.qa.query.openai_gen_query module": [[12, "autorag-data-qa-query-openai-gen-query-module"]], "autorag.data.qa.query.prompt module": [[12, "autorag-data-qa-query-prompt-module"]], "autorag.data.qa.sample module": [[8, "module-autorag.data.qa.sample"]], "autorag.data.qa.schema module": [[8, "module-autorag.data.qa.schema"]], "autorag.data.qacreation package": [[13, null]], "autorag.data.qacreation.base module": [[13, "autorag-data-qacreation-base-module"]], "autorag.data.qacreation.llama_index module": [[13, "autorag-data-qacreation-llama-index-module"]], "autorag.data.qacreation.ragas module": [[13, "autorag-data-qacreation-ragas-module"]], "autorag.data.qacreation.simple module": [[13, "autorag-data-qacreation-simple-module"]], "autorag.data.utils package": [[14, null]], "autorag.data.utils.util module": [[14, "module-autorag.data.utils.util"]], "autorag.deploy package": [[15, null]], "autorag.deploy.api module": [[15, "module-autorag.deploy.api"]], "autorag.deploy.base module": [[15, "module-autorag.deploy.base"]], "autorag.deploy.gradio module": [[15, "module-autorag.deploy.gradio"]], "autorag.evaluation package": [[16, null]], "autorag.evaluation.generation module": [[16, "autorag-evaluation-generation-module"]], "autorag.evaluation.metric package": [[17, null]], "autorag.evaluation.metric.deepeval_prompt module": [[17, "autorag-evaluation-metric-deepeval-prompt-module"]], "autorag.evaluation.metric.generation module": [[17, "autorag-evaluation-metric-generation-module"]], "autorag.evaluation.metric.retrieval module": [[17, "autorag-evaluation-metric-retrieval-module"]], "autorag.evaluation.metric.retrieval_contents module": [[17, "autorag-evaluation-metric-retrieval-contents-module"]], "autorag.evaluation.metric.util module": [[17, "autorag-evaluation-metric-util-module"]], "autorag.evaluation.retrieval module": [[16, "autorag-evaluation-retrieval-module"]], "autorag.evaluation.retrieval_contents module": [[16, "autorag-evaluation-retrieval-contents-module"]], "autorag.evaluation.util module": [[16, "autorag-evaluation-util-module"]], "autorag.evaluator module": [[0, "autorag-evaluator-module"]], "autorag.node_line module": [[0, "module-autorag.node_line"]], "autorag.nodes package": [[18, null]], "autorag.nodes.generator package": [[19, null]], "autorag.nodes.generator.base module": [[19, "module-autorag.nodes.generator.base"]], "autorag.nodes.generator.llama_index_llm module": [[19, "module-autorag.nodes.generator.llama_index_llm"]], "autorag.nodes.generator.openai_llm module": [[19, "module-autorag.nodes.generator.openai_llm"]], "autorag.nodes.generator.run module": [[19, "autorag-nodes-generator-run-module"]], "autorag.nodes.generator.vllm module": [[19, "module-autorag.nodes.generator.vllm"]], "autorag.nodes.passageaugmenter package": [[20, null]], "autorag.nodes.passageaugmenter.base module": [[20, "autorag-nodes-passageaugmenter-base-module"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter module": [[20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.prev_next_augmenter module": [[20, "autorag-nodes-passageaugmenter-prev-next-augmenter-module"]], "autorag.nodes.passageaugmenter.run module": [[20, "autorag-nodes-passageaugmenter-run-module"]], "autorag.nodes.passagecompressor package": [[21, null]], "autorag.nodes.passagecompressor.base module": [[21, "module-autorag.nodes.passagecompressor.base"]], "autorag.nodes.passagecompressor.longllmlingua module": [[21, "module-autorag.nodes.passagecompressor.longllmlingua"]], "autorag.nodes.passagecompressor.pass_compressor module": [[21, "module-autorag.nodes.passagecompressor.pass_compressor"]], "autorag.nodes.passagecompressor.refine module": [[21, "module-autorag.nodes.passagecompressor.refine"]], "autorag.nodes.passagecompressor.run module": [[21, "autorag-nodes-passagecompressor-run-module"]], "autorag.nodes.passagecompressor.tree_summarize module": [[21, "module-autorag.nodes.passagecompressor.tree_summarize"]], "autorag.nodes.passagefilter package": [[22, null]], "autorag.nodes.passagefilter.base module": [[22, "autorag-nodes-passagefilter-base-module"]], "autorag.nodes.passagefilter.pass_passage_filter module": [[22, "module-autorag.nodes.passagefilter.pass_passage_filter"]], "autorag.nodes.passagefilter.percentile_cutoff module": [[22, "module-autorag.nodes.passagefilter.percentile_cutoff"]], "autorag.nodes.passagefilter.recency module": [[22, "module-autorag.nodes.passagefilter.recency"]], "autorag.nodes.passagefilter.run module": [[22, "autorag-nodes-passagefilter-run-module"]], "autorag.nodes.passagefilter.similarity_percentile_cutoff module": [[22, "autorag-nodes-passagefilter-similarity-percentile-cutoff-module"]], "autorag.nodes.passagefilter.similarity_threshold_cutoff module": [[22, "autorag-nodes-passagefilter-similarity-threshold-cutoff-module"]], "autorag.nodes.passagefilter.threshold_cutoff module": [[22, "autorag-nodes-passagefilter-threshold-cutoff-module"]], "autorag.nodes.passagereranker package": [[23, null]], "autorag.nodes.passagereranker.base module": [[23, "module-autorag.nodes.passagereranker.base"]], "autorag.nodes.passagereranker.cohere module": [[23, "module-autorag.nodes.passagereranker.cohere"]], "autorag.nodes.passagereranker.colbert module": [[23, "module-autorag.nodes.passagereranker.colbert"]], "autorag.nodes.passagereranker.flag_embedding module": [[23, "module-autorag.nodes.passagereranker.flag_embedding"]], "autorag.nodes.passagereranker.flag_embedding_llm module": [[23, "module-autorag.nodes.passagereranker.flag_embedding_llm"]], "autorag.nodes.passagereranker.flashrank module": [[23, "module-autorag.nodes.passagereranker.flashrank"]], "autorag.nodes.passagereranker.jina module": [[23, "module-autorag.nodes.passagereranker.jina"]], "autorag.nodes.passagereranker.koreranker module": [[23, "module-autorag.nodes.passagereranker.koreranker"]], "autorag.nodes.passagereranker.mixedbreadai module": [[23, "module-autorag.nodes.passagereranker.mixedbreadai"]], "autorag.nodes.passagereranker.monot5 module": [[23, "module-autorag.nodes.passagereranker.monot5"]], "autorag.nodes.passagereranker.openvino module": [[23, "module-autorag.nodes.passagereranker.openvino"]], "autorag.nodes.passagereranker.pass_reranker module": [[23, "module-autorag.nodes.passagereranker.pass_reranker"]], "autorag.nodes.passagereranker.rankgpt module": [[23, "module-autorag.nodes.passagereranker.rankgpt"]], "autorag.nodes.passagereranker.run module": [[23, "autorag-nodes-passagereranker-run-module"]], "autorag.nodes.passagereranker.sentence_transformer module": [[23, "module-autorag.nodes.passagereranker.sentence_transformer"]], "autorag.nodes.passagereranker.tart package": [[24, null]], "autorag.nodes.passagereranker.tart.modeling_enc_t5 module": [[24, "autorag-nodes-passagereranker-tart-modeling-enc-t5-module"]], "autorag.nodes.passagereranker.tart.tart module": [[24, "autorag-nodes-passagereranker-tart-tart-module"]], "autorag.nodes.passagereranker.tart.tokenization_enc_t5 module": [[24, "autorag-nodes-passagereranker-tart-tokenization-enc-t5-module"]], "autorag.nodes.passagereranker.time_reranker module": [[23, "module-autorag.nodes.passagereranker.time_reranker"]], "autorag.nodes.passagereranker.upr module": [[23, "module-autorag.nodes.passagereranker.upr"]], "autorag.nodes.passagereranker.voyageai module": [[23, "module-autorag.nodes.passagereranker.voyageai"]], "autorag.nodes.promptmaker package": [[25, null]], "autorag.nodes.promptmaker.base module": [[25, "module-autorag.nodes.promptmaker.base"]], "autorag.nodes.promptmaker.fstring module": [[25, "module-autorag.nodes.promptmaker.fstring"]], "autorag.nodes.promptmaker.long_context_reorder module": [[25, "module-autorag.nodes.promptmaker.long_context_reorder"]], "autorag.nodes.promptmaker.run module": [[25, "autorag-nodes-promptmaker-run-module"]], "autorag.nodes.promptmaker.window_replacement module": [[25, "module-autorag.nodes.promptmaker.window_replacement"]], "autorag.nodes.queryexpansion package": [[26, null]], "autorag.nodes.queryexpansion.base module": [[26, "module-autorag.nodes.queryexpansion.base"]], "autorag.nodes.queryexpansion.hyde module": [[26, "module-autorag.nodes.queryexpansion.hyde"]], "autorag.nodes.queryexpansion.multi_query_expansion module": [[26, "module-autorag.nodes.queryexpansion.multi_query_expansion"]], "autorag.nodes.queryexpansion.pass_query_expansion module": [[26, "module-autorag.nodes.queryexpansion.pass_query_expansion"]], "autorag.nodes.queryexpansion.query_decompose module": [[26, "module-autorag.nodes.queryexpansion.query_decompose"]], "autorag.nodes.queryexpansion.run module": [[26, "autorag-nodes-queryexpansion-run-module"]], "autorag.nodes.retrieval package": [[27, null]], "autorag.nodes.retrieval.base module": [[27, "module-autorag.nodes.retrieval.base"]], "autorag.nodes.retrieval.bm25 module": [[27, "module-autorag.nodes.retrieval.bm25"]], "autorag.nodes.retrieval.hybrid_cc module": [[27, "module-autorag.nodes.retrieval.hybrid_cc"]], "autorag.nodes.retrieval.hybrid_rrf module": [[27, "module-autorag.nodes.retrieval.hybrid_rrf"]], "autorag.nodes.retrieval.run module": [[27, "autorag-nodes-retrieval-run-module"]], "autorag.nodes.retrieval.vectordb module": [[27, "autorag-nodes-retrieval-vectordb-module"]], "autorag.nodes.util module": [[18, "module-autorag.nodes.util"]], "autorag.parser module": [[0, "module-autorag.parser"]], "autorag.schema package": [[28, null]], "autorag.schema.base module": [[28, "module-autorag.schema.base"]], "autorag.schema.metricinput module": [[28, "module-autorag.schema.metricinput"]], "autorag.schema.module module": [[28, "module-autorag.schema.module"]], "autorag.schema.node module": [[28, "module-autorag.schema.node"]], "autorag.strategy module": [[0, "module-autorag.strategy"]], "autorag.support module": [[0, "module-autorag.support"]], "autorag.utils package": [[29, null]], "autorag.utils.preprocess module": [[29, "module-autorag.utils.preprocess"]], "autorag.utils.util module": [[29, "module-autorag.utils.util"]], "autorag.validator module": [[0, "autorag-validator-module"]], "autorag.vectordb package": [[30, null]], "autorag.vectordb.base module": [[30, "autorag-vectordb-base-module"]], "autorag.vectordb.chroma module": [[30, "autorag-vectordb-chroma-module"]], "autorag.vectordb.couchbase module": [[30, "autorag-vectordb-couchbase-module"]], "autorag.vectordb.milvus module": [[30, "autorag-vectordb-milvus-module"]], "autorag.vectordb.pinecone module": [[30, "autorag-vectordb-pinecone-module"]], "autorag.vectordb.qdrant module": [[30, "autorag-vectordb-qdrant-module"]], "autorag.vectordb.weaviate module": [[30, "autorag-vectordb-weaviate-module"]], "autorag.web module": [[0, "module-autorag.web"]], "cohere_reranker": [[92, null]], "config.yaml": [[123, "config-yaml"]], "contents": [[36, "contents"]], "curl Commands": [[52, "curl-commands"]], "data": [[123, "data"]], "doc_id": [[36, "doc-id"]], "generation_gt": [[36, "generation-gt"]], "how the score is determined?": [[71, "how-the-score-is-determined"]], "jina_reranker": [[97, null]], "ko_kiwi (For Korean \ud83c\uddf0\ud83c\uddf7)": [[117, "ko-kiwi-for-korean"]], "ko_kkma (For Korean \ud83c\uddf0\ud83c\uddf7)": [[117, "ko-kkma-for-korean"]], "ko_okt (For Korean \ud83c\uddf0\ud83c\uddf7)": [[117, "ko-okt-for-korean"]], "llama_index LLM": [[75, null]], "metadata": [[36, "metadata"]], "path (Optional, but recommended)": [[36, "path-optional-but-recommended"]], "porter_stemmer": [[117, "porter-stemmer"]], "pre_retrieve_node_line": [[123, "pre-retrieve-node-line"]], "qid": [[36, "qid"]], "query": [[36, "query"]], "query_expansion": [[123, "query-expansion"]], "resources": [[123, "resources"]], "retrieval_gt": [[36, "retrieval-gt"]], "retrieve_node_line": [[123, "retrieve-node-line"]], "sem_score": [[74, null]], "space": [[117, "space"]], "start_end_idx (Optional but recommended)": [[36, "start-end-idx-optional-but-recommended"]], "sudachipy (For Japanese \ud83c\uddef\ud83c\uddf5)": [[117, "sudachipy-for-japanese"]], "trial": [[123, "trial"]], "trial.json": [[123, "trial-json"]], "v0.3 migration guide": [[73, "v0-3-migration-guide"]], "v0.3.7 migration guide": [[73, "v0-3-7-migration-guide"]], "vLLM API": [[78, null]], "vllm": [[77, null]], "voyageai_reranker": [[108, null]], "\u2705Apply Basic Example": [[55, "apply-basic-example"], [55, "id2"], [55, "id4"], [55, "id6"], [55, "id8"], [55, "id10"], [56, "apply-basic-example"], [56, "id2"], [56, "id4"]], "\u2705Basic Example": [[55, "basic-example"], [56, "basic-example"]], "\u2757How to use specific G-Eval metrics": [[54, "how-to-use-specific-g-eval-metrics"]], "\u2757Must have Parameter": [[42, "must-have-parameter"]], "\u2757Restart a trial if an error occurs during the trial": [[131, "restart-a-trial-if-an-error-occurs-during-the-trial"]], "\u2757\ufe0fHybrid additional explanation": [[118, "hybrid-additional-explanation"], [119, "hybrid-additional-explanation"]], "\ud83c\udfc3\u200d\u2642\ufe0f Getting Started": [[58, "getting-started"]], "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Ecosystem": [[58, "ecosystem"]], "\ud83d\udccc API Needed": [[42, "api-needed"]], "\ud83d\udccc Definition": [[54, "id4"]], "\ud83d\udccc Parameter: data_path_glob": [[38, "parameter-data-path-glob"], [44, "parameter-data-path-glob"]], "\ud83d\udcccDefinition": [[54, "definition"], [54, "id1"], [54, "id2"], [54, "id3"], [54, "id5"], [55, "definition"], [55, "id1"], [55, "id3"], [55, "id5"], [55, "id7"], [55, "id9"], [56, "definition"], [56, "id1"], [56, "id3"]], "\ud83d\udd0e Definition": [[74, "definition"], [80, "definition"], [83, "definition"], [86, "definition"], [102, "definition"], [111, "definition"], [116, "definition"], [120, "definition"]], "\ud83d\udd22 Parameters": [[74, "parameters"], [83, "parameters"], [102, "parameters"], [111, "parameters"], [116, "parameters"], [120, "parameters"]], "\ud83d\udde3\ufe0f Talk with Founders": [[58, "talk-with-founders"]], "\ud83d\ude80 AutoRAG GUI": [[58, "autorag-gui"]], "\ud83d\ude80 Road to Modular RAG": [[127, "id1"]], "\ud83e\udd37\u200d\u2642\ufe0f What is Modular RAG?": [[127, "what-is-modular-rag"]], "\ud83e\udd37\u200d\u2642\ufe0f Why AutoRAG?": [[58, "why-autorag"]], "\ud83e\udd38 Benefits": [[80, "benefits"], [83, "benefits"], [86, "benefits"], [102, "benefits"], [116, "benefits"]], "\ud83e\udd38\u200d\u2642\ufe0f How can AutoRAG helps?": [[58, "how-can-autorag-helps"]]}, "docnames": ["api_spec/autorag", "api_spec/autorag.data", "api_spec/autorag.data.chunk", "api_spec/autorag.data.corpus", "api_spec/autorag.data.legacy", "api_spec/autorag.data.legacy.corpus", "api_spec/autorag.data.legacy.qacreation", "api_spec/autorag.data.parse", "api_spec/autorag.data.qa", "api_spec/autorag.data.qa.evolve", "api_spec/autorag.data.qa.filter", "api_spec/autorag.data.qa.generation_gt", "api_spec/autorag.data.qa.query", "api_spec/autorag.data.qacreation", "api_spec/autorag.data.utils", "api_spec/autorag.deploy", "api_spec/autorag.evaluation", "api_spec/autorag.evaluation.metric", "api_spec/autorag.nodes", "api_spec/autorag.nodes.generator", "api_spec/autorag.nodes.passageaugmenter", "api_spec/autorag.nodes.passagecompressor", "api_spec/autorag.nodes.passagefilter", "api_spec/autorag.nodes.passagereranker", "api_spec/autorag.nodes.passagereranker.tart", "api_spec/autorag.nodes.promptmaker", "api_spec/autorag.nodes.queryexpansion", "api_spec/autorag.nodes.retrieval", "api_spec/autorag.schema", "api_spec/autorag.utils", "api_spec/autorag.vectordb", "api_spec/modules", "data_creation/chunk/chunk", "data_creation/chunk/langchain_chunk", "data_creation/chunk/llama_index_chunk", "data_creation/data_creation", "data_creation/data_format", "data_creation/legacy/legacy", "data_creation/legacy/parse", "data_creation/legacy/ragas", "data_creation/legacy/tutorial", "data_creation/parse/clova", "data_creation/parse/langchain_parse", "data_creation/parse/llama_parse", "data_creation/parse/parse", "data_creation/parse/table_hybrid_parse", "data_creation/qa_creation/answer_gen", "data_creation/qa_creation/evolve", "data_creation/qa_creation/filter", "data_creation/qa_creation/qa_creation", "data_creation/qa_creation/query_gen", "data_creation/tutorial", "deploy/api_endpoint", "deploy/web", "evaluate_metrics/generation", "evaluate_metrics/retrieval", "evaluate_metrics/retrieval_contents", "gui/gui", "index", "install", "integration/llm/aws_bedrock", "integration/llm/huggingface_llm", "integration/llm/llm", "integration/llm/nvidia_nim", "integration/llm/ollama", "integration/vectordb/chroma", "integration/vectordb/couchbase", "integration/vectordb/milvus", "integration/vectordb/pinecone", "integration/vectordb/qdrant", "integration/vectordb/vectordb", "integration/vectordb/weaviate", "local_model", "migration", "nodes/generator/generator", "nodes/generator/llama_index_llm", "nodes/generator/openai_llm", "nodes/generator/vllm", "nodes/generator/vllm_api", "nodes/index", "nodes/passage_augmenter/passage_augmenter", "nodes/passage_augmenter/prev_next_augmenter", "nodes/passage_compressor/longllmlingua", "nodes/passage_compressor/passage_compressor", "nodes/passage_compressor/refine", "nodes/passage_compressor/tree_summarize", "nodes/passage_filter/passage_filter", "nodes/passage_filter/percentile_cutoff", "nodes/passage_filter/recency_filter", "nodes/passage_filter/similarity_percentile_cutoff", "nodes/passage_filter/similarity_threshold_cutoff", "nodes/passage_filter/threshold_cutoff", "nodes/passage_reranker/cohere", "nodes/passage_reranker/colbert", "nodes/passage_reranker/flag_embedding_llm_reranker", "nodes/passage_reranker/flag_embedding_reranker", "nodes/passage_reranker/flashrank_reranker", "nodes/passage_reranker/jina_reranker", "nodes/passage_reranker/koreranker", "nodes/passage_reranker/mixedbreadai_reranker", "nodes/passage_reranker/monot5", "nodes/passage_reranker/openvino_reranker", "nodes/passage_reranker/passage_reranker", "nodes/passage_reranker/rankgpt", "nodes/passage_reranker/sentence_transformer_reranker", "nodes/passage_reranker/tart", "nodes/passage_reranker/time_reranker", "nodes/passage_reranker/upr", "nodes/passage_reranker/voyageai_reranker", "nodes/prompt_maker/fstring", "nodes/prompt_maker/long_context_reorder", "nodes/prompt_maker/prompt_maker", "nodes/prompt_maker/window_replacement", "nodes/query_expansion/hyde", "nodes/query_expansion/multi_query_expansion", "nodes/query_expansion/query_decompose", "nodes/query_expansion/query_expansion", "nodes/retrieval/bm25", "nodes/retrieval/hybrid_cc", "nodes/retrieval/hybrid_rrf", "nodes/retrieval/retrieval", "nodes/retrieval/vectordb", "optimization/custom_config", "optimization/folder_structure", "optimization/optimization", "optimization/sample_config", "optimization/strategies", "roadmap/modular_rag", "structure", "test_your_rag", "troubleshooting", "tutorial"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api_spec/autorag.rst", "api_spec/autorag.data.rst", "api_spec/autorag.data.chunk.rst", "api_spec/autorag.data.corpus.rst", "api_spec/autorag.data.legacy.rst", "api_spec/autorag.data.legacy.corpus.rst", "api_spec/autorag.data.legacy.qacreation.rst", "api_spec/autorag.data.parse.rst", "api_spec/autorag.data.qa.rst", "api_spec/autorag.data.qa.evolve.rst", "api_spec/autorag.data.qa.filter.rst", "api_spec/autorag.data.qa.generation_gt.rst", "api_spec/autorag.data.qa.query.rst", "api_spec/autorag.data.qacreation.rst", "api_spec/autorag.data.utils.rst", "api_spec/autorag.deploy.rst", "api_spec/autorag.evaluation.rst", "api_spec/autorag.evaluation.metric.rst", "api_spec/autorag.nodes.rst", "api_spec/autorag.nodes.generator.rst", "api_spec/autorag.nodes.passageaugmenter.rst", "api_spec/autorag.nodes.passagecompressor.rst", "api_spec/autorag.nodes.passagefilter.rst", "api_spec/autorag.nodes.passagereranker.rst", "api_spec/autorag.nodes.passagereranker.tart.rst", "api_spec/autorag.nodes.promptmaker.rst", "api_spec/autorag.nodes.queryexpansion.rst", "api_spec/autorag.nodes.retrieval.rst", "api_spec/autorag.schema.rst", "api_spec/autorag.utils.rst", "api_spec/autorag.vectordb.rst", "api_spec/modules.rst", "data_creation/chunk/chunk.md", "data_creation/chunk/langchain_chunk.md", "data_creation/chunk/llama_index_chunk.md", "data_creation/data_creation.md", "data_creation/data_format.md", "data_creation/legacy/legacy.md", "data_creation/legacy/parse.md", "data_creation/legacy/ragas.md", "data_creation/legacy/tutorial.md", "data_creation/parse/clova.md", "data_creation/parse/langchain_parse.md", "data_creation/parse/llama_parse.md", "data_creation/parse/parse.md", "data_creation/parse/table_hybrid_parse.md", "data_creation/qa_creation/answer_gen.md", "data_creation/qa_creation/evolve.md", "data_creation/qa_creation/filter.md", "data_creation/qa_creation/qa_creation.md", "data_creation/qa_creation/query_gen.md", "data_creation/tutorial.md", "deploy/api_endpoint.md", "deploy/web.md", "evaluate_metrics/generation.md", "evaluate_metrics/retrieval.md", "evaluate_metrics/retrieval_contents.md", "gui/gui.md", "index.rst", "install.md", "integration/llm/aws_bedrock.md", "integration/llm/huggingface_llm.md", "integration/llm/llm.md", "integration/llm/nvidia_nim.md", "integration/llm/ollama.md", "integration/vectordb/chroma.md", "integration/vectordb/couchbase.md", "integration/vectordb/milvus.md", "integration/vectordb/pinecone.md", "integration/vectordb/qdrant.md", "integration/vectordb/vectordb.md", "integration/vectordb/weaviate.md", "local_model.md", "migration.md", "nodes/generator/generator.md", "nodes/generator/llama_index_llm.md", "nodes/generator/openai_llm.md", "nodes/generator/vllm.md", "nodes/generator/vllm_api.md", "nodes/index.md", "nodes/passage_augmenter/passage_augmenter.md", "nodes/passage_augmenter/prev_next_augmenter.md", "nodes/passage_compressor/longllmlingua.md", "nodes/passage_compressor/passage_compressor.md", "nodes/passage_compressor/refine.md", "nodes/passage_compressor/tree_summarize.md", "nodes/passage_filter/passage_filter.md", "nodes/passage_filter/percentile_cutoff.md", "nodes/passage_filter/recency_filter.md", "nodes/passage_filter/similarity_percentile_cutoff.md", "nodes/passage_filter/similarity_threshold_cutoff.md", "nodes/passage_filter/threshold_cutoff.md", "nodes/passage_reranker/cohere.md", "nodes/passage_reranker/colbert.md", "nodes/passage_reranker/flag_embedding_llm_reranker.md", "nodes/passage_reranker/flag_embedding_reranker.md", "nodes/passage_reranker/flashrank_reranker.md", "nodes/passage_reranker/jina_reranker.md", "nodes/passage_reranker/koreranker.md", "nodes/passage_reranker/mixedbreadai_reranker.md", "nodes/passage_reranker/monot5.md", "nodes/passage_reranker/openvino_reranker.md", "nodes/passage_reranker/passage_reranker.md", "nodes/passage_reranker/rankgpt.md", "nodes/passage_reranker/sentence_transformer_reranker.md", "nodes/passage_reranker/tart.md", "nodes/passage_reranker/time_reranker.md", "nodes/passage_reranker/upr.md", "nodes/passage_reranker/voyageai_reranker.md", "nodes/prompt_maker/fstring.md", "nodes/prompt_maker/long_context_reorder.md", "nodes/prompt_maker/prompt_maker.md", "nodes/prompt_maker/window_replacement.md", "nodes/query_expansion/hyde.md", "nodes/query_expansion/multi_query_expansion.md", "nodes/query_expansion/query_decompose.md", "nodes/query_expansion/query_expansion.md", "nodes/retrieval/bm25.md", "nodes/retrieval/hybrid_cc.md", "nodes/retrieval/hybrid_rrf.md", "nodes/retrieval/retrieval.md", "nodes/retrieval/vectordb.md", "optimization/custom_config.md", "optimization/folder_structure.md", "optimization/optimization.md", "optimization/sample_config.md", "optimization/strategies.md", "roadmap/modular_rag.md", "structure.md", "test_your_rag.md", "troubleshooting.md", "tutorial.md"], "indexentries": {"acomplete() (autorag.autoragbedrock method)": [[0, "autorag.AutoRAGBedrock.acomplete", false]], "add_essential_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata", false]], "add_essential_metadata_llama_text_node() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.add_essential_metadata_llama_text_node", false]], "add_gen_gt() (in module autorag.data.qa.generation_gt.base)": [[11, "autorag.data.qa.generation_gt.base.add_gen_gt", false]], "aflatten_apply() (in module autorag.utils.util)": [[29, "autorag.utils.util.aflatten_apply", false]], "answer (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.answer", false]], "apirunner (class in autorag.deploy.api)": [[15, "autorag.deploy.api.ApiRunner", false]], "apply_recursive() (in module autorag.utils.util)": [[29, "autorag.utils.util.apply_recursive", false]], "astream() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.astream", false]], "astream() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.astream", false]], "astream() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.astream", false]], "astream() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.astream", false]], "async_postprocess_nodes() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_postprocess_nodes", false]], "async_run_llm() (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank method)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.async_run_llm", false]], "asyncrankgptrerank (class in autorag.nodes.passagereranker.rankgpt)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank", false]], "autorag": [[0, "module-autorag", false]], "autorag.dashboard": [[0, "module-autorag.dashboard", false]], "autorag.data": [[1, "module-autorag.data", false]], "autorag.data.legacy": [[4, "module-autorag.data.legacy", false]], "autorag.data.legacy.corpus": [[5, "module-autorag.data.legacy.corpus", false]], "autorag.data.legacy.corpus.langchain": [[5, "module-autorag.data.legacy.corpus.langchain", false]], "autorag.data.legacy.corpus.llama_index": [[5, "module-autorag.data.legacy.corpus.llama_index", false]], "autorag.data.parse": [[7, "module-autorag.data.parse", false]], "autorag.data.parse.base": [[7, "module-autorag.data.parse.base", false]], "autorag.data.parse.langchain_parse": [[7, "module-autorag.data.parse.langchain_parse", false]], "autorag.data.parse.llamaparse": [[7, "module-autorag.data.parse.llamaparse", false]], "autorag.data.parse.run": [[7, "module-autorag.data.parse.run", false]], "autorag.data.qa": [[8, "module-autorag.data.qa", false]], "autorag.data.qa.evolve": [[9, "module-autorag.data.qa.evolve", false]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false]], "autorag.data.qa.evolve.openai_query_evolve": [[9, "module-autorag.data.qa.evolve.openai_query_evolve", false]], "autorag.data.qa.evolve.prompt": [[9, "module-autorag.data.qa.evolve.prompt", false]], "autorag.data.qa.extract_evidence": [[8, "module-autorag.data.qa.extract_evidence", false]], "autorag.data.qa.filter": [[10, "module-autorag.data.qa.filter", false]], "autorag.data.qa.filter.dontknow": [[10, "module-autorag.data.qa.filter.dontknow", false]], "autorag.data.qa.filter.passage_dependency": [[10, "module-autorag.data.qa.filter.passage_dependency", false]], "autorag.data.qa.filter.prompt": [[10, "module-autorag.data.qa.filter.prompt", false]], "autorag.data.qa.generation_gt": [[11, "module-autorag.data.qa.generation_gt", false]], "autorag.data.qa.generation_gt.base": [[11, "module-autorag.data.qa.generation_gt.base", false]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false]], "autorag.data.qa.generation_gt.prompt": [[11, "module-autorag.data.qa.generation_gt.prompt", false]], "autorag.data.qa.query": [[12, "module-autorag.data.qa.query", false]], "autorag.data.qa.sample": [[8, "module-autorag.data.qa.sample", false]], "autorag.data.qa.schema": [[8, "module-autorag.data.qa.schema", false]], "autorag.data.utils": [[14, "module-autorag.data.utils", false]], "autorag.data.utils.util": [[14, "module-autorag.data.utils.util", false]], "autorag.deploy": [[15, "module-autorag.deploy", false]], "autorag.deploy.api": [[15, "module-autorag.deploy.api", false]], "autorag.deploy.base": [[15, "module-autorag.deploy.base", false]], "autorag.deploy.gradio": [[15, "module-autorag.deploy.gradio", false]], "autorag.node_line": [[0, "module-autorag.node_line", false]], "autorag.nodes": [[18, "module-autorag.nodes", false]], "autorag.nodes.generator": [[19, "module-autorag.nodes.generator", false]], "autorag.nodes.generator.base": [[19, "module-autorag.nodes.generator.base", false]], "autorag.nodes.generator.llama_index_llm": [[19, "module-autorag.nodes.generator.llama_index_llm", false]], "autorag.nodes.generator.openai_llm": [[19, "module-autorag.nodes.generator.openai_llm", false]], "autorag.nodes.generator.vllm": [[19, "module-autorag.nodes.generator.vllm", false]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false]], "autorag.nodes.passagecompressor": [[21, "module-autorag.nodes.passagecompressor", false]], "autorag.nodes.passagecompressor.base": [[21, "module-autorag.nodes.passagecompressor.base", false]], "autorag.nodes.passagecompressor.longllmlingua": [[21, "module-autorag.nodes.passagecompressor.longllmlingua", false]], "autorag.nodes.passagecompressor.pass_compressor": [[21, "module-autorag.nodes.passagecompressor.pass_compressor", false]], "autorag.nodes.passagecompressor.refine": [[21, "module-autorag.nodes.passagecompressor.refine", false]], "autorag.nodes.passagecompressor.tree_summarize": [[21, "module-autorag.nodes.passagecompressor.tree_summarize", false]], "autorag.nodes.passagefilter.pass_passage_filter": [[22, "module-autorag.nodes.passagefilter.pass_passage_filter", false]], "autorag.nodes.passagefilter.percentile_cutoff": [[22, "module-autorag.nodes.passagefilter.percentile_cutoff", false]], "autorag.nodes.passagefilter.recency": [[22, "module-autorag.nodes.passagefilter.recency", false]], "autorag.nodes.passagereranker": [[23, "module-autorag.nodes.passagereranker", false]], "autorag.nodes.passagereranker.base": [[23, "module-autorag.nodes.passagereranker.base", false]], "autorag.nodes.passagereranker.cohere": [[23, "module-autorag.nodes.passagereranker.cohere", false]], "autorag.nodes.passagereranker.colbert": [[23, "module-autorag.nodes.passagereranker.colbert", false]], "autorag.nodes.passagereranker.flag_embedding": [[23, "module-autorag.nodes.passagereranker.flag_embedding", false]], "autorag.nodes.passagereranker.flag_embedding_llm": [[23, "module-autorag.nodes.passagereranker.flag_embedding_llm", false]], "autorag.nodes.passagereranker.flashrank": [[23, "module-autorag.nodes.passagereranker.flashrank", false]], "autorag.nodes.passagereranker.jina": [[23, "module-autorag.nodes.passagereranker.jina", false]], "autorag.nodes.passagereranker.koreranker": [[23, "module-autorag.nodes.passagereranker.koreranker", false]], "autorag.nodes.passagereranker.mixedbreadai": [[23, "module-autorag.nodes.passagereranker.mixedbreadai", false]], "autorag.nodes.passagereranker.monot5": [[23, "module-autorag.nodes.passagereranker.monot5", false]], "autorag.nodes.passagereranker.openvino": [[23, "module-autorag.nodes.passagereranker.openvino", false]], "autorag.nodes.passagereranker.pass_reranker": [[23, "module-autorag.nodes.passagereranker.pass_reranker", false]], "autorag.nodes.passagereranker.rankgpt": [[23, "module-autorag.nodes.passagereranker.rankgpt", false]], "autorag.nodes.passagereranker.sentence_transformer": [[23, "module-autorag.nodes.passagereranker.sentence_transformer", false]], "autorag.nodes.passagereranker.time_reranker": [[23, "module-autorag.nodes.passagereranker.time_reranker", false]], "autorag.nodes.passagereranker.upr": [[23, "module-autorag.nodes.passagereranker.upr", false]], "autorag.nodes.passagereranker.voyageai": [[23, "module-autorag.nodes.passagereranker.voyageai", false]], "autorag.nodes.promptmaker": [[25, "module-autorag.nodes.promptmaker", false]], "autorag.nodes.promptmaker.base": [[25, "module-autorag.nodes.promptmaker.base", false]], "autorag.nodes.promptmaker.fstring": [[25, "module-autorag.nodes.promptmaker.fstring", false]], "autorag.nodes.promptmaker.long_context_reorder": [[25, "module-autorag.nodes.promptmaker.long_context_reorder", false]], "autorag.nodes.promptmaker.window_replacement": [[25, "module-autorag.nodes.promptmaker.window_replacement", false]], "autorag.nodes.queryexpansion": [[26, "module-autorag.nodes.queryexpansion", false]], "autorag.nodes.queryexpansion.base": [[26, "module-autorag.nodes.queryexpansion.base", false]], "autorag.nodes.queryexpansion.hyde": [[26, "module-autorag.nodes.queryexpansion.hyde", false]], "autorag.nodes.queryexpansion.multi_query_expansion": [[26, "module-autorag.nodes.queryexpansion.multi_query_expansion", false]], "autorag.nodes.queryexpansion.pass_query_expansion": [[26, "module-autorag.nodes.queryexpansion.pass_query_expansion", false]], "autorag.nodes.queryexpansion.query_decompose": [[26, "module-autorag.nodes.queryexpansion.query_decompose", false]], "autorag.nodes.retrieval.base": [[27, "module-autorag.nodes.retrieval.base", false]], "autorag.nodes.retrieval.bm25": [[27, "module-autorag.nodes.retrieval.bm25", false]], "autorag.nodes.retrieval.hybrid_cc": [[27, "module-autorag.nodes.retrieval.hybrid_cc", false]], "autorag.nodes.retrieval.hybrid_rrf": [[27, "module-autorag.nodes.retrieval.hybrid_rrf", false]], "autorag.nodes.util": [[18, "module-autorag.nodes.util", false]], "autorag.parser": [[0, "module-autorag.parser", false]], "autorag.schema": [[28, "module-autorag.schema", false]], "autorag.schema.base": [[28, "module-autorag.schema.base", false]], "autorag.schema.metricinput": [[28, "module-autorag.schema.metricinput", false]], "autorag.schema.module": [[28, "module-autorag.schema.module", false]], "autorag.schema.node": [[28, "module-autorag.schema.node", false]], "autorag.strategy": [[0, "module-autorag.strategy", false]], "autorag.support": [[0, "module-autorag.support", false]], "autorag.utils": [[29, "module-autorag.utils", false]], "autorag.utils.preprocess": [[29, "module-autorag.utils.preprocess", false]], "autorag.utils.util": [[29, "module-autorag.utils.util", false]], "autorag.web": [[0, "module-autorag.web", false]], "autoragbedrock (class in autorag)": [[0, "autorag.AutoRAGBedrock", false]], "avoid_empty_result() (in module autorag.strategy)": [[0, "autorag.strategy.avoid_empty_result", false]], "basegenerator (class in autorag.nodes.generator.base)": [[19, "autorag.nodes.generator.base.BaseGenerator", false]], "basemodule (class in autorag.schema.base)": [[28, "autorag.schema.base.BaseModule", false]], "basepassagecompressor (class in autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.BasePassageCompressor", false]], "basepassagereranker (class in autorag.nodes.passagereranker.base)": [[23, "autorag.nodes.passagereranker.base.BasePassageReranker", false]], "basepromptmaker (class in autorag.nodes.promptmaker.base)": [[25, "autorag.nodes.promptmaker.base.BasePromptMaker", false]], "basequeryexpansion (class in autorag.nodes.queryexpansion.base)": [[26, "autorag.nodes.queryexpansion.base.BaseQueryExpansion", false]], "baseretrieval (class in autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.BaseRetrieval", false]], "baserunner (class in autorag.deploy.base)": [[15, "autorag.deploy.base.BaseRunner", false]], "batch_apply() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_apply", false]], "batch_apply() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.batch_apply", false]], "batch_filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.batch_filter", false]], "bm25 (class in autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.BM25", false]], "bm25_ingest() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.bm25_ingest", false]], "bm25_pure() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.bm25_pure", false]], "cast_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.cast_corpus_dataset", false]], "cast_qa_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.cast_qa_dataset", false]], "cast_queries() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.cast_queries", false]], "cast_to_run() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagecompressor.base.basepassagecompressor method)": [[21, "autorag.nodes.passagecompressor.base.BasePassageCompressor.cast_to_run", false]], "cast_to_run() (autorag.nodes.passagereranker.base.basepassagereranker method)": [[23, "autorag.nodes.passagereranker.base.BasePassageReranker.cast_to_run", false]], "cast_to_run() (autorag.nodes.promptmaker.base.basepromptmaker method)": [[25, "autorag.nodes.promptmaker.base.BasePromptMaker.cast_to_run", false]], "cast_to_run() (autorag.nodes.queryexpansion.base.basequeryexpansion method)": [[26, "autorag.nodes.queryexpansion.base.BaseQueryExpansion.cast_to_run", false]], "cast_to_run() (autorag.nodes.retrieval.base.baseretrieval method)": [[27, "autorag.nodes.retrieval.base.BaseRetrieval.cast_to_run", false]], "cast_to_run() (autorag.schema.base.basemodule method)": [[28, "autorag.schema.base.BaseModule.cast_to_run", false]], "chat_box() (in module autorag.web)": [[0, "autorag.web.chat_box", false]], "check_expanded_query() (in module autorag.nodes.queryexpansion.base)": [[26, "autorag.nodes.queryexpansion.base.check_expanded_query", false]], "chunk() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.chunk", false]], "cohere_rerank_pure() (in module autorag.nodes.passagereranker.cohere)": [[23, "autorag.nodes.passagereranker.cohere.cohere_rerank_pure", false]], "coherereranker (class in autorag.nodes.passagereranker.cohere)": [[23, "autorag.nodes.passagereranker.cohere.CohereReranker", false]], "colbertreranker (class in autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.ColbertReranker", false]], "compress_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.compress_ragas", false]], "compress_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.compress_ragas", false]], "compute() (autorag.nodes.passagereranker.upr.uprscorer method)": [[23, "autorag.nodes.passagereranker.upr.UPRScorer.compute", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.conditional_evolve_ragas", false]], "conditional_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.conditional_evolve_ragas", false]], "content (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.content", false]], "convert_datetime_string() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_datetime_string", false]], "convert_env_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_env_in_dict", false]], "convert_inputs_to_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_inputs_to_list", false]], "convert_string_to_tuple_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.convert_string_to_tuple_in_dict", false]], "corpus (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Corpus", false]], "corpus_df_to_langchain_documents() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.corpus_df_to_langchain_documents", false]], "decode_multiple_json_from_bytes() (in module autorag.utils.util)": [[29, "autorag.utils.util.decode_multiple_json_from_bytes", false]], "demojize() (in module autorag.utils.util)": [[29, "autorag.utils.util.demojize", false]], "dict_to_markdown() (in module autorag.utils.util)": [[29, "autorag.utils.util.dict_to_markdown", false]], "dict_to_markdown_table() (in module autorag.utils.util)": [[29, "autorag.utils.util.dict_to_markdown_table", false]], "doc_id (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.doc_id", false]], "dontknow_filter_llama_index() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_llama_index", false]], "dontknow_filter_openai() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_openai", false]], "dontknow_filter_rule_based() (in module autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.dontknow_filter_rule_based", false]], "dynamically_find_function() (in module autorag.support)": [[0, "autorag.support.dynamically_find_function", false]], "embedding_query_content() (in module autorag.utils.util)": [[29, "autorag.utils.util.embedding_query_content", false]], "empty_cuda_cache() (in module autorag.utils.util)": [[29, "autorag.utils.util.empty_cuda_cache", false]], "end_idx (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.end_idx", false]], "evenly_distribute_passages() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.evenly_distribute_passages", false]], "evolved_query (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.evolved_query", false]], "exp_normalize() (in module autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.exp_normalize", false]], "explode() (in module autorag.utils.util)": [[29, "autorag.utils.util.explode", false]], "extract_best_config() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_best_config", false]], "extract_node_line_names() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_node_line_names", false]], "extract_node_strategy() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_node_strategy", false]], "extract_retrieve_passage() (autorag.deploy.api.apirunner method)": [[15, "autorag.deploy.api.ApiRunner.extract_retrieve_passage", false]], "extract_values() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values", false]], "extract_values_from_nodes() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values_from_nodes", false]], "extract_values_from_nodes_strategy() (in module autorag.schema.node)": [[28, "autorag.schema.node.extract_values_from_nodes_strategy", false]], "extract_vectordb_config() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.extract_vectordb_config", false]], "fetch_contents() (in module autorag.utils.util)": [[29, "autorag.utils.util.fetch_contents", false]], "fetch_one_content() (in module autorag.utils.util)": [[29, "autorag.utils.util.fetch_one_content", false]], "file_page (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.file_page", false]], "filepath (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.filepath", false]], "filter() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.filter", false]], "filter_by_threshold() (in module autorag.strategy)": [[0, "autorag.strategy.filter_by_threshold", false]], "filter_dict_keys() (in module autorag.utils.util)": [[29, "autorag.utils.util.filter_dict_keys", false]], "find_key_values() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_key_values", false]], "find_node_dir() (in module autorag.dashboard)": [[0, "autorag.dashboard.find_node_dir", false]], "find_node_summary_files() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_node_summary_files", false]], "find_trial_dir() (in module autorag.utils.util)": [[29, "autorag.utils.util.find_trial_dir", false]], "flag_embedding_run_model() (in module autorag.nodes.passagereranker.flag_embedding)": [[23, "autorag.nodes.passagereranker.flag_embedding.flag_embedding_run_model", false]], "flagembeddingllmreranker (class in autorag.nodes.passagereranker.flag_embedding_llm)": [[23, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker", false]], "flagembeddingreranker (class in autorag.nodes.passagereranker.flag_embedding)": [[23, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker", false]], "flashrank_run_model() (in module autorag.nodes.passagereranker.flashrank)": [[23, "autorag.nodes.passagereranker.flashrank.flashrank_run_model", false]], "flashrankreranker (class in autorag.nodes.passagereranker.flashrank)": [[23, "autorag.nodes.passagereranker.flashrank.FlashRankReranker", false]], "flatmap() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.flatmap", false]], "flatten_apply() (in module autorag.utils.util)": [[29, "autorag.utils.util.flatten_apply", false]], "from_dataframe() (autorag.schema.metricinput.metricinput class method)": [[28, "autorag.schema.metricinput.MetricInput.from_dataframe", false]], "from_dict() (autorag.schema.module.module class method)": [[28, "autorag.schema.module.Module.from_dict", false]], "from_dict() (autorag.schema.node.node class method)": [[28, "autorag.schema.node.Node.from_dict", false]], "from_trial_folder() (autorag.deploy.base.baserunner class method)": [[15, "autorag.deploy.base.BaseRunner.from_trial_folder", false]], "from_yaml() (autorag.deploy.base.baserunner class method)": [[15, "autorag.deploy.base.BaseRunner.from_yaml", false]], "fstring (class in autorag.nodes.promptmaker.fstring)": [[25, "autorag.nodes.promptmaker.fstring.Fstring", false]], "fuse_per_query() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.fuse_per_query", false]], "generated_log_probs (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generated_log_probs", false]], "generated_text (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.generated_text", false]], "generated_texts (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generated_texts", false]], "generation_gt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.generation_gt", false]], "generator_node() (in module autorag.nodes.generator.base)": [[19, "autorag.nodes.generator.base.generator_node", false]], "get_best_row() (in module autorag.utils.util)": [[29, "autorag.utils.util.get_best_row", false]], "get_bm25_pkl_name() (in module autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.get_bm25_pkl_name", false]], "get_bm25_scores() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.get_bm25_scores", false]], "get_colbert_embedding_batch() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.get_colbert_embedding_batch", false]], "get_colbert_score() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.get_colbert_score", false]], "get_event_loop() (in module autorag.utils.util)": [[29, "autorag.utils.util.get_event_loop", false]], "get_file_metadata() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_file_metadata", false]], "get_metric_values() (in module autorag.dashboard)": [[0, "autorag.dashboard.get_metric_values", false]], "get_multi_query_expansion() (in module autorag.nodes.queryexpansion.multi_query_expansion)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.get_multi_query_expansion", false]], "get_param_combinations() (autorag.schema.node.node method)": [[28, "autorag.schema.node.Node.get_param_combinations", false]], "get_param_combinations() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_param_combinations", false]], "get_query_decompose() (in module autorag.nodes.queryexpansion.query_decompose)": [[26, "autorag.nodes.queryexpansion.query_decompose.get_query_decompose", false]], "get_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result", false]], "get_result_o1() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_result_o1", false]], "get_runner() (in module autorag.web)": [[0, "autorag.web.get_runner", false]], "get_start_end_idx() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.get_start_end_idx", false]], "get_structured_result() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.get_structured_result", false]], "get_support_modules() (in module autorag.support)": [[0, "autorag.support.get_support_modules", false]], "get_support_nodes() (in module autorag.support)": [[0, "autorag.support.get_support_nodes", false]], "gradiorunner (class in autorag.deploy.gradio)": [[15, "autorag.deploy.gradio.GradioRunner", false]], "handle_exception() (in module autorag)": [[0, "autorag.handle_exception", false]], "hybrid_cc() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.hybrid_cc", false]], "hybrid_rrf() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.hybrid_rrf", false]], "hybridcc (class in autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.HybridCC", false]], "hybridretrieval (class in autorag.nodes.retrieval.base)": [[27, "autorag.nodes.retrieval.base.HybridRetrieval", false]], "hybridrrf (class in autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF", false]], "hyde (class in autorag.nodes.queryexpansion.hyde)": [[26, "autorag.nodes.queryexpansion.hyde.HyDE", false]], "is_dont_know (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.is_dont_know", false]], "is_fields_notnone() (autorag.schema.metricinput.metricinput method)": [[28, "autorag.schema.metricinput.MetricInput.is_fields_notnone", false]], "is_passage_dependent (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.is_passage_dependent", false]], "jina_reranker_pure() (in module autorag.nodes.passagereranker.jina)": [[23, "autorag.nodes.passagereranker.jina.jina_reranker_pure", false]], "jinareranker (class in autorag.nodes.passagereranker.jina)": [[23, "autorag.nodes.passagereranker.jina.JinaReranker", false]], "koreranker (class in autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.KoReranker", false]], "koreranker_run_model() (in module autorag.nodes.passagereranker.koreranker)": [[23, "autorag.nodes.passagereranker.koreranker.koreranker_run_model", false]], "langchain_documents_to_parquet() (in module autorag.data.legacy.corpus.langchain)": [[5, "autorag.data.legacy.corpus.langchain.langchain_documents_to_parquet", false]], "langchain_parse() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse", false]], "langchain_parse_pure() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.langchain_parse_pure", false]], "lazyinit (class in autorag)": [[0, "autorag.LazyInit", false]], "linked_corpus (autorag.data.qa.schema.qa property)": [[8, "autorag.data.qa.schema.QA.linked_corpus", false]], "linked_raw (autorag.data.qa.schema.corpus property)": [[8, "autorag.data.qa.schema.Corpus.linked_raw", false]], "llama_documents_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_documents_to_parquet", false]], "llama_index_generate_base() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.llama_index_generate_base", false]], "llama_parse() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse", false]], "llama_parse_pure() (in module autorag.data.parse.llamaparse)": [[7, "autorag.data.parse.llamaparse.llama_parse_pure", false]], "llama_text_node_to_parquet() (in module autorag.data.legacy.corpus.llama_index)": [[5, "autorag.data.legacy.corpus.llama_index.llama_text_node_to_parquet", false]], "llamaindexcompressor (class in autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor", false]], "llamaindexllm (class in autorag.nodes.generator.llama_index_llm)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM", false]], "llmlingua_pure() (in module autorag.nodes.passagecompressor.longllmlingua)": [[21, "autorag.nodes.passagecompressor.longllmlingua.llmlingua_pure", false]], "load_bm25_corpus() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.load_bm25_corpus", false]], "load_summary_file() (in module autorag.utils.util)": [[29, "autorag.utils.util.load_summary_file", false]], "load_yaml() (in module autorag.data.utils.util)": [[14, "autorag.data.utils.util.load_yaml", false]], "load_yaml_config() (in module autorag.utils.util)": [[29, "autorag.utils.util.load_yaml_config", false]], "longcontextreorder (class in autorag.nodes.promptmaker.long_context_reorder)": [[25, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder", false]], "longllmlingua (class in autorag.nodes.passagecompressor.longllmlingua)": [[21, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_basic_gen_gt", false]], "make_basic_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_basic_gen_gt", false]], "make_batch() (in module autorag.utils.util)": [[29, "autorag.utils.util.make_batch", false]], "make_combinations() (in module autorag.utils.util)": [[29, "autorag.utils.util.make_combinations", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_concise_gen_gt", false]], "make_concise_gen_gt() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_concise_gen_gt", false]], "make_custom_gen_gt() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_custom_gen_gt", false]], "make_gen_gt_llama_index() (in module autorag.data.qa.generation_gt.llama_index_gen_gt)": [[11, "autorag.data.qa.generation_gt.llama_index_gen_gt.make_gen_gt_llama_index", false]], "make_gen_gt_openai() (in module autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.make_gen_gt_openai", false]], "make_generator_callable_param() (in module autorag.nodes.util)": [[18, "autorag.nodes.util.make_generator_callable_param", false]], "make_llm() (in module autorag.nodes.passagecompressor.base)": [[21, "autorag.nodes.passagecompressor.base.make_llm", false]], "make_node_lines() (in module autorag.node_line)": [[0, "autorag.node_line.make_node_lines", false]], "make_retrieval_gt_contents() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.make_retrieval_gt_contents", false]], "make_trial_summary_md() (in module autorag.dashboard)": [[0, "autorag.dashboard.make_trial_summary_md", false]], "map() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.map", false]], "map() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.map", false]], "map() (autorag.data.qa.schema.raw method)": [[8, "autorag.data.qa.schema.Raw.map", false]], "measure_speed() (in module autorag.strategy)": [[0, "autorag.strategy.measure_speed", false]], "metricinput (class in autorag.schema.metricinput)": [[28, "autorag.schema.metricinput.MetricInput", false]], "mixedbreadai_rerank_pure() (in module autorag.nodes.passagereranker.mixedbreadai)": [[23, "autorag.nodes.passagereranker.mixedbreadai.mixedbreadai_rerank_pure", false]], "mixedbreadaireranker (class in autorag.nodes.passagereranker.mixedbreadai)": [[23, "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker", false]], "model_computed_fields (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_computed_fields", false]], "model_computed_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.model_computed_fields", false]], "model_computed_fields (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_computed_fields", false]], "model_computed_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_computed_fields", false]], "model_config (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_config", false]], "model_config (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_config", false]], "model_config (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_config", false]], "model_config (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_config", false]], "model_config (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_config", false]], "model_config (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_config", false]], "model_config (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.model_config", false]], "model_config (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_config", false]], "model_config (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_config", false]], "model_config (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.model_config", false]], "model_config (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_config", false]], "model_config (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_config", false]], "model_fields (autorag.autoragbedrock attribute)": [[0, "autorag.AutoRAGBedrock.model_fields", false]], "model_fields (autorag.data.qa.evolve.openai_query_evolve.response attribute)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.dontknow.response attribute)": [[10, "autorag.data.qa.filter.dontknow.Response.model_fields", false]], "model_fields (autorag.data.qa.filter.passage_dependency.response attribute)": [[10, "autorag.data.qa.filter.passage_dependency.Response.model_fields", false]], "model_fields (autorag.data.qa.generation_gt.openai_gen_gt.response attribute)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response.model_fields", false]], "model_fields (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.model_fields", false]], "model_fields (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.model_fields", false]], "model_fields (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.model_fields", false]], "model_fields (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.model_fields", false]], "model_fields (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.model_fields", false]], "model_fields (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.model_fields", false]], "model_fields (autorag.nodes.passagereranker.rankgpt.asyncrankgptrerank attribute)": [[23, "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank.model_fields", false]], "model_post_init() (autorag.autoragbedrock method)": [[0, "autorag.AutoRAGBedrock.model_post_init", false]], "module": [[0, "module-autorag", false], [0, "module-autorag.dashboard", false], [0, "module-autorag.node_line", false], [0, "module-autorag.parser", false], [0, "module-autorag.strategy", false], [0, "module-autorag.support", false], [0, "module-autorag.web", false], [1, "module-autorag.data", false], [4, "module-autorag.data.legacy", false], [5, "module-autorag.data.legacy.corpus", false], [5, "module-autorag.data.legacy.corpus.langchain", false], [5, "module-autorag.data.legacy.corpus.llama_index", false], [7, "module-autorag.data.parse", false], [7, "module-autorag.data.parse.base", false], [7, "module-autorag.data.parse.langchain_parse", false], [7, "module-autorag.data.parse.llamaparse", false], [7, "module-autorag.data.parse.run", false], [8, "module-autorag.data.qa", false], [8, "module-autorag.data.qa.extract_evidence", false], [8, "module-autorag.data.qa.sample", false], [8, "module-autorag.data.qa.schema", false], [9, "module-autorag.data.qa.evolve", false], [9, "module-autorag.data.qa.evolve.llama_index_query_evolve", false], [9, "module-autorag.data.qa.evolve.openai_query_evolve", false], [9, "module-autorag.data.qa.evolve.prompt", false], [10, "module-autorag.data.qa.filter", false], [10, "module-autorag.data.qa.filter.dontknow", false], [10, "module-autorag.data.qa.filter.passage_dependency", false], [10, "module-autorag.data.qa.filter.prompt", false], [11, "module-autorag.data.qa.generation_gt", false], [11, "module-autorag.data.qa.generation_gt.base", false], [11, "module-autorag.data.qa.generation_gt.llama_index_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.openai_gen_gt", false], [11, "module-autorag.data.qa.generation_gt.prompt", false], [12, "module-autorag.data.qa.query", false], [14, "module-autorag.data.utils", false], [14, "module-autorag.data.utils.util", false], [15, "module-autorag.deploy", false], [15, "module-autorag.deploy.api", false], [15, "module-autorag.deploy.base", false], [15, "module-autorag.deploy.gradio", false], [18, "module-autorag.nodes", false], [18, "module-autorag.nodes.util", false], [19, "module-autorag.nodes.generator", false], [19, "module-autorag.nodes.generator.base", false], [19, "module-autorag.nodes.generator.llama_index_llm", false], [19, "module-autorag.nodes.generator.openai_llm", false], [19, "module-autorag.nodes.generator.vllm", false], [20, "module-autorag.nodes.passageaugmenter.pass_passage_augmenter", false], [21, "module-autorag.nodes.passagecompressor", false], [21, "module-autorag.nodes.passagecompressor.base", false], [21, "module-autorag.nodes.passagecompressor.longllmlingua", false], [21, "module-autorag.nodes.passagecompressor.pass_compressor", false], [21, "module-autorag.nodes.passagecompressor.refine", false], [21, "module-autorag.nodes.passagecompressor.tree_summarize", false], [22, "module-autorag.nodes.passagefilter.pass_passage_filter", false], [22, "module-autorag.nodes.passagefilter.percentile_cutoff", false], [22, "module-autorag.nodes.passagefilter.recency", false], [23, "module-autorag.nodes.passagereranker", false], [23, "module-autorag.nodes.passagereranker.base", false], [23, "module-autorag.nodes.passagereranker.cohere", false], [23, "module-autorag.nodes.passagereranker.colbert", false], [23, "module-autorag.nodes.passagereranker.flag_embedding", false], [23, "module-autorag.nodes.passagereranker.flag_embedding_llm", false], [23, "module-autorag.nodes.passagereranker.flashrank", false], [23, "module-autorag.nodes.passagereranker.jina", false], [23, "module-autorag.nodes.passagereranker.koreranker", false], [23, "module-autorag.nodes.passagereranker.mixedbreadai", false], [23, "module-autorag.nodes.passagereranker.monot5", false], [23, "module-autorag.nodes.passagereranker.openvino", false], [23, "module-autorag.nodes.passagereranker.pass_reranker", false], [23, "module-autorag.nodes.passagereranker.rankgpt", false], [23, "module-autorag.nodes.passagereranker.sentence_transformer", false], [23, "module-autorag.nodes.passagereranker.time_reranker", false], [23, "module-autorag.nodes.passagereranker.upr", false], [23, "module-autorag.nodes.passagereranker.voyageai", false], [25, "module-autorag.nodes.promptmaker", false], [25, "module-autorag.nodes.promptmaker.base", false], [25, "module-autorag.nodes.promptmaker.fstring", false], [25, "module-autorag.nodes.promptmaker.long_context_reorder", false], [25, "module-autorag.nodes.promptmaker.window_replacement", false], [26, "module-autorag.nodes.queryexpansion", false], [26, "module-autorag.nodes.queryexpansion.base", false], [26, "module-autorag.nodes.queryexpansion.hyde", false], [26, "module-autorag.nodes.queryexpansion.multi_query_expansion", false], [26, "module-autorag.nodes.queryexpansion.pass_query_expansion", false], [26, "module-autorag.nodes.queryexpansion.query_decompose", false], [27, "module-autorag.nodes.retrieval.base", false], [27, "module-autorag.nodes.retrieval.bm25", false], [27, "module-autorag.nodes.retrieval.hybrid_cc", false], [27, "module-autorag.nodes.retrieval.hybrid_rrf", false], [28, "module-autorag.schema", false], [28, "module-autorag.schema.base", false], [28, "module-autorag.schema.metricinput", false], [28, "module-autorag.schema.module", false], [28, "module-autorag.schema.node", false], [29, "module-autorag.utils", false], [29, "module-autorag.utils.preprocess", false], [29, "module-autorag.utils.util", false]], "module (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module", false]], "module (class in autorag.schema.module)": [[28, "autorag.schema.module.Module", false]], "module_param (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module_param", false]], "module_type (autorag.schema.module.module attribute)": [[28, "autorag.schema.module.Module.module_type", false]], "module_type_exists() (in module autorag.schema.node)": [[28, "autorag.schema.node.module_type_exists", false]], "modules (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.modules", false]], "monot5 (class in autorag.nodes.passagereranker.monot5)": [[23, "autorag.nodes.passagereranker.monot5.MonoT5", false]], "monot5_run_model() (in module autorag.nodes.passagereranker.monot5)": [[23, "autorag.nodes.passagereranker.monot5.monot5_run_model", false]], "multiqueryexpansion (class in autorag.nodes.queryexpansion.multi_query_expansion)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion", false]], "node (class in autorag.schema.node)": [[28, "autorag.schema.node.Node", false]], "node_params (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.node_params", false]], "node_type (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.node_type", false]], "node_view() (in module autorag.dashboard)": [[0, "autorag.dashboard.node_view", false]], "normalize_dbsf() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_dbsf", false]], "normalize_mm() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_mm", false]], "normalize_string() (in module autorag.utils.util)": [[29, "autorag.utils.util.normalize_string", false]], "normalize_tmm() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_tmm", false]], "normalize_unicode() (in module autorag.utils.util)": [[29, "autorag.utils.util.normalize_unicode", false]], "normalize_z() (in module autorag.nodes.retrieval.hybrid_cc)": [[27, "autorag.nodes.retrieval.hybrid_cc.normalize_z", false]], "openai_truncate_by_token() (in module autorag.utils.util)": [[29, "autorag.utils.util.openai_truncate_by_token", false]], "openaillm (class in autorag.nodes.generator.openai_llm)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM", false]], "openvino_run_model() (in module autorag.nodes.passagereranker.openvino)": [[23, "autorag.nodes.passagereranker.openvino.openvino_run_model", false]], "openvinoreranker (class in autorag.nodes.passagereranker.openvino)": [[23, "autorag.nodes.passagereranker.openvino.OpenVINOReranker", false]], "param_list (autorag.nodes.passagecompressor.base.llamaindexcompressor attribute)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.param_list", false]], "parse_all_files() (in module autorag.data.parse.langchain_parse)": [[7, "autorag.data.parse.langchain_parse.parse_all_files", false]], "parser (class in autorag.parser)": [[0, "autorag.parser.Parser", false]], "parser_node() (in module autorag.data.parse.base)": [[7, "autorag.data.parse.base.parser_node", false]], "passage_dependency_filter_llama_index() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_llama_index", false]], "passage_dependency_filter_openai() (in module autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.passage_dependency_filter_openai", false]], "passage_index (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.passage_index", false]], "passages (autorag.deploy.api.retrievalresponse attribute)": [[15, "autorag.deploy.api.RetrievalResponse.passages", false]], "passcompressor (class in autorag.nodes.passagecompressor.pass_compressor)": [[21, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor", false]], "passpassageaugmenter (class in autorag.nodes.passageaugmenter.pass_passage_augmenter)": [[20, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter", false]], "passpassagefilter (class in autorag.nodes.passagefilter.pass_passage_filter)": [[22, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter", false]], "passqueryexpansion (class in autorag.nodes.queryexpansion.pass_query_expansion)": [[26, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion", false]], "passreranker (class in autorag.nodes.passagereranker.pass_reranker)": [[23, "autorag.nodes.passagereranker.pass_reranker.PassReranker", false]], "percentilecutoff (class in autorag.nodes.passagefilter.percentile_cutoff)": [[22, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff", false]], "pop_params() (in module autorag.utils.util)": [[29, "autorag.utils.util.pop_params", false]], "preprocess_text() (in module autorag.utils.util)": [[29, "autorag.utils.util.preprocess_text", false]], "process_batch() (in module autorag.utils.util)": [[29, "autorag.utils.util.process_batch", false]], "prompt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.prompt", false]], "pure() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.pure", false]], "pure() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.pure", false]], "pure() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.pure", false]], "pure() (autorag.nodes.passageaugmenter.pass_passage_augmenter.passpassageaugmenter method)": [[20, "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter.pure", false]], "pure() (autorag.nodes.passagecompressor.base.llamaindexcompressor method)": [[21, "autorag.nodes.passagecompressor.base.LlamaIndexCompressor.pure", false]], "pure() (autorag.nodes.passagecompressor.longllmlingua.longllmlingua method)": [[21, "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua.pure", false]], "pure() (autorag.nodes.passagecompressor.pass_compressor.passcompressor method)": [[21, "autorag.nodes.passagecompressor.pass_compressor.PassCompressor.pure", false]], "pure() (autorag.nodes.passagefilter.pass_passage_filter.passpassagefilter method)": [[22, "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter.pure", false]], "pure() (autorag.nodes.passagefilter.percentile_cutoff.percentilecutoff method)": [[22, "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff.pure", false]], "pure() (autorag.nodes.passagefilter.recency.recencyfilter method)": [[22, "autorag.nodes.passagefilter.recency.RecencyFilter.pure", false]], "pure() (autorag.nodes.passagereranker.cohere.coherereranker method)": [[23, "autorag.nodes.passagereranker.cohere.CohereReranker.pure", false]], "pure() (autorag.nodes.passagereranker.colbert.colbertreranker method)": [[23, "autorag.nodes.passagereranker.colbert.ColbertReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding.flagembeddingreranker method)": [[23, "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flag_embedding_llm.flagembeddingllmreranker method)": [[23, "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker.pure", false]], "pure() (autorag.nodes.passagereranker.flashrank.flashrankreranker method)": [[23, "autorag.nodes.passagereranker.flashrank.FlashRankReranker.pure", false]], "pure() (autorag.nodes.passagereranker.jina.jinareranker method)": [[23, "autorag.nodes.passagereranker.jina.JinaReranker.pure", false]], "pure() (autorag.nodes.passagereranker.koreranker.koreranker method)": [[23, "autorag.nodes.passagereranker.koreranker.KoReranker.pure", false]], "pure() (autorag.nodes.passagereranker.mixedbreadai.mixedbreadaireranker method)": [[23, "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker.pure", false]], "pure() (autorag.nodes.passagereranker.monot5.monot5 method)": [[23, "autorag.nodes.passagereranker.monot5.MonoT5.pure", false]], "pure() (autorag.nodes.passagereranker.openvino.openvinoreranker method)": [[23, "autorag.nodes.passagereranker.openvino.OpenVINOReranker.pure", false]], "pure() (autorag.nodes.passagereranker.pass_reranker.passreranker method)": [[23, "autorag.nodes.passagereranker.pass_reranker.PassReranker.pure", false]], "pure() (autorag.nodes.passagereranker.rankgpt.rankgpt method)": [[23, "autorag.nodes.passagereranker.rankgpt.RankGPT.pure", false]], "pure() (autorag.nodes.passagereranker.sentence_transformer.sentencetransformerreranker method)": [[23, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker.pure", false]], "pure() (autorag.nodes.passagereranker.time_reranker.timereranker method)": [[23, "autorag.nodes.passagereranker.time_reranker.TimeReranker.pure", false]], "pure() (autorag.nodes.passagereranker.upr.upr method)": [[23, "autorag.nodes.passagereranker.upr.Upr.pure", false]], "pure() (autorag.nodes.passagereranker.voyageai.voyageaireranker method)": [[23, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker.pure", false]], "pure() (autorag.nodes.promptmaker.fstring.fstring method)": [[25, "autorag.nodes.promptmaker.fstring.Fstring.pure", false]], "pure() (autorag.nodes.promptmaker.long_context_reorder.longcontextreorder method)": [[25, "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder.pure", false]], "pure() (autorag.nodes.promptmaker.window_replacement.windowreplacement method)": [[25, "autorag.nodes.promptmaker.window_replacement.WindowReplacement.pure", false]], "pure() (autorag.nodes.queryexpansion.hyde.hyde method)": [[26, "autorag.nodes.queryexpansion.hyde.HyDE.pure", false]], "pure() (autorag.nodes.queryexpansion.multi_query_expansion.multiqueryexpansion method)": [[26, "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.pass_query_expansion.passqueryexpansion method)": [[26, "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion.pure", false]], "pure() (autorag.nodes.queryexpansion.query_decompose.querydecompose method)": [[26, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose.pure", false]], "pure() (autorag.nodes.retrieval.base.hybridretrieval method)": [[27, "autorag.nodes.retrieval.base.HybridRetrieval.pure", false]], "pure() (autorag.nodes.retrieval.bm25.bm25 method)": [[27, "autorag.nodes.retrieval.bm25.BM25.pure", false]], "pure() (autorag.schema.base.basemodule method)": [[28, "autorag.schema.base.BaseModule.pure", false]], "qa (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.QA", false]], "queries (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.queries", false]], "query (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.query", false]], "query (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.query", false]], "query_evolve_openai_base() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.query_evolve_openai_base", false]], "querydecompose (class in autorag.nodes.queryexpansion.query_decompose)": [[26, "autorag.nodes.queryexpansion.query_decompose.QueryDecompose", false]], "queryrequest (class in autorag.deploy.api)": [[15, "autorag.deploy.api.QueryRequest", false]], "random() (in module autorag)": [[0, "autorag.random", false]], "random_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.random_single_hop", false]], "range_single_hop() (in module autorag.data.qa.sample)": [[8, "autorag.data.qa.sample.range_single_hop", false]], "rankgpt (class in autorag.nodes.passagereranker.rankgpt)": [[23, "autorag.nodes.passagereranker.rankgpt.RankGPT", false]], "raw (class in autorag.data.qa.schema)": [[8, "autorag.data.qa.schema.Raw", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.llama_index_query_evolve)": [[9, "autorag.data.qa.evolve.llama_index_query_evolve.reasoning_evolve_ragas", false]], "reasoning_evolve_ragas() (in module autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.reasoning_evolve_ragas", false]], "recencyfilter (class in autorag.nodes.passagefilter.recency)": [[22, "autorag.nodes.passagefilter.recency.RecencyFilter", false]], "reconstruct_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.reconstruct_list", false]], "refine (class in autorag.nodes.passagecompressor.refine)": [[21, "autorag.nodes.passagecompressor.refine.Refine", false]], "replace_value_in_dict() (in module autorag.utils.util)": [[29, "autorag.utils.util.replace_value_in_dict", false]], "response (class in autorag.data.qa.evolve.openai_query_evolve)": [[9, "autorag.data.qa.evolve.openai_query_evolve.Response", false]], "response (class in autorag.data.qa.filter.dontknow)": [[10, "autorag.data.qa.filter.dontknow.Response", false]], "response (class in autorag.data.qa.filter.passage_dependency)": [[10, "autorag.data.qa.filter.passage_dependency.Response", false]], "response (class in autorag.data.qa.generation_gt.openai_gen_gt)": [[11, "autorag.data.qa.generation_gt.openai_gen_gt.Response", false]], "result (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.result", false]], "result_column (autorag.deploy.api.queryrequest attribute)": [[15, "autorag.deploy.api.QueryRequest.result_column", false]], "result_to_dataframe() (in module autorag.utils.util)": [[29, "autorag.utils.util.result_to_dataframe", false]], "retrieval_gt (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieval_gt", false]], "retrieval_gt_contents (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieval_gt_contents", false]], "retrievalresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RetrievalResponse", false]], "retrieved_contents (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieved_contents", false]], "retrieved_ids (autorag.schema.metricinput.metricinput attribute)": [[28, "autorag.schema.metricinput.MetricInput.retrieved_ids", false]], "retrieved_passage (autorag.deploy.api.runresponse attribute)": [[15, "autorag.deploy.api.RunResponse.retrieved_passage", false]], "retrieved_passage (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.retrieved_passage", false]], "retrievedpassage (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RetrievedPassage", false]], "rrf_calculate() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.rrf_calculate", false]], "rrf_pure() (in module autorag.nodes.retrieval.hybrid_rrf)": [[27, "autorag.nodes.retrieval.hybrid_rrf.rrf_pure", false]], "run() (autorag.deploy.base.runner method)": [[15, "autorag.deploy.base.Runner.run", false]], "run() (autorag.deploy.gradio.gradiorunner method)": [[15, "autorag.deploy.gradio.GradioRunner.run", false]], "run() (autorag.schema.node.node method)": [[28, "autorag.schema.node.Node.run", false]], "run() (in module autorag.dashboard)": [[0, "autorag.dashboard.run", false]], "run_api_server() (autorag.deploy.api.apirunner method)": [[15, "autorag.deploy.api.ApiRunner.run_api_server", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_cc.hybridcc class method)": [[27, "autorag.nodes.retrieval.hybrid_cc.HybridCC.run_evaluator", false]], "run_evaluator() (autorag.nodes.retrieval.hybrid_rrf.hybridrrf class method)": [[27, "autorag.nodes.retrieval.hybrid_rrf.HybridRRF.run_evaluator", false]], "run_evaluator() (autorag.schema.base.basemodule class method)": [[28, "autorag.schema.base.BaseModule.run_evaluator", false]], "run_node (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.run_node", false]], "run_node_line() (in module autorag.node_line)": [[0, "autorag.node_line.run_node_line", false]], "run_parser() (in module autorag.data.parse.run)": [[7, "autorag.data.parse.run.run_parser", false]], "run_web() (autorag.deploy.gradio.gradiorunner method)": [[15, "autorag.deploy.gradio.GradioRunner.run_web", false]], "runner (class in autorag.deploy.base)": [[15, "autorag.deploy.base.Runner", false]], "runresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.RunResponse", false]], "sample() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.sample", false]], "save_parquet_safe() (in module autorag.utils.util)": [[29, "autorag.utils.util.save_parquet_safe", false]], "score (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.score", false]], "select_best() (in module autorag.strategy)": [[0, "autorag.strategy.select_best", false]], "select_best_average() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_average", false]], "select_best_rr() (in module autorag.strategy)": [[0, "autorag.strategy.select_best_rr", false]], "select_bm25_tokenizer() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.select_bm25_tokenizer", false]], "select_normalize_mean() (in module autorag.strategy)": [[0, "autorag.strategy.select_normalize_mean", false]], "select_top_k() (in module autorag.utils.util)": [[29, "autorag.utils.util.select_top_k", false]], "sentence_transformer_run_model() (in module autorag.nodes.passagereranker.sentence_transformer)": [[23, "autorag.nodes.passagereranker.sentence_transformer.sentence_transformer_run_model", false]], "sentencetransformerreranker (class in autorag.nodes.passagereranker.sentence_transformer)": [[23, "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker", false]], "set_initial_state() (in module autorag.web)": [[0, "autorag.web.set_initial_state", false]], "set_page_config() (in module autorag.web)": [[0, "autorag.web.set_page_config", false]], "set_page_header() (in module autorag.web)": [[0, "autorag.web.set_page_header", false]], "slice_tensor() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.slice_tensor", false]], "slice_tokenizer_result() (in module autorag.nodes.passagereranker.colbert)": [[23, "autorag.nodes.passagereranker.colbert.slice_tokenizer_result", false]], "sort_by_scores() (in module autorag.utils.util)": [[29, "autorag.utils.util.sort_by_scores", false]], "split_by_sentence_kiwi() (in module autorag.data)": [[1, "autorag.data.split_by_sentence_kiwi", false]], "split_dataframe() (in module autorag.utils.util)": [[29, "autorag.utils.util.split_dataframe", false]], "start_idx (autorag.deploy.api.retrievedpassage attribute)": [[15, "autorag.deploy.api.RetrievedPassage.start_idx", false]], "start_parsing() (autorag.parser.parser method)": [[0, "autorag.parser.Parser.start_parsing", false]], "strategy (autorag.schema.node.node attribute)": [[28, "autorag.schema.node.Node.strategy", false]], "stream() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.stream", false]], "stream() (autorag.nodes.generator.llama_index_llm.llamaindexllm method)": [[19, "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM.stream", false]], "stream() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.stream", false]], "stream() (autorag.nodes.generator.vllm.vllm method)": [[19, "autorag.nodes.generator.vllm.Vllm.stream", false]], "streamresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.StreamResponse", false]], "structured_output() (autorag.nodes.generator.base.basegenerator method)": [[19, "autorag.nodes.generator.base.BaseGenerator.structured_output", false]], "structured_output() (autorag.nodes.generator.openai_llm.openaillm method)": [[19, "autorag.nodes.generator.openai_llm.OpenAILLM.structured_output", false]], "summary_df_to_yaml() (in module autorag.deploy.base)": [[15, "autorag.deploy.base.summary_df_to_yaml", false]], "timereranker (class in autorag.nodes.passagereranker.time_reranker)": [[23, "autorag.nodes.passagereranker.time_reranker.TimeReranker", false]], "to_list() (in module autorag.utils.util)": [[29, "autorag.utils.util.to_list", false]], "to_parquet() (autorag.data.qa.schema.corpus method)": [[8, "autorag.data.qa.schema.Corpus.to_parquet", false]], "to_parquet() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.to_parquet", false]], "tokenize() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize", false]], "tokenize_ja_sudachipy() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ja_sudachipy", false]], "tokenize_ko_kiwi() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_kiwi", false]], "tokenize_ko_kkma() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_kkma", false]], "tokenize_ko_okt() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_ko_okt", false]], "tokenize_porter_stemmer() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_porter_stemmer", false]], "tokenize_space() (in module autorag.nodes.retrieval.bm25)": [[27, "autorag.nodes.retrieval.bm25.tokenize_space", false]], "treesummarize (class in autorag.nodes.passagecompressor.tree_summarize)": [[21, "autorag.nodes.passagecompressor.tree_summarize.TreeSummarize", false]], "truncate_by_token() (in module autorag.nodes.generator.openai_llm)": [[19, "autorag.nodes.generator.openai_llm.truncate_by_token", false]], "type (autorag.deploy.api.streamresponse attribute)": [[15, "autorag.deploy.api.StreamResponse.type", false]], "update_corpus() (autorag.data.qa.schema.qa method)": [[8, "autorag.data.qa.schema.QA.update_corpus", false]], "upr (class in autorag.nodes.passagereranker.upr)": [[23, "autorag.nodes.passagereranker.upr.Upr", false]], "uprscorer (class in autorag.nodes.passagereranker.upr)": [[23, "autorag.nodes.passagereranker.upr.UPRScorer", false]], "validate_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_corpus_dataset", false]], "validate_qa_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_qa_dataset", false]], "validate_qa_from_corpus_dataset() (in module autorag.utils.preprocess)": [[29, "autorag.utils.preprocess.validate_qa_from_corpus_dataset", false]], "validate_strategy_inputs() (in module autorag.strategy)": [[0, "autorag.strategy.validate_strategy_inputs", false]], "version (autorag.deploy.api.versionresponse attribute)": [[15, "autorag.deploy.api.VersionResponse.version", false]], "versionresponse (class in autorag.deploy.api)": [[15, "autorag.deploy.api.VersionResponse", false]], "vllm (class in autorag.nodes.generator.vllm)": [[19, "autorag.nodes.generator.vllm.Vllm", false]], "voyageai_rerank_pure() (in module autorag.nodes.passagereranker.voyageai)": [[23, "autorag.nodes.passagereranker.voyageai.voyageai_rerank_pure", false]], "voyageaireranker (class in autorag.nodes.passagereranker.voyageai)": [[23, "autorag.nodes.passagereranker.voyageai.VoyageAIReranker", false]], "windowreplacement (class in autorag.nodes.promptmaker.window_replacement)": [[25, "autorag.nodes.promptmaker.window_replacement.WindowReplacement", false]], "yaml_to_markdown() (in module autorag.dashboard)": [[0, "autorag.dashboard.yaml_to_markdown", false]]}, "objects": {"": [[0, 0, 0, "-", "autorag"]], "autorag": [[0, 1, 1, "", "AutoRAGBedrock"], [0, 1, 1, "", "LazyInit"], [0, 0, 0, "-", "dashboard"], [1, 0, 0, "-", "data"], [15, 0, 0, "-", "deploy"], [0, 4, 1, "", "handle_exception"], [0, 0, 0, "-", "node_line"], [18, 0, 0, "-", "nodes"], [0, 0, 0, "-", "parser"], [0, 4, 1, "", "random"], [28, 0, 0, "-", "schema"], [0, 0, 0, "-", "strategy"], [0, 0, 0, "-", "support"], [29, 0, 0, "-", "utils"], [0, 0, 0, "-", "web"]], "autorag.AutoRAGBedrock": [[0, 2, 1, "", "acomplete"], [0, 3, 1, "", "model_computed_fields"], [0, 3, 1, "", "model_config"], [0, 3, 1, "", "model_fields"], [0, 2, 1, "", "model_post_init"]], "autorag.dashboard": [[0, 4, 1, "", "find_node_dir"], [0, 4, 1, "", "get_metric_values"], [0, 4, 1, "", "make_trial_summary_md"], [0, 4, 1, "", "node_view"], [0, 4, 1, "", "run"], [0, 4, 1, "", "yaml_to_markdown"]], "autorag.data": [[4, 0, 0, "-", "legacy"], [7, 0, 0, "-", "parse"], [8, 0, 0, "-", "qa"], [1, 4, 1, "", "split_by_sentence_kiwi"], [14, 0, 0, "-", "utils"]], "autorag.data.legacy": [[5, 0, 0, "-", "corpus"]], "autorag.data.legacy.corpus": [[5, 0, 0, "-", "langchain"], [5, 0, 0, "-", "llama_index"]], "autorag.data.legacy.corpus.langchain": [[5, 4, 1, "", "langchain_documents_to_parquet"]], "autorag.data.legacy.corpus.llama_index": [[5, 4, 1, "", "llama_documents_to_parquet"], [5, 4, 1, "", "llama_text_node_to_parquet"]], "autorag.data.parse": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "langchain_parse"], [7, 0, 0, "-", "llamaparse"], [7, 0, 0, "-", "run"]], "autorag.data.parse.base": [[7, 4, 1, "", "parser_node"]], "autorag.data.parse.langchain_parse": [[7, 4, 1, "", "langchain_parse"], [7, 4, 1, "", "langchain_parse_pure"], [7, 4, 1, "", "parse_all_files"]], "autorag.data.parse.llamaparse": [[7, 4, 1, "", "llama_parse"], [7, 4, 1, "", "llama_parse_pure"]], "autorag.data.parse.run": [[7, 4, 1, "", "run_parser"]], "autorag.data.qa": [[9, 0, 0, "-", "evolve"], [8, 0, 0, "-", "extract_evidence"], [10, 0, 0, "-", "filter"], [11, 0, 0, "-", "generation_gt"], [12, 0, 0, "-", "query"], [8, 0, 0, "-", "sample"], [8, 0, 0, "-", "schema"]], "autorag.data.qa.evolve": [[9, 0, 0, "-", "llama_index_query_evolve"], [9, 0, 0, "-", "openai_query_evolve"], [9, 0, 0, "-", "prompt"]], "autorag.data.qa.evolve.llama_index_query_evolve": [[9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "llama_index_generate_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve": [[9, 1, 1, "", "Response"], [9, 4, 1, "", "compress_ragas"], [9, 4, 1, "", "conditional_evolve_ragas"], [9, 4, 1, "", "query_evolve_openai_base"], [9, 4, 1, "", "reasoning_evolve_ragas"]], "autorag.data.qa.evolve.openai_query_evolve.Response": [[9, 3, 1, "", "evolved_query"], [9, 3, 1, "", "model_computed_fields"], [9, 3, 1, "", "model_config"], [9, 3, 1, "", "model_fields"]], "autorag.data.qa.filter": [[10, 0, 0, "-", "dontknow"], [10, 0, 0, "-", "passage_dependency"], [10, 0, 0, "-", "prompt"]], "autorag.data.qa.filter.dontknow": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "dontknow_filter_llama_index"], [10, 4, 1, "", "dontknow_filter_openai"], [10, 4, 1, "", "dontknow_filter_rule_based"]], "autorag.data.qa.filter.dontknow.Response": [[10, 3, 1, "", "is_dont_know"], [10, 3, 1, "", "model_computed_fields"], [10, 3, 1, "", "model_config"], [10, 3, 1, "", "model_fields"]], "autorag.data.qa.filter.passage_dependency": [[10, 1, 1, "", "Response"], [10, 4, 1, "", "passage_dependency_filter_llama_index"], [10, 4, 1, "", "passage_dependency_filter_openai"]], "autorag.data.qa.filter.passage_dependency.Response": [[10, 3, 1, "", "is_passage_dependent"], [10, 3, 1, "", "model_computed_fields"], [10, 3, 1, "", "model_config"], [10, 3, 1, "", "model_fields"]], "autorag.data.qa.generation_gt": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "llama_index_gen_gt"], [11, 0, 0, "-", "openai_gen_gt"], [11, 0, 0, "-", "prompt"]], "autorag.data.qa.generation_gt.base": [[11, 4, 1, "", "add_gen_gt"]], "autorag.data.qa.generation_gt.llama_index_gen_gt": [[11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_custom_gen_gt"], [11, 4, 1, "", "make_gen_gt_llama_index"]], "autorag.data.qa.generation_gt.openai_gen_gt": [[11, 1, 1, "", "Response"], [11, 4, 1, "", "make_basic_gen_gt"], [11, 4, 1, "", "make_concise_gen_gt"], [11, 4, 1, "", "make_gen_gt_openai"]], "autorag.data.qa.generation_gt.openai_gen_gt.Response": [[11, 3, 1, "", "answer"], [11, 3, 1, "", "model_computed_fields"], [11, 3, 1, "", "model_config"], [11, 3, 1, "", "model_fields"]], "autorag.data.qa.sample": [[8, 4, 1, "", "random_single_hop"], [8, 4, 1, "", "range_single_hop"]], "autorag.data.qa.schema": [[8, 1, 1, "", "Corpus"], [8, 1, 1, "", "QA"], [8, 1, 1, "", "Raw"]], "autorag.data.qa.schema.Corpus": [[8, 2, 1, "", "batch_apply"], [8, 5, 1, "", "linked_raw"], [8, 2, 1, "", "map"], [8, 2, 1, "", "sample"], [8, 2, 1, "", "to_parquet"]], "autorag.data.qa.schema.QA": [[8, 2, 1, "", "batch_apply"], [8, 2, 1, "", "batch_filter"], [8, 2, 1, "", "filter"], [8, 5, 1, "", "linked_corpus"], [8, 2, 1, "", "make_retrieval_gt_contents"], [8, 2, 1, "", "map"], [8, 2, 1, "", "to_parquet"], [8, 2, 1, "", "update_corpus"]], "autorag.data.qa.schema.Raw": [[8, 2, 1, "", "batch_apply"], [8, 2, 1, "", "chunk"], [8, 2, 1, "", "flatmap"], [8, 2, 1, "", "map"]], "autorag.data.utils": [[14, 0, 0, "-", "util"]], "autorag.data.utils.util": [[14, 4, 1, "", "add_essential_metadata"], [14, 4, 1, "", "add_essential_metadata_llama_text_node"], [14, 4, 1, "", "corpus_df_to_langchain_documents"], [14, 4, 1, "", "get_file_metadata"], [14, 4, 1, "", "get_param_combinations"], [14, 4, 1, "", "get_start_end_idx"], [14, 4, 1, "", "load_yaml"]], "autorag.deploy": [[15, 0, 0, "-", "api"], [15, 0, 0, "-", "base"], [15, 0, 0, "-", "gradio"]], "autorag.deploy.api": [[15, 1, 1, "", "ApiRunner"], [15, 1, 1, "", "QueryRequest"], [15, 1, 1, "", "RetrievalResponse"], [15, 1, 1, "", "RetrievedPassage"], [15, 1, 1, "", "RunResponse"], [15, 1, 1, "", "StreamResponse"], [15, 1, 1, "", "VersionResponse"]], "autorag.deploy.api.ApiRunner": [[15, 2, 1, "", "extract_retrieve_passage"], [15, 2, 1, "", "run_api_server"]], "autorag.deploy.api.QueryRequest": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "query"], [15, 3, 1, "", "result_column"]], "autorag.deploy.api.RetrievalResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "passages"]], "autorag.deploy.api.RetrievedPassage": [[15, 3, 1, "", "content"], [15, 3, 1, "", "doc_id"], [15, 3, 1, "", "end_idx"], [15, 3, 1, "", "file_page"], [15, 3, 1, "", "filepath"], [15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "score"], [15, 3, 1, "", "start_idx"]], "autorag.deploy.api.RunResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "result"], [15, 3, 1, "", "retrieved_passage"]], "autorag.deploy.api.StreamResponse": [[15, 3, 1, "", "generated_text"], [15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "passage_index"], [15, 3, 1, "", "retrieved_passage"], [15, 3, 1, "", "type"]], "autorag.deploy.api.VersionResponse": [[15, 3, 1, "", "model_computed_fields"], [15, 3, 1, "", "model_config"], [15, 3, 1, "", "model_fields"], [15, 3, 1, "", "version"]], "autorag.deploy.base": [[15, 1, 1, "", "BaseRunner"], [15, 1, 1, "", "Runner"], [15, 4, 1, "", "extract_best_config"], [15, 4, 1, "", "extract_node_line_names"], [15, 4, 1, "", "extract_node_strategy"], [15, 4, 1, "", "extract_vectordb_config"], [15, 4, 1, "", "summary_df_to_yaml"]], "autorag.deploy.base.BaseRunner": [[15, 2, 1, "", "from_trial_folder"], [15, 2, 1, "", "from_yaml"]], "autorag.deploy.base.Runner": [[15, 2, 1, "", "run"]], "autorag.deploy.gradio": [[15, 1, 1, "", "GradioRunner"]], "autorag.deploy.gradio.GradioRunner": [[15, 2, 1, "", "run"], [15, 2, 1, "", "run_web"]], "autorag.node_line": [[0, 4, 1, "", "make_node_lines"], [0, 4, 1, "", "run_node_line"]], "autorag.nodes": [[19, 0, 0, "-", "generator"], [21, 0, 0, "-", "passagecompressor"], [23, 0, 0, "-", "passagereranker"], [25, 0, 0, "-", "promptmaker"], [26, 0, 0, "-", "queryexpansion"], [18, 0, 0, "-", "util"]], "autorag.nodes.generator": [[19, 0, 0, "-", "base"], [19, 0, 0, "-", "llama_index_llm"], [19, 0, 0, "-", "openai_llm"], [19, 0, 0, "-", "vllm"]], "autorag.nodes.generator.base": [[19, 1, 1, "", "BaseGenerator"], [19, 4, 1, "", "generator_node"]], "autorag.nodes.generator.base.BaseGenerator": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "cast_to_run"], [19, 2, 1, "", "stream"], [19, 2, 1, "", "structured_output"]], "autorag.nodes.generator.llama_index_llm": [[19, 1, 1, "", "LlamaIndexLLM"]], "autorag.nodes.generator.llama_index_llm.LlamaIndexLLM": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"]], "autorag.nodes.generator.openai_llm": [[19, 1, 1, "", "OpenAILLM"], [19, 4, 1, "", "truncate_by_token"]], "autorag.nodes.generator.openai_llm.OpenAILLM": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "get_result"], [19, 2, 1, "", "get_result_o1"], [19, 2, 1, "", "get_structured_result"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"], [19, 2, 1, "", "structured_output"]], "autorag.nodes.generator.vllm": [[19, 1, 1, "", "Vllm"]], "autorag.nodes.generator.vllm.Vllm": [[19, 2, 1, "", "astream"], [19, 2, 1, "", "pure"], [19, 2, 1, "", "stream"]], "autorag.nodes.passageaugmenter": [[20, 0, 0, "-", "pass_passage_augmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter": [[20, 1, 1, "", "PassPassageAugmenter"]], "autorag.nodes.passageaugmenter.pass_passage_augmenter.PassPassageAugmenter": [[20, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor": [[21, 0, 0, "-", "base"], [21, 0, 0, "-", "longllmlingua"], [21, 0, 0, "-", "pass_compressor"], [21, 0, 0, "-", "refine"], [21, 0, 0, "-", "tree_summarize"]], "autorag.nodes.passagecompressor.base": [[21, 1, 1, "", "BasePassageCompressor"], [21, 1, 1, "", "LlamaIndexCompressor"], [21, 4, 1, "", "make_llm"]], "autorag.nodes.passagecompressor.base.BasePassageCompressor": [[21, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagecompressor.base.LlamaIndexCompressor": [[21, 3, 1, "", "param_list"], [21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.longllmlingua": [[21, 1, 1, "", "LongLLMLingua"], [21, 4, 1, "", "llmlingua_pure"]], "autorag.nodes.passagecompressor.longllmlingua.LongLLMLingua": [[21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.pass_compressor": [[21, 1, 1, "", "PassCompressor"]], "autorag.nodes.passagecompressor.pass_compressor.PassCompressor": [[21, 2, 1, "", "pure"]], "autorag.nodes.passagecompressor.refine": [[21, 1, 1, "", "Refine"]], "autorag.nodes.passagecompressor.tree_summarize": [[21, 1, 1, "", "TreeSummarize"]], "autorag.nodes.passagefilter": [[22, 0, 0, "-", "pass_passage_filter"], [22, 0, 0, "-", "percentile_cutoff"], [22, 0, 0, "-", "recency"]], "autorag.nodes.passagefilter.pass_passage_filter": [[22, 1, 1, "", "PassPassageFilter"]], "autorag.nodes.passagefilter.pass_passage_filter.PassPassageFilter": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.percentile_cutoff": [[22, 1, 1, "", "PercentileCutoff"]], "autorag.nodes.passagefilter.percentile_cutoff.PercentileCutoff": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagefilter.recency": [[22, 1, 1, "", "RecencyFilter"]], "autorag.nodes.passagefilter.recency.RecencyFilter": [[22, 2, 1, "", "pure"]], "autorag.nodes.passagereranker": [[23, 0, 0, "-", "base"], [23, 0, 0, "-", "cohere"], [23, 0, 0, "-", "colbert"], [23, 0, 0, "-", "flag_embedding"], [23, 0, 0, "-", "flag_embedding_llm"], [23, 0, 0, "-", "flashrank"], [23, 0, 0, "-", "jina"], [23, 0, 0, "-", "koreranker"], [23, 0, 0, "-", "mixedbreadai"], [23, 0, 0, "-", "monot5"], [23, 0, 0, "-", "openvino"], [23, 0, 0, "-", "pass_reranker"], [23, 0, 0, "-", "rankgpt"], [23, 0, 0, "-", "sentence_transformer"], [23, 0, 0, "-", "time_reranker"], [23, 0, 0, "-", "upr"], [23, 0, 0, "-", "voyageai"]], "autorag.nodes.passagereranker.base": [[23, 1, 1, "", "BasePassageReranker"]], "autorag.nodes.passagereranker.base.BasePassageReranker": [[23, 2, 1, "", "cast_to_run"]], "autorag.nodes.passagereranker.cohere": [[23, 1, 1, "", "CohereReranker"], [23, 4, 1, "", "cohere_rerank_pure"]], "autorag.nodes.passagereranker.cohere.CohereReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.colbert": [[23, 1, 1, "", "ColbertReranker"], [23, 4, 1, "", "get_colbert_embedding_batch"], [23, 4, 1, "", "get_colbert_score"], [23, 4, 1, "", "slice_tensor"], [23, 4, 1, "", "slice_tokenizer_result"]], "autorag.nodes.passagereranker.colbert.ColbertReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding": [[23, 1, 1, "", "FlagEmbeddingReranker"], [23, 4, 1, "", "flag_embedding_run_model"]], "autorag.nodes.passagereranker.flag_embedding.FlagEmbeddingReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flag_embedding_llm": [[23, 1, 1, "", "FlagEmbeddingLLMReranker"]], "autorag.nodes.passagereranker.flag_embedding_llm.FlagEmbeddingLLMReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.flashrank": [[23, 1, 1, "", "FlashRankReranker"], [23, 4, 1, "", "flashrank_run_model"]], "autorag.nodes.passagereranker.flashrank.FlashRankReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.jina": [[23, 1, 1, "", "JinaReranker"], [23, 4, 1, "", "jina_reranker_pure"]], "autorag.nodes.passagereranker.jina.JinaReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.koreranker": [[23, 1, 1, "", "KoReranker"], [23, 4, 1, "", "exp_normalize"], [23, 4, 1, "", "koreranker_run_model"]], "autorag.nodes.passagereranker.koreranker.KoReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.mixedbreadai": [[23, 1, 1, "", "MixedbreadAIReranker"], [23, 4, 1, "", "mixedbreadai_rerank_pure"]], "autorag.nodes.passagereranker.mixedbreadai.MixedbreadAIReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.monot5": [[23, 1, 1, "", "MonoT5"], [23, 4, 1, "", "monot5_run_model"]], "autorag.nodes.passagereranker.monot5.MonoT5": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.openvino": [[23, 1, 1, "", "OpenVINOReranker"], [23, 4, 1, "", "openvino_run_model"]], "autorag.nodes.passagereranker.openvino.OpenVINOReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.pass_reranker": [[23, 1, 1, "", "PassReranker"]], "autorag.nodes.passagereranker.pass_reranker.PassReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.rankgpt": [[23, 1, 1, "", "AsyncRankGPTRerank"], [23, 1, 1, "", "RankGPT"]], "autorag.nodes.passagereranker.rankgpt.AsyncRankGPTRerank": [[23, 2, 1, "", "async_postprocess_nodes"], [23, 2, 1, "", "async_run_llm"], [23, 3, 1, "", "model_computed_fields"], [23, 3, 1, "", "model_config"], [23, 3, 1, "", "model_fields"]], "autorag.nodes.passagereranker.rankgpt.RankGPT": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.sentence_transformer": [[23, 1, 1, "", "SentenceTransformerReranker"], [23, 4, 1, "", "sentence_transformer_run_model"]], "autorag.nodes.passagereranker.sentence_transformer.SentenceTransformerReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.time_reranker": [[23, 1, 1, "", "TimeReranker"]], "autorag.nodes.passagereranker.time_reranker.TimeReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.upr": [[23, 1, 1, "", "UPRScorer"], [23, 1, 1, "", "Upr"]], "autorag.nodes.passagereranker.upr.UPRScorer": [[23, 2, 1, "", "compute"]], "autorag.nodes.passagereranker.upr.Upr": [[23, 2, 1, "", "pure"]], "autorag.nodes.passagereranker.voyageai": [[23, 1, 1, "", "VoyageAIReranker"], [23, 4, 1, "", "voyageai_rerank_pure"]], "autorag.nodes.passagereranker.voyageai.VoyageAIReranker": [[23, 2, 1, "", "pure"]], "autorag.nodes.promptmaker": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "fstring"], [25, 0, 0, "-", "long_context_reorder"], [25, 0, 0, "-", "window_replacement"]], "autorag.nodes.promptmaker.base": [[25, 1, 1, "", "BasePromptMaker"]], "autorag.nodes.promptmaker.base.BasePromptMaker": [[25, 2, 1, "", "cast_to_run"]], "autorag.nodes.promptmaker.fstring": [[25, 1, 1, "", "Fstring"]], "autorag.nodes.promptmaker.fstring.Fstring": [[25, 2, 1, "", "pure"]], "autorag.nodes.promptmaker.long_context_reorder": [[25, 1, 1, "", "LongContextReorder"]], "autorag.nodes.promptmaker.long_context_reorder.LongContextReorder": [[25, 2, 1, "", "pure"]], "autorag.nodes.promptmaker.window_replacement": [[25, 1, 1, "", "WindowReplacement"]], "autorag.nodes.promptmaker.window_replacement.WindowReplacement": [[25, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "hyde"], [26, 0, 0, "-", "multi_query_expansion"], [26, 0, 0, "-", "pass_query_expansion"], [26, 0, 0, "-", "query_decompose"]], "autorag.nodes.queryexpansion.base": [[26, 1, 1, "", "BaseQueryExpansion"], [26, 4, 1, "", "check_expanded_query"]], "autorag.nodes.queryexpansion.base.BaseQueryExpansion": [[26, 2, 1, "", "cast_to_run"]], "autorag.nodes.queryexpansion.hyde": [[26, 1, 1, "", "HyDE"]], "autorag.nodes.queryexpansion.hyde.HyDE": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.multi_query_expansion": [[26, 1, 1, "", "MultiQueryExpansion"], [26, 4, 1, "", "get_multi_query_expansion"]], "autorag.nodes.queryexpansion.multi_query_expansion.MultiQueryExpansion": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.pass_query_expansion": [[26, 1, 1, "", "PassQueryExpansion"]], "autorag.nodes.queryexpansion.pass_query_expansion.PassQueryExpansion": [[26, 2, 1, "", "pure"]], "autorag.nodes.queryexpansion.query_decompose": [[26, 1, 1, "", "QueryDecompose"], [26, 4, 1, "", "get_query_decompose"]], "autorag.nodes.queryexpansion.query_decompose.QueryDecompose": [[26, 2, 1, "", "pure"]], "autorag.nodes.retrieval": [[27, 0, 0, "-", "base"], [27, 0, 0, "-", "bm25"], [27, 0, 0, "-", "hybrid_cc"], [27, 0, 0, "-", "hybrid_rrf"]], "autorag.nodes.retrieval.base": [[27, 1, 1, "", "BaseRetrieval"], [27, 1, 1, "", "HybridRetrieval"], [27, 4, 1, "", "cast_queries"], [27, 4, 1, "", "evenly_distribute_passages"], [27, 4, 1, "", "get_bm25_pkl_name"]], "autorag.nodes.retrieval.base.BaseRetrieval": [[27, 2, 1, "", "cast_to_run"]], "autorag.nodes.retrieval.base.HybridRetrieval": [[27, 2, 1, "", "pure"]], "autorag.nodes.retrieval.bm25": [[27, 1, 1, "", "BM25"], [27, 4, 1, "", "bm25_ingest"], [27, 4, 1, "", "bm25_pure"], [27, 4, 1, "", "get_bm25_scores"], [27, 4, 1, "", "load_bm25_corpus"], [27, 4, 1, "", "select_bm25_tokenizer"], [27, 4, 1, "", "tokenize"], [27, 4, 1, "", "tokenize_ja_sudachipy"], [27, 4, 1, "", "tokenize_ko_kiwi"], [27, 4, 1, "", "tokenize_ko_kkma"], [27, 4, 1, "", "tokenize_ko_okt"], [27, 4, 1, "", "tokenize_porter_stemmer"], [27, 4, 1, "", "tokenize_space"]], "autorag.nodes.retrieval.bm25.BM25": [[27, 2, 1, "", "pure"]], "autorag.nodes.retrieval.hybrid_cc": [[27, 1, 1, "", "HybridCC"], [27, 4, 1, "", "fuse_per_query"], [27, 4, 1, "", "hybrid_cc"], [27, 4, 1, "", "normalize_dbsf"], [27, 4, 1, "", "normalize_mm"], [27, 4, 1, "", "normalize_tmm"], [27, 4, 1, "", "normalize_z"]], "autorag.nodes.retrieval.hybrid_cc.HybridCC": [[27, 2, 1, "", "run_evaluator"]], "autorag.nodes.retrieval.hybrid_rrf": [[27, 1, 1, "", "HybridRRF"], [27, 4, 1, "", "hybrid_rrf"], [27, 4, 1, "", "rrf_calculate"], [27, 4, 1, "", "rrf_pure"]], "autorag.nodes.retrieval.hybrid_rrf.HybridRRF": [[27, 2, 1, "", "run_evaluator"]], "autorag.nodes.util": [[18, 4, 1, "", "make_generator_callable_param"]], "autorag.parser": [[0, 1, 1, "", "Parser"]], "autorag.parser.Parser": [[0, 2, 1, "", "start_parsing"]], "autorag.schema": [[28, 0, 0, "-", "base"], [28, 0, 0, "-", "metricinput"], [28, 0, 0, "-", "module"], [28, 0, 0, "-", "node"]], "autorag.schema.base": [[28, 1, 1, "", "BaseModule"]], "autorag.schema.base.BaseModule": [[28, 2, 1, "", "cast_to_run"], [28, 2, 1, "", "pure"], [28, 2, 1, "", "run_evaluator"]], "autorag.schema.metricinput": [[28, 1, 1, "", "MetricInput"]], "autorag.schema.metricinput.MetricInput": [[28, 2, 1, "", "from_dataframe"], [28, 3, 1, "", "generated_log_probs"], [28, 3, 1, "", "generated_texts"], [28, 3, 1, "", "generation_gt"], [28, 2, 1, "", "is_fields_notnone"], [28, 3, 1, "", "prompt"], [28, 3, 1, "", "queries"], [28, 3, 1, "", "query"], [28, 3, 1, "", "retrieval_gt"], [28, 3, 1, "", "retrieval_gt_contents"], [28, 3, 1, "", "retrieved_contents"], [28, 3, 1, "", "retrieved_ids"]], "autorag.schema.module": [[28, 1, 1, "", "Module"]], "autorag.schema.module.Module": [[28, 2, 1, "", "from_dict"], [28, 3, 1, "", "module"], [28, 3, 1, "", "module_param"], [28, 3, 1, "", "module_type"]], "autorag.schema.node": [[28, 1, 1, "", "Node"], [28, 4, 1, "", "extract_values"], [28, 4, 1, "", "extract_values_from_nodes"], [28, 4, 1, "", "extract_values_from_nodes_strategy"], [28, 4, 1, "", "module_type_exists"]], "autorag.schema.node.Node": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_param_combinations"], [28, 3, 1, "", "modules"], [28, 3, 1, "", "node_params"], [28, 3, 1, "", "node_type"], [28, 2, 1, "", "run"], [28, 3, 1, "", "run_node"], [28, 3, 1, "", "strategy"]], "autorag.strategy": [[0, 4, 1, "", "avoid_empty_result"], [0, 4, 1, "", "filter_by_threshold"], [0, 4, 1, "", "measure_speed"], [0, 4, 1, "", "select_best"], [0, 4, 1, "", "select_best_average"], [0, 4, 1, "", "select_best_rr"], [0, 4, 1, "", "select_normalize_mean"], [0, 4, 1, "", "validate_strategy_inputs"]], "autorag.support": [[0, 4, 1, "", "dynamically_find_function"], [0, 4, 1, "", "get_support_modules"], [0, 4, 1, "", "get_support_nodes"]], "autorag.utils": [[29, 0, 0, "-", "preprocess"], [29, 0, 0, "-", "util"]], "autorag.utils.preprocess": [[29, 4, 1, "", "cast_corpus_dataset"], [29, 4, 1, "", "cast_qa_dataset"], [29, 4, 1, "", "validate_corpus_dataset"], [29, 4, 1, "", "validate_qa_dataset"], [29, 4, 1, "", "validate_qa_from_corpus_dataset"]], "autorag.utils.util": [[29, 4, 1, "", "aflatten_apply"], [29, 4, 1, "", "apply_recursive"], [29, 4, 1, "", "convert_datetime_string"], [29, 4, 1, "", "convert_env_in_dict"], [29, 4, 1, "", "convert_inputs_to_list"], [29, 4, 1, "", "convert_string_to_tuple_in_dict"], [29, 4, 1, "", "decode_multiple_json_from_bytes"], [29, 4, 1, "", "demojize"], [29, 4, 1, "", "dict_to_markdown"], [29, 4, 1, "", "dict_to_markdown_table"], [29, 4, 1, "", "embedding_query_content"], [29, 4, 1, "", "empty_cuda_cache"], [29, 4, 1, "", "explode"], [29, 4, 1, "", "fetch_contents"], [29, 4, 1, "", "fetch_one_content"], [29, 4, 1, "", "filter_dict_keys"], [29, 4, 1, "", "find_key_values"], [29, 4, 1, "", "find_node_summary_files"], [29, 4, 1, "", "find_trial_dir"], [29, 4, 1, "", "flatten_apply"], [29, 4, 1, "", "get_best_row"], [29, 4, 1, "", "get_event_loop"], [29, 4, 1, "", "load_summary_file"], [29, 4, 1, "", "load_yaml_config"], [29, 4, 1, "", "make_batch"], [29, 4, 1, "", "make_combinations"], [29, 4, 1, "", "normalize_string"], [29, 4, 1, "", "normalize_unicode"], [29, 4, 1, "", "openai_truncate_by_token"], [29, 4, 1, "", "pop_params"], [29, 4, 1, "", "preprocess_text"], [29, 4, 1, "", "process_batch"], [29, 4, 1, "", "reconstruct_list"], [29, 4, 1, "", "replace_value_in_dict"], [29, 4, 1, "", "result_to_dataframe"], [29, 4, 1, "", "save_parquet_safe"], [29, 4, 1, "", "select_top_k"], [29, 4, 1, "", "sort_by_scores"], [29, 4, 1, "", "split_dataframe"], [29, 4, 1, "", "to_list"]], "autorag.web": [[0, 4, 1, "", "chat_box"], [0, 4, 1, "", "get_runner"], [0, 4, 1, "", "set_initial_state"], [0, 4, 1, "", "set_page_config"], [0, 4, 1, "", "set_page_header"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "terms": {"": [0, 28, 29, 32, 36, 40, 46, 47, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 85, 87, 89, 90, 91, 107, 109, 110, 111, 112, 113, 114, 115, 120, 124, 126, 127, 129, 131], "0": [0, 15, 23, 27, 32, 37, 38, 39, 40, 48, 52, 53, 54, 62, 64, 67, 72, 74, 75, 76, 77, 78, 86, 87, 89, 90, 91, 92, 93, 103, 116, 118, 120, 123, 124, 126, 130, 131], "002": [70, 72], "01": 88, "04": 76, "06": [9, 10, 11, 50], "07": [10, 11, 50], "08": [9, 10, 11, 50], "09": 76, "0eec7e3a": 130, "0x7f89ae2135b0": 0, "1": [0, 27, 29, 36, 40, 43, 58, 62, 63, 64, 68, 69, 72, 74, 75, 77, 79, 81, 86, 115, 118, 120, 123, 124, 129], "10": [0, 62, 64, 72, 73, 74, 83, 102, 111, 116, 119, 120, 122, 126, 127, 129], "100": [52, 65, 66, 67, 68, 69, 71, 130], "1000": 111, "100k": 100, "101": 118, "1024": [32, 34, 51], "10k": [23, 100], "10x": 77, "11": [59, 130], "1106": [74, 75, 111, 114, 115, 124, 130], "12": 96, "125m": [73, 77, 78], "128": [29, 40, 49], "13": 72, "132": 52, "13b": 100, "14": 52, "14b": 78, "150": 52, "1536": [68, 69], "15min": 58, "16": [19, 75, 77, 84, 85, 97, 103], "16384": 67, "16k": [74, 75, 76, 83, 84, 85, 103, 111, 114, 115, 124, 130], "17": 59, "18": [10, 11, 50], "19530": 67, "199": 52, "1d": 36, "2": [21, 23, 26, 36, 40, 58, 60, 61, 62, 72, 73, 77, 78, 79, 82, 96, 104, 108, 115, 116, 117, 118, 126, 129], "200": [52, 68], "2015": 88, "2022": 50, "2024": [9, 10, 11, 50, 76], "205": 52, "24": [32, 34, 51], "25": 39, "27": 71, "2d": [27, 36], "3": [27, 37, 39, 40, 43, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74, 75, 79, 83, 84, 85, 103, 111, 114, 115, 118, 122, 124, 127, 129], "30": [67, 73, 129], "300": [21, 82], "3000": 57, "32": [8, 40, 94, 95, 96, 101, 104], "3b": [23, 100], "4": [39, 56, 62, 72, 73, 74, 76, 79, 103, 115, 118, 119, 120, 129], "400": 78, "4000": 74, "4096": 78, "42": 8, "4d33": 130, "4o": [9, 10, 11, 43, 44, 48, 50, 66, 67, 68, 69, 71], "5": [23, 39, 40, 43, 56, 60, 62, 64, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 92, 102, 103, 111, 114, 115, 118, 122, 124, 126, 129], "50": [39, 40, 67, 69, 70, 71, 73], "50051": 71, "51": 120, "512": [0, 32, 34, 40, 76, 77, 104], "514": 54, "52": 52, "6": [40, 56, 73, 74, 79, 87, 89, 115, 118, 129], "60": [0, 27, 119], "6333": 69, "64": [29, 40, 59, 69, 74, 89, 90, 92, 93, 94, 95, 96, 98, 100, 101, 104, 105, 113, 116], "666": 56, "7": [64, 79, 118, 129], "7039180890341347": 55, "70b": 63, "72": 53, "7680": [15, 53], "7690": 0, "777": 56, "797979": 56, "7b": [21, 61, 62, 72, 77, 78, 82, 117], "7e604b30339b": 130, "8": [7, 56, 59, 79, 97, 103, 118, 129], "80": [119, 120], "8000": [15, 52, 65, 131], "8012": 78, "8080": 71, "822": 56, "85": [86, 90, 91], "8a31": 52, "8cc5": 130, "9": [40, 129], "90b": 60, "92": 52, "98": 52, "A": [0, 7, 9, 10, 11, 15, 23, 27, 29, 36, 40, 50, 54, 74, 106, 110, 116, 124, 127, 128, 129], "And": [10, 27, 29, 40, 44, 47, 49, 58, 59, 60, 63, 66, 70, 76, 77, 78, 111, 117, 122, 124, 127, 131], "As": [36, 46, 50, 52, 53, 55, 72, 80, 121, 122], "At": [48, 49, 62, 72, 73, 92, 97, 99, 108, 122, 124, 127], "Be": [46, 59], "But": [36, 40, 47, 48, 49, 58, 122, 124, 127, 130], "By": [46, 54, 64, 70, 75, 83, 84, 85, 116, 118, 128, 129], "For": [10, 27, 32, 33, 36, 38, 40, 44, 50, 51, 52, 55, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 122, 124, 126, 127, 129, 130, 131], "If": [0, 5, 8, 15, 27, 29, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 101, 104, 117, 118, 122, 123, 124, 127, 128, 130, 131], "In": [32, 35, 36, 38, 44, 49, 50, 51, 55, 58, 64, 70, 76, 77, 78, 86, 122, 123, 124, 127, 129, 130], "It": [0, 8, 10, 11, 15, 27, 28, 29, 32, 36, 38, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 81, 85, 86, 88, 92, 96, 97, 101, 102, 105, 106, 107, 108, 110, 111, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 131], "Its": [27, 29, 36, 69, 77, 80, 83, 86, 102, 116], "No": 124, "Not": [8, 20, 43, 69, 71, 106, 116], "Of": 58, "On": [36, 86], "Or": [36, 59, 92, 97, 99, 108, 131], "TO": 59, "That": [57, 58, 127], "The": [0, 7, 8, 10, 11, 15, 20, 21, 23, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131], "Then": [36, 50, 51, 57, 59, 62, 72, 124], "There": [27, 36, 40, 43, 47, 57, 58, 59, 61, 72, 73, 76, 86, 106, 116, 118, 123, 127, 130, 131], "These": [36, 47, 74, 75, 83, 84, 85, 102, 113, 114, 115, 120, 128, 131], "To": [27, 35, 36, 40, 45, 49, 59, 64, 66, 67, 68, 69, 70, 71, 72, 76, 78, 124, 126, 127, 129, 131], "Will": 27, "With": [36, 76, 127, 131], "_": 129, "__fields__": [0, 9, 10, 11, 15, 23], "__main__": 52, "__name__": 52, "abil": 105, "abl": 116, "about": [0, 9, 10, 11, 15, 23, 32, 33, 34, 36, 38, 39, 42, 43, 44, 47, 50, 51, 60, 64, 65, 73, 75, 77, 78, 84, 85, 89, 90, 109, 110, 111, 112, 117, 121, 122, 123, 124, 128, 129, 131], "abov": [55, 62, 72, 122, 123, 127, 131], "absolut": 55, "abstract": [19, 28], "abstracteventloop": 29, "accept": 55, "access": [0, 15, 39, 53, 70, 79, 102], "accident": 68, "acclaim": 66, "accomplish": 45, "accord": [10, 32, 38, 44], "account": [60, 68], "accumul": 83, "accur": [35, 40, 46, 123, 129], "accuraci": [107, 116, 120], "achat": 47, "achiev": [49, 54, 124, 128], "acomplet": 0, "across": [66, 84, 111, 116, 120, 126, 128], "act": 128, "action": [122, 127], "actual": [29, 36, 52, 55, 119], "ad": [11, 40, 46, 66, 67, 68, 69, 71, 128, 130], "ada": [70, 72], "adapt": 73, "add": [40, 45, 59, 66, 67, 68, 69, 71, 74, 80, 81, 89, 90, 96, 121, 124, 127, 131], "add_essential_metadata": [1, 14], "add_essential_metadata_llama_text_nod": [1, 14], "add_file_nam": [32, 33, 34, 51], "add_gen_gt": [8, 11], "addit": [0, 7, 21, 69, 72, 75, 80, 81, 82, 84, 85, 111, 113, 114, 115, 129, 130, 131], "addition": [71, 110], "additional_kwarg": 0, "address": [57, 83, 128], "adjust": [40, 66, 67, 68, 69, 71, 129, 130], "advanc": [39, 52, 66, 69, 127], "advanced rag": [70, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127], "advantag": 76, "advent": [40, 51], "aespa": [36, 50], "aespa1": 36, "aespa2": 36, "aespa3": 36, "affect": [20, 36, 124, 128], "aflatten_appli": [0, 29], "afraid": 40, "after": [5, 29, 32, 35, 40, 47, 48, 49, 50, 53, 57, 58, 59, 63, 81, 102, 122, 124, 127, 130, 131], "ag": 115, "again": [51, 125, 127, 131], "against": 129, "ai": [7, 23, 46, 50, 52, 57, 66, 97, 101, 102, 125], "aim": [40, 118, 120, 128], "album": 50, "algorithm": [117, 118, 119], "all": [0, 29, 32, 36, 38, 40, 45, 47, 51, 54, 55, 56, 57, 58, 59, 64, 70, 72, 74, 76, 77, 78, 79, 86, 88, 90, 91, 96, 111, 115, 116, 120, 122, 123, 125, 126, 127, 128, 130, 131], "all_fil": [0, 7, 44], "alloc": 115, "allow": [52, 59, 67, 69, 70, 74, 75, 80, 81, 84, 85, 100, 113, 114, 115, 118, 128], "almost": 48, "alon": [111, 116, 127], "along": [54, 67, 69], "alpha": 124, "alreadi": [0, 15, 51, 52, 71, 124, 129], "also": [28, 32, 36, 39, 40, 51, 54, 55, 58, 64, 76, 77, 92, 118, 127], "altern": 59, "alwai": [33, 34, 40, 42, 53, 70, 124], "amazon": 60, "among": [0, 119, 124], "amount": 83, "an": [0, 15, 32, 35, 36, 38, 40, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 64, 65, 67, 68, 69, 71, 72, 83, 96, 101, 102, 112, 113, 114, 121, 122, 123, 124, 127, 130], "analysi": 83, "ani": [0, 8, 10, 28, 29, 36, 46, 47, 50, 55, 58, 59, 60, 61, 63, 77, 80, 82, 83, 86, 102, 111, 116, 120, 127, 128, 130], "annot": [0, 9, 10, 11, 15, 23], "anoth": [50, 103, 128, 130, 131], "answer": [8, 10, 11, 15, 26, 35, 36, 40, 47, 48, 50, 51, 54, 55, 56, 64, 66, 67, 68, 69, 71, 76, 82, 86, 105, 109, 110, 111, 112, 127, 129], "answer_creation_func": 40, "answer_gt": 56, "anthrop": 43, "anthropic_api_kei": 43, "anywher": 53, "ap": 55, "api": [0, 7, 27, 43, 57, 61, 62, 63, 65, 68, 69, 71, 72, 74, 76, 92, 97, 99, 108, 121, 122], "api_bas": [61, 62, 63, 72, 130], "api_endpoint": 15, "api_kei": [23, 43, 61, 62, 63, 65, 68, 69, 71, 72, 76, 92, 97, 99, 108, 130], "apirunn": [0, 15, 52, 131], "app": [15, 52, 59], "appear": 130, "append": 52, "appli": [29, 52, 66, 74, 102, 111, 116, 120, 128, 130, 131], "applic": [52, 65, 66, 69, 83, 106, 116], "apply_recurs": [0, 29], "approach": [83, 118], "appropri": [67, 69, 70, 71], "apt": 130, "ar": [10, 15, 27, 29, 32, 36, 38, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 106, 111, 113, 114, 115, 116, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131], "arbitrari": [66, 67, 68, 69, 71, 74, 80, 83, 86, 102, 111, 116], "arbitrary_types_allow": [0, 23], "arg": [0, 7, 14, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29], "argument": [0, 7, 15, 21, 29, 75, 84, 85, 113, 114, 115], "aris": 110, "arm": 101, "arrai": [23, 52], "arrang": 128, "articl": 29, "artifici": 52, "asap": 127, "ask": [10, 36, 50, 54, 58, 127], "aspect": 128, "assess": [54, 102], "assist": [46, 50], "associ": [29, 66, 67, 68, 69, 71, 83], "assumpt": 50, "ast": 122, "astream": [18, 19], "async": [0, 7, 9, 10, 11, 19, 23, 27, 29, 47], "async_postprocess_nod": [18, 23], "async_run_llm": [18, 23], "asynccli": 23, "asynchron": 29, "asyncio": 29, "asyncmixedbreadai": 23, "asyncopenai": [9, 10, 11, 46, 48, 50, 111], "asyncrankgptrerank": [18, 23], "atom": 115, "attempt": 123, "attribut": 0, "augment": [20, 79, 128, 130, 131], "authent": [62, 66, 67, 68, 69, 71, 72], "auto": [15, 58, 59, 61, 72, 118], "auto rag": 58, "autom": 114, "automat": [28, 29, 36, 40, 52, 58, 60, 61, 63, 64, 66, 71, 74, 80, 83, 86, 101, 102, 111, 116, 124, 131], "automl": 58, "autorag": [32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 62, 65, 66, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129], "autorag config": [122, 125], "autorag doc": 58, "autorag fold": 123, "autorag gui": 57, "autorag instal": 59, "autorag multi gpu": 77, "autorag system": 128, "autorag tutori": 131, "autorag yaml": [122, 125], "autorag_hq": 58, "autorag_search": 66, "autorag_test": 72, "autoragbedrock": 0, "autoraghq": 59, "autotoken": 111, "avail": [0, 40, 43, 44, 62, 72, 96, 112, 130], "averag": [0, 56, 74, 111, 116, 120], "averaged_perceptron_tagger_eng": 59, "avoid": [0, 50, 129], "avoid_empty_result": 0, "aw": [0, 62, 68, 72], "awai": [57, 131], "await": [0, 8, 47, 66, 67, 68, 69, 71], "awar": 129, "awq": 78, "aws_access_key_id": 0, "aws_secret_access_kei": 0, "aws_session_token": 0, "azur": [43, 68], "b": 124, "baai": [23, 72, 94, 95, 101], "backbon": 54, "backward": 81, "bad": [48, 49, 127], "badminton": 115, "baesd": 50, "band": 50, "base": [0, 1, 4, 8, 9, 10, 18, 32, 35, 40, 43, 46, 47, 50, 52, 54, 57, 58, 66, 67, 68, 69, 71, 72, 75, 82, 84, 85, 91, 94, 96, 97, 98, 99, 100, 102, 103, 105, 107, 109, 112, 118, 119, 120, 125, 126, 127, 128], "base_url": 52, "basegener": [18, 19], "basellm": [9, 10, 11, 47], "basemodel": [9, 10, 11, 15], "basemodul": [0, 19, 21, 23, 25, 26, 27, 28], "baseoutputpars": 0, "basepassageaugment": 20, "basepassagecompressor": [18, 21], "basepassagefilt": 22, "basepassagererank": [18, 23], "basepromptmak": [18, 25], "baseprompttempl": [0, 23], "basequeryexpans": [18, 26], "baseretriev": [18, 27], "baserunn": [0, 15], "basevectorstor": 65, "bash": 59, "basi": [38, 44, 56, 128], "basic": [11, 43, 49, 51], "batch": [7, 19, 21, 23, 29, 40, 59, 64, 66, 67, 68, 69, 71, 74, 75, 76, 84, 85, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 130], "batch_appli": [1, 8, 46, 47, 49, 50, 51], "batch_filt": [1, 8, 10, 48], "batch_siz": [8, 23, 29], "becaus": [10, 27, 32, 35, 36, 38, 44, 45, 47, 48, 49, 50, 77, 80, 83, 86, 102, 107, 116, 121, 125, 127, 130, 131], "becom": [40, 51, 122], "bedrock": [0, 62, 72], "bedrock_config": 60, "been": [126, 131], "befor": [27, 32, 50, 60, 61, 62, 63, 67, 72, 81, 83, 122, 127, 129, 130, 131], "behavior": [36, 65, 75, 84, 85, 107, 113, 114, 115, 128], "being": [75, 84, 85], "belong": 123, "below": [8, 32, 43, 44, 46, 48, 49, 52, 53, 55, 59, 64, 66, 68, 70, 71, 72, 74, 77, 78, 87, 88, 89, 90, 91, 127, 130, 131], "benefici": 69, "benz": 115, "bert_scor": [64, 74], "best": [0, 29, 58, 67, 68, 69, 71, 110, 118, 123, 126, 127, 131], "best_": 123, "best_0": 123, "best_column_nam": 29, "beta": 73, "better": [47, 49, 80, 83, 86, 87, 91, 102, 116, 124, 131], "between": [23, 45, 54, 55, 65, 67, 68, 69, 71, 74, 80, 117, 118, 126], "bfloat16": 107, "bge": [23, 72, 94, 95, 101], "bilingu": 54, "bin": 59, "bird": 115, "bit": [47, 57], "bleu": [66, 67, 68, 69, 71, 74, 111, 122, 126, 127, 129, 130], "blue": 127, "bm": 72, "bm25": [0, 18, 64, 73, 79, 116, 120, 122, 123, 127], "bm25_api": 27, "bm25_corpu": 27, "bm25_ingest": [18, 27], "bm25_path": 27, "bm25_pure": [18, 27], "bm25_token": [27, 73, 117], "bm25okapi": [27, 117], "bobb": 58, "bool": [0, 5, 7, 8, 10, 15, 23, 28, 29, 65, 66], "boolean": 107, "boost": [76, 101], "both": [0, 52, 55, 64, 66, 81, 130], "botocor": 0, "botocore_config": 0, "botocore_sess": 0, "bottom": 85, "bowl": 50, "branch": 127, "break": [45, 56, 65], "brew": 130, "brief": [50, 66, 67, 68, 69, 71], "broader": 128, "browser": [15, 57], "bshtml": [42, 44], "bucket_nam": 66, "buffer": 52, "bui": 56, "build": [36, 51, 63, 123, 124, 127, 129], "built": [59, 129], "bulb": 50, "button": 63, "byte": 29, "byte_data": 29, "c": [59, 130], "cache_batch": 40, "calcul": [55, 65, 67, 68, 69, 71, 80, 83, 89, 90, 107, 118, 119, 126], "call": [0, 47, 62, 72, 75, 76, 84, 85, 107, 117, 118], "callabl": [0, 1, 7, 8, 14, 27, 28, 29, 32], "callback_manag": [0, 23], "callbackmanag": [0, 23], "can": [5, 7, 8, 10, 15, 23, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131], "cannot": [59, 68, 70, 111, 116], "capabl": [66, 67, 68, 69, 71], "capella": 66, "capit": 50, "case": [36, 40, 51, 55, 58, 65, 67, 68, 69, 70, 71, 77, 124, 127, 130], "cast": [19, 21, 23, 25, 26, 27, 28], "cast_corpus_dataset": [0, 29], "cast_qa_dataset": [0, 29], "cast_queri": [18, 27], "cast_to_run": [0, 18, 19, 21, 23, 25, 26, 27, 28], "castorini": [23, 100], "categor": 125, "caus": [92, 97, 124, 130, 131], "cc": [27, 120], "cd": [57, 59], "certain": [29, 47], "certainli": [52, 65], "cg": 55, "chain": [54, 124], "chang": [10, 29, 40, 49, 57, 72, 73, 92, 97, 108, 117, 127, 128, 130], "channel": [58, 130, 131], "chapter": 51, "charact": [38, 44], "characterist": [67, 68, 69, 71], "chat": [0, 76, 130], "chat_box": 0, "chat_prompt": 21, "chatinterfac": 15, "chatmessag": [0, 9, 23, 47, 50], "chatmodel": 39, "chatopenai": 39, "chatrespons": [23, 47], "check": [0, 28, 35, 36, 49, 51, 52, 57, 58, 59, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 77, 79, 94, 95, 117, 122, 123, 127, 130, 131], "check_expanded_queri": [18, 26], "check_generation_gt": 46, "child": 115, "choic": [117, 124], "choos": [10, 23, 36, 67, 68, 69, 71, 103, 117, 121, 124, 126], "chroma": [0, 70, 72, 73, 123], "chroma_cloud": 65, "chroma_default": 65, "chroma_ephemer": 65, "chroma_http": 65, "chroma_openai": 72, "chroma_persist": 65, "chromadb": [40, 121], "chunk": [0, 1, 5, 8, 35, 36, 40, 49, 52, 84, 112, 127], "chunk_config": [32, 51], "chunk_method": [32, 34, 49, 51], "chunk_modul": [33, 34], "chunk_overlap": [32, 34, 40, 49, 51], "chunk_project_dir": 51, "chunk_siz": [29, 32, 34, 40, 49, 51, 52], "chunked_cont": 32, "chunked_str": 32, "chunker": 51, "ci": 59, "circl": 127, "ciudad": 50, "cl": 29, "clarifi": 40, "class": [0, 8, 9, 10, 11, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 36, 39, 62, 65, 67, 68, 71, 72, 101, 103, 105, 121], "classif": 49, "classifi": [48, 55], "classmethod": [15, 27, 28], "classvar": [0, 9, 10, 11, 15, 23], "claud": [60, 62, 72], "clear": 46, "clearli": 50, "cli": [60, 131], "click": [57, 63], "client": [0, 9, 10, 11, 23, 40, 46, 48, 50, 67, 69, 70, 71], "client_typ": [65, 69, 70, 71, 72, 73], "clone": 59, "close": 107, "cloud": [7, 65, 66, 68, 69], "clova": [0, 1, 38, 44, 45], "co": [58, 72], "co_api_kei": 92, "code": [8, 11, 32, 33, 34, 41, 42, 51, 59, 62, 71, 72, 122], "coher": [0, 18, 74, 79, 92, 97, 125], "cohere_api_kei": [92, 125], "cohere_cli": 23, "cohere_rerank": [79, 102], "cohere_rerank_pur": [18, 23], "coherererank": [18, 23], "cointegr": 72, "colber": 93, "colbert": [0, 18, 79, 97, 102], "colbert_rerank": [79, 93], "colbertrerank": [18, 23], "colbertv2": [23, 93], "collect": [27, 29, 36, 40, 65, 67, 68, 69, 71, 122, 127, 128], "collection_nam": [65, 66, 67, 69, 70, 71, 72, 73, 123], "column": [0, 8, 15, 20, 26, 29, 36, 40, 47, 50, 52, 131], "column_nam": 29, "com": [15, 52, 57, 58, 59, 63, 67, 71, 127], "combin": [27, 28, 29, 45, 111, 118, 119, 122, 124, 128], "come": [36, 50, 55, 58, 113, 114, 115, 124, 127], "comedi": 115, "command": [53, 57, 58, 59, 60, 61, 63, 64, 130], "commentari": 46, "commit": 130, "common": [27, 47, 59, 101, 115, 126, 128, 130, 131], "compani": 58, "compar": [56, 74, 126, 129], "comparison": [56, 129], "compat": [8, 62, 72, 77], "compatibilti": 77, "complet": [0, 32, 38, 44, 62, 64, 72, 76], "completion_to_prompt": 0, "completionrespons": 0, "completiontoprompttyp": 0, "complex": [41, 47, 127], "complic": [47, 57], "compon": 128, "comprehens": 79, "compress": [21, 56, 82, 83, 86, 127], "compress_raga": [8, 9, 47], "compressor": [56, 79, 82, 83, 84, 85, 125], "comput": [0, 9, 10, 11, 15, 18, 23, 66, 83, 101], "computedfieldinfo": [0, 9, 10, 11, 15, 23], "concaten": 44, "concept": 54, "concept_completion_query_gen": 50, "concis": [11, 49, 50, 51], "conclud": 107, "conclus": 110, "condit": [36, 39], "conditional_evolve_raga": [8, 9, 47], "config": [0, 9, 10, 11, 15, 23, 59, 62, 70, 72, 73, 126, 127, 130], "config_dict": 15, "configdict": [0, 9, 10, 11, 15, 23], "configur": [0, 9, 10, 11, 15, 23, 29, 57, 58, 59, 60, 61, 63, 74, 75, 77, 83, 84, 85, 102, 107, 111, 116, 120, 124, 128, 131], "conflict": 54, "conform": [0, 9, 10, 11, 15, 23], "confus": 86, "connect": [0, 54, 65, 66, 69, 70, 71, 121], "connection_str": 66, "consid": [55, 59, 70, 77, 78, 116], "consist": [74, 125], "constraint": [46, 59], "construct": 57, "consum": [58, 70], "contain": [7, 8, 23, 27, 28, 29, 36, 38, 40, 44, 45, 46, 47, 55, 109, 110, 112, 115, 123, 124, 128, 130, 131], "content": [32, 40, 42, 44, 47, 50, 52, 71, 83, 87, 88, 89, 90, 91, 102, 111, 120, 121, 129], "content_embed": 23, "content_s": 40, "contents_list": 29, "context": [0, 23, 46, 48, 50, 54, 55, 79, 82, 107, 108, 111, 128], "context_s": 0, "contextu": 54, "contradict": 54, "contributor": 59, "control": [62, 67, 72, 77], "conveni": [40, 53], "convert": [0, 15, 28, 29, 40, 41, 43, 122], "convert_datetime_str": [0, 29], "convert_env_in_dict": [0, 29], "convert_inputs_to_list": [0, 29], "convert_string_to_tuple_in_dict": [0, 29], "convex": [27, 118], "cool": 127, "copi": 63, "core": [0, 34, 40, 47, 50, 54, 62, 72], "coroutin": 29, "corpu": [1, 4, 8, 27, 35, 48, 49, 50, 54, 59, 60, 61, 63, 64, 70, 73, 80, 88, 106, 112, 120, 123, 131], "corpus_data": [27, 29], "corpus_data_path": [59, 60, 61, 63, 64, 70, 130, 131], "corpus_df": [8, 14, 29, 39, 40, 51], "corpus_df_to_langchain_docu": [1, 14], "corpus_inst": 51, "corpus_path": 27, "corpus_save_path": 8, "corpus_test": 131, "correct": [0, 55, 129], "correl": 54, "correspond": [0, 9, 10, 11, 15, 23, 28, 66, 67, 68, 69, 71], "cosin": [54, 65, 67, 68, 69, 71, 80, 129], "cost": [45, 66, 83, 131], "cot": 54, "couchbas": [0, 70], "couchbase_connection_str": 66, "couchbase_db": 66, "couchbase_password": 66, "couchbase_usernam": 66, "couldn": 53, "count": [82, 117], "cours": 58, "cover": [32, 35, 38, 40, 44, 47, 49, 50, 51], "cpp": 96, "cpu": [101, 125], "cr": 71, "creat": [0, 5, 7, 8, 15, 28, 29, 32, 35, 36, 37, 38, 41, 44, 49, 50, 51, 52, 53, 58, 64, 65, 67, 68, 69, 71, 109, 112, 118, 123, 127], "creation": [8, 50, 58, 131], "criterion": 128, "critic_llm": 39, "cross": [23, 96, 104], "crucial": [32, 35, 36, 38, 44, 49, 70, 83, 102, 110, 128], "csv": [32, 38, 44, 124, 131], "cucumb": 115, "cuda": [59, 93, 94, 95, 96, 101, 104], "cudnn": 59, "cue": 107, "cumul": 77, "curiou": 64, "current": [15, 29, 32, 38, 44, 52, 56, 96, 128, 131], "curs": 47, "custom": [0, 43, 53, 66, 67, 68, 69, 71, 75, 84, 85, 89, 90, 103, 107, 113, 114, 115, 121, 126, 128, 129, 130], "custom_gener": 129, "custom_query_gen": 50, "custom_retriev": 129, "cutoff": [79, 86], "cycl": 127, "czech": 32, "d": [26, 29, 36, 52], "dag": 127, "dai": 127, "danish": 32, "data": [0, 27, 28, 29, 32, 33, 34, 36, 37, 38, 41, 42, 44, 46, 47, 48, 50, 52, 54, 58, 59, 64, 66, 67, 68, 69, 70, 71, 74, 83, 102, 110, 116, 121, 128, 131], "data_list": 52, "data_path": 7, "data_path_glob": [0, 7, 51], "data_path_list": 7, "databas": [65, 66, 67, 68, 69, 71, 121], "dataformat": 32, "datafram": [0, 5, 8, 11, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 47, 129], "dataset": [8, 10, 29, 32, 35, 40, 48, 50, 51, 55, 58, 59, 60, 61, 63, 64, 70, 118, 123, 129, 130], "date": [50, 79, 88], "datetim": [36, 38, 44, 88, 106], "db": [65, 127], "db_name": 67, "db_type": [65, 66, 67, 68, 69, 70, 71, 72, 73], "dbsf": [27, 118, 120], "dcg": 55, "dd": 88, "de": 50, "deal": 83, "debug": 36, "decid": [64, 77, 127, 128], "decis": 128, "decod": 29, "decode_multiple_json_from_byt": [0, 29, 52], "decompos": [26, 79, 116], "decomposit": 115, "decor": [0, 19, 21, 23, 25, 26, 27, 28, 29, 129], "decreas": [48, 76, 93, 94, 95, 96, 101, 104], "dedic": 79, "deep": 101, "deepeval_prompt": [0, 16], "def": [32, 47, 52, 129], "default": [0, 5, 7, 11, 15, 21, 23, 27, 29, 32, 36, 40, 43, 46, 50, 52, 59, 65, 66, 67, 68, 69, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 111, 113, 114, 116, 117, 118, 119, 121, 122, 126, 128, 130], "default_config": [70, 130, 131], "default_databas": 65, "default_factori": [0, 23], "default_ten": 65, "defin": [0, 9, 10, 11, 15, 23, 59, 77, 80, 100, 102, 120, 121, 126, 129], "delet": [29, 66, 67, 68, 69, 71, 86, 130], "delete_collect": [67, 68, 69, 71], "deletion_protect": 68, "deliv": 127, "demo": 58, "demoj": [0, 29], "dens": [27, 113, 117, 121], "depend": [10, 32, 59, 77, 117, 123, 131], "deploi": [0, 52, 53, 58, 101], "deploy": [58, 61, 67, 69, 71, 72, 118], "deportiva": 50, "deprec": [27, 37], "deriv": 46, "describ": [51, 52, 72], "descript": [0, 23, 49, 52, 62, 72, 74, 80, 102, 120], "design": [40, 54, 64, 67, 68, 71, 74, 105, 110, 118, 119], "detail": [41, 47, 50, 51, 54, 60, 70, 74, 77, 78, 98, 103, 111, 112, 116, 128, 131], "detect": 118, "determin": [66, 67, 68, 69, 74, 123, 126], "develop": [52, 69, 77, 124, 128], "devic": [23, 101], "device_map": [61, 72], "df": [15, 29, 48, 49, 51, 130], "diagram": [124, 127], "dict": [0, 7, 8, 9, 10, 11, 14, 15, 18, 21, 23, 27, 28, 29, 45, 47, 65], "dict_": 29, "dict_column": 29, "dict_to_markdown": [0, 29], "dict_to_markdown_t": [0, 29], "dictionari": [0, 9, 10, 11, 15, 23, 27, 29, 32, 36, 39, 40, 74, 100, 129], "did": [0, 129], "didn": 39, "differ": [10, 29, 32, 36, 40, 44, 46, 47, 49, 51, 54, 62, 65, 72, 74, 100, 114, 116, 117, 119, 123, 128], "difficulti": [47, 130], "dimens": [26, 29, 66, 68, 69], "dir": [44, 52, 131], "direct": [44, 47, 50, 61, 72, 106, 116], "directli": [8, 39, 43, 50, 54, 55, 72, 83, 92, 97, 99, 108, 122, 124, 130], "directori": [0, 5, 15, 32, 38, 42, 44, 51, 52, 53, 57, 64, 70, 130, 131], "directoryload": 40, "disabl": [68, 70, 130, 131], "discord": [58, 127, 130, 131], "discrimin": 48, "displai": 36, "distanc": [67, 68, 69, 71, 129], "distinct": 83, "distinguish": [45, 118], "distribut": [39, 40, 66], "divid": [41, 55, 117, 125], "dl": 100, "do": [5, 8, 26, 36, 44, 45, 47, 55, 56, 58, 59, 122, 123, 127, 131], "doc": [15, 36, 37, 55, 58, 59, 72, 77, 126], "doc123": 52, "doc456": 52, "doc_id": [0, 15, 27, 29, 32, 52, 130], "docker": 69, "dockerfil": 59, "document": [5, 7, 8, 14, 15, 23, 27, 32, 35, 36, 38, 41, 42, 43, 44, 45, 50, 51, 52, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 83, 102, 108, 111, 112, 116, 117, 120, 122, 124, 126, 127, 128, 131], "document_load": [7, 40, 42], "doe": [15, 27, 44, 46, 54, 59, 74, 75, 76, 77, 83, 86, 102, 111, 122, 124], "doesn": [55, 66, 67, 68, 69, 71, 115, 127, 130], "domain": 117, "don": [10, 29, 36, 38, 40, 44, 46, 49, 51, 55, 58, 111, 118, 125, 127, 130, 131], "done": 131, "dontknow": [1, 8, 48, 49, 51], "dontknow_filter_llama_index": [8, 10, 48], "dontknow_filter_openai": [8, 10, 48], "dontknow_filter_rule_bas": [8, 10, 48, 49, 51], "dotenv": [59, 130], "doubl": 36, "down": [55, 65], "download": [36, 59, 131], "dozen": 64, "drive": 115, "drop": [10, 48, 49, 51, 110, 130], "due": [59, 96], "dummi": 129, "duplic": [28, 36, 122], "durat": 67, "dure": [116, 130], "dutch": 32, "dynam": [59, 128], "dynamically_find_funct": 0, "e": [59, 62, 72, 75, 84, 85, 129], "e1c0": 130, "e5": 72, "each": [0, 8, 27, 28, 29, 36, 39, 40, 44, 51, 52, 54, 65, 70, 89, 90, 115, 118, 119, 122, 123, 124, 125, 126, 127, 128, 130], "earli": 36, "easi": [57, 63], "easier": [72, 122], "easili": [32, 38, 44, 50, 121, 127, 129, 131], "east": 68, "echo": 130, "edg": 66, "edit": [59, 64, 130], "editor": 122, "effect": [45, 47, 66, 74, 102, 119, 120, 128, 129, 131], "effici": [67, 68, 69, 71, 83], "effort": 128, "either": 55, "elem": 29, "element": [27, 28, 29], "els": 52, "emb": [121, 127], "embed": [40, 54, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 79, 80, 89, 90, 102, 117, 121, 123, 125, 129, 131], "embedding model": [62, 72], "embedding_batch": [65, 66, 67, 68, 69, 70, 71, 73], "embedding_kei": 66, "embedding_model": [29, 39, 40, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 89, 90, 116, 120, 129], "embedding_query_cont": [0, 29], "emploi": 115, "empti": [0, 36, 64, 67, 122], "empty_cuda_cach": [0, 29], "en": [9, 10, 11, 23, 32, 43, 46, 48, 49, 50, 51, 72, 74, 97, 100], "en_qa": 48, "en_qa_df": 48, "enabl": 68, "encod": [19, 23, 96, 104], "encount": 130, "encourag": 50, "end": [29, 36, 52, 107], "end_idx": [0, 15, 52], "endpoint": [0, 15, 61, 62, 72, 131], "engin": [69, 129], "enginearg": 77, "english": [32, 34, 92, 117, 125], "enhanc": [102, 107, 126, 128], "enough": [36, 86], "ensur": [50, 52, 59, 70, 74, 83, 102, 111, 116, 120, 129], "enter": 64, "entir": 66, "entri": 83, "entrypoint": 59, "enumer": 52, "env": [57, 59, 76], "environ": [7, 29, 42, 53, 59, 70, 77, 92, 97, 99, 108, 125, 130, 131], "ephemer": 65, "equal": 55, "equival": 52, "error": [0, 11, 76, 77, 92, 97, 103, 115], "essenc": 50, "essenti": [64, 73, 87, 88, 89, 90, 91, 111, 118, 119, 124, 128, 130], "estonian": 32, "etc": [36, 40, 122], "euclidean": [67, 68, 69, 71], "evalu": [10, 15, 29, 32, 35, 36, 37, 48, 54, 58, 59, 60, 61, 63, 64, 70, 74, 77, 83, 102, 111, 116, 118, 120, 122, 123, 126, 128, 130], "even": [0, 48, 110, 118, 125], "evenly_distribute_passag": [18, 27], "event": [29, 50, 52, 130], "event loop autorag": 130, "ever": 127, "everi": [73, 76, 128], "evolut": 39, "evolv": [1, 8, 49, 50], "evolve_to_rud": 47, "evolved_queri": [8, 9], "exact": [48, 54], "exactli": 55, "exampl": [0, 10, 36, 38, 40, 44, 47, 49, 54, 57, 62, 65, 67, 69, 70, 72, 73, 122, 124, 127, 130, 131], "example_node_line_1": 126, "example_node_line_2": 126, "exc_traceback": 0, "exc_typ": 0, "exc_valu": 0, "exce": [74, 76, 83, 102, 111, 115], "exceed": [111, 116, 120], "except": [56, 66, 125], "exclud": [0, 23, 50, 125], "exclus": 121, "execut": [0, 27, 29, 59, 62, 72, 116, 131], "exist": [5, 28, 36, 66, 67, 68, 69, 70, 71, 96, 123], "exist_gen_gt": 40, "existing_qa": 40, "existing_qa_df": 40, "exp_norm": [18, 23], "expand": [116, 124, 129], "expanded_query_list": 26, "expans": [26, 36, 79, 83, 113, 115, 125, 127], "expect": [36, 69, 107], "expens": [45, 48, 70], "experi": [58, 60, 61, 63, 64, 123, 127, 130, 131], "experiment": [70, 74], "expert": [46, 50], "expir": 53, "explain": [65, 123, 125, 126, 127], "explan": 50, "explicit": 54, "explicitli": 70, "explod": [0, 29], "explode_valu": 29, "explor": [59, 118, 119], "export": [59, 92, 97, 99, 108, 125, 130], "expos": 15, "express": 60, "extend": 65, "extens": [5, 38, 44, 70, 122], "extent": 54, "extern": 50, "extra": [7, 29, 46, 117], "extract": [15, 28, 42, 88, 106, 117, 118], "extract_best_config": [0, 15, 131], "extract_evid": [0, 1], "extract_node_line_nam": [0, 15], "extract_node_strategi": [0, 15], "extract_retrieve_passag": [0, 15], "extract_valu": [0, 28], "extract_values_from_nod": [0, 28], "extract_values_from_nodes_strategi": [0, 28], "extract_vectordb_config": [0, 15], "f": [47, 52, 79, 111], "f1": 83, "face": [58, 59, 101], "facebook": [73, 77, 78], "facet": 69, "facilit": 74, "fact": 127, "factoid": 49, "factoid_query_gen": [49, 50, 51, 73], "factori": 0, "factual": 50, "fail": [52, 69], "failur": 69, "fals": [0, 5, 7, 10, 15, 23, 29, 43, 65, 66, 70, 87, 91, 94, 95, 103, 107], "familiar": [57, 58, 127], "fashion": 85, "fast": [48, 77, 92, 96, 97, 108], "faster": [66, 67, 68, 69, 71, 77, 83], "fate": 127, "favorit": 122, "featur": [36, 41, 54, 59, 74, 78, 127, 131], "fee": 121, "feedback": [124, 127], "feel": [47, 57, 58, 127, 131], "fetch": [66, 67, 68, 69, 71, 80, 81, 120], "fetch_cont": [0, 29], "fetch_one_cont": [0, 29], "few": [51, 57, 115, 127, 131], "field": [0, 9, 10, 11, 15, 23, 55, 88, 106, 129], "fieldinfo": [0, 9, 10, 11, 15, 23], "fields_to_check": 28, "file": [0, 5, 7, 8, 14, 15, 29, 36, 40, 43, 52, 53, 54, 57, 58, 59, 62, 65, 67, 69, 70, 73, 77, 92, 97, 99, 103, 108, 118, 123, 124, 126, 127, 128, 129, 130], "file_dir": 5, "file_nam": 32, "file_pag": [0, 15, 52], "file_path": 14, "file_typ": 44, "filenam": 5, "filepath": [0, 5, 15, 29, 52], "filesystem": [14, 59], "fill": [29, 36, 54], "filter": [0, 1, 8, 51, 69, 76, 79, 80, 87, 89, 90, 91], "filter_by_threshold": 0, "filter_dict_kei": [0, 29], "filtered_qa": 48, "final": [0, 32, 38, 44, 45, 82, 119, 124, 127], "find": [10, 29, 33, 34, 40, 41, 42, 43, 48, 50, 54, 55, 58, 60, 62, 72, 78, 82, 105, 111, 118, 119, 120, 123, 124, 128], "find_key_valu": [0, 29], "find_node_dir": 0, "find_node_summary_fil": [0, 29], "find_trial_dir": [0, 29], "fine": 112, "finnish": 32, "first": [8, 15, 27, 29, 40, 47, 49, 50, 52, 55, 56, 57, 58, 59, 60, 63, 64, 66, 70, 77, 92, 97, 99, 102, 108, 121, 122, 123, 124, 125, 127], "fit": [54, 66, 128], "five": 36, "fix": 54, "fixed_min_valu": 27, "flag": [79, 102], "flag_embed": [0, 18], "flag_embedding_llm": [0, 18], "flag_embedding_llm_rerank": [79, 94], "flag_embedding_rerank": [79, 95], "flag_embedding_run_model": [18, 23], "flagembed": [59, 94, 95], "flagembeddingllm": 95, "flagembeddingllmrerank": [18, 23], "flagembeddingrerank": [18, 23], "flash": 43, "flashrank": [0, 18, 102], "flashrank rerank": 96, "flashrank_rerank": 96, "flashrank_run_model": [18, 23], "flashrankrerank": [18, 23], "flask": [15, 52, 58], "flat_list": 29, "flatmap": [1, 8], "flatten": 29, "flatten_appli": [0, 29], "flexibl": [66, 100, 118, 128], "float": [0, 15, 23, 27, 28, 52, 67, 77], "float16": [61, 72], "flow": 54, "fluenci": 74, "fn": 8, "focu": [83, 131], "focus": [46, 128], "folder": [15, 59, 60, 63, 70, 125, 127], "follow": [27, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 70, 72, 77, 88, 107, 118, 123, 127, 129, 130], "forget": 131, "form": [32, 35, 40, 41, 51, 54], "format": [0, 29, 32, 38, 40, 41, 44, 55, 88, 107, 123], "forward": 81, "found": [40, 50, 54, 75, 84, 85, 89, 90, 98, 103, 121, 131], "four": [56, 65, 125], "fp16": [94, 95], "frame": 0, "framework": [39, 54, 127], "franc": 50, "free": [52, 57, 58, 127, 131], "french": 32, "frequent": [62, 72], "friendli": 53, "from": [0, 7, 8, 9, 10, 11, 14, 15, 23, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 83, 88, 92, 96, 97, 99, 102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131], "from_datafram": [0, 28], "from_dict": [0, 28], "from_parquet": [32, 51], "from_trial_fold": [0, 15, 52, 53, 131], "from_yaml": [0, 15, 52, 53, 131], "frontend": 57, "fstring": [0, 18, 64, 66, 67, 68, 69, 71, 79, 109, 111, 112, 127], "full": [36, 44, 46, 59, 60, 63, 66, 68, 69, 71, 77, 78, 123, 128], "full_ingest": 70, "fulli": 59, "func": [0, 7, 19, 29], "function": [0, 5, 8, 10, 19, 21, 23, 25, 26, 27, 28, 29, 32, 38, 40, 41, 44, 49, 50, 65, 66, 67, 68, 69, 71, 73, 77, 105, 128, 129, 131], "fundament": 120, "further": [27, 55, 60, 61, 63, 75, 84, 85, 113, 114, 115], "fuse": [27, 118], "fuse_per_queri": [18, 27], "fusion": [27, 119], "futur": [36, 52, 76, 124, 127, 128], "g": [62, 72, 75, 84, 85, 129], "g_eval": [54, 74], "gcc": 130, "gcp": 68, "gemini": 43, "gemini_api_kei": 43, "gemma": [23, 94], "gener": [0, 8, 11, 15, 18, 29, 35, 36, 37, 40, 47, 48, 51, 52, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 75, 76, 77, 79, 83, 107, 111, 113, 114, 115, 116, 124, 125, 127, 128, 130], "generate_answ": 40, "generate_qa_llama_index": [40, 73], "generate_qa_llama_index_by_ratio": 40, "generate_qa_raga": 39, "generated_log_prob": [0, 28, 129], "generated_text": [0, 15, 28, 52, 129], "generated_token": 129, "generation_gt": [0, 1, 8, 10, 28, 46, 48, 49, 51, 129], "generation_result_df": 129, "generator_dict": 18, "generator_llm": 39, "generator_model": [62, 72], "generator_modul": 111, "generator_module_typ": [113, 114, 115], "generator_nod": [18, 19], "german": 32, "get": [0, 7, 14, 20, 29, 39, 40, 43, 47, 48, 50, 54, 59, 68, 75, 76, 78, 86, 92, 96, 97, 99, 108, 122, 124, 127, 130, 131], "get_best_row": [0, 29], "get_bm25_pkl_nam": [18, 27], "get_bm25_scor": [18, 27], "get_colbert_embedding_batch": [18, 23], "get_colbert_scor": [18, 23], "get_default_llm": 23, "get_event_loop": [0, 29], "get_file_metadata": [1, 14], "get_metric_valu": 0, "get_multi_query_expans": [18, 26], "get_nodes_from_docu": 40, "get_or_create_collect": 40, "get_param_combin": [0, 1, 14, 28], "get_query_decompos": [18, 26], "get_result": [18, 19], "get_result_o1": [18, 19], "get_runn": 0, "get_start_end_idx": [1, 14], "get_structured_result": [18, 19], "get_support_modul": 0, "get_support_nod": 0, "get_vers": 52, "gg": [58, 127], "girl": [36, 115], "gist": 54, "git": [57, 59], "github": [36, 57, 58, 59, 127, 130, 131], "give": [0, 47, 55], "given": [0, 5, 15, 27, 29, 40, 46, 48, 50, 64, 66, 67, 68, 69, 71, 82, 99, 100, 103, 105, 113, 114, 124], "glob": [38, 40, 44], "go": [36, 55, 57, 58, 63, 72, 117, 126, 131], "goal": [116, 124], "goe": [73, 127], "gone": 76, "good": [10, 36, 40, 48, 49, 51, 54, 127, 131], "got": 76, "gpt": [9, 10, 11, 39, 40, 43, 44, 48, 50, 54, 62, 66, 67, 68, 69, 71, 72, 74, 75, 76, 83, 84, 85, 103, 111, 114, 115, 124, 130], "gpt-3.5": 76, "gpt-4": 76, "gpt2": [74, 76, 111, 117], "gpt4o": [7, 43], "gpu": [101, 131], "gr": 15, "gradio": [0, 131], "gradiorunn": [0, 15, 131], "grain": 112, "gram": 54, "gratitud": 96, "great": [35, 40, 48, 58, 78, 117, 124], "greatest": 48, "greek": 32, "ground": [36, 46, 48, 54, 55, 74, 124, 129], "group": [36, 50], "grpc_port": 71, "gt": [0, 36, 46, 54, 55, 56, 124], "guarante": [86, 124], "guess": 47, "guid": [35, 40, 51, 58, 66, 71, 74, 83, 102, 111, 116, 117, 120, 127, 128, 131], "h": 52, "ha": [8, 11, 36, 40, 48, 50, 51, 54, 56, 83, 126, 127, 131], "had": 131, "halftim": 50, "hallucin": [32, 127], "ham": 71, "hamlet": 115, "hand": [36, 86], "handi": 14, "handle_except": 0, "happen": 127, "hard": [40, 47, 58, 124, 127], "hardwar": 101, "harmon": [54, 55, 56], "have": [0, 8, 10, 27, 29, 32, 35, 36, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 63, 64, 68, 70, 71, 72, 73, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 104, 106, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131], "haven": 52, "head": 29, "header": 65, "help": [36, 83, 101, 112, 118], "here": [15, 32, 33, 34, 35, 36, 38, 39, 42, 43, 44, 47, 50, 51, 52, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 82, 89, 90, 94, 95, 98, 108, 117, 121, 122, 123, 124, 125, 127, 129, 130, 131], "hf": [21, 82], "hf_config": 61, "hh": 88, "high": [69, 102], "higher": [54, 55, 77, 78, 83, 97, 128], "highest": 10, "highli": [47, 51, 54, 66, 117, 131], "hit": 55, "home": 50, "homepag": 58, "hood": 124, "hop": [8, 40, 49, 115], "hope": 123, "hopefulli": 55, "host": [15, 52, 59, 61, 62, 65, 68, 69, 71, 72, 131], "hour": 53, "how": [32, 35, 38, 40, 44, 46, 49, 50, 51, 55, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 84, 85, 89, 90, 107, 115, 117, 121, 122, 123, 125, 126, 127, 129, 131], "howev": [40, 51, 55, 70, 118, 124, 127], "html": [15, 34, 44], "htmlnodepars": 34, "http": [7, 15, 52, 57, 58, 59, 63, 65, 67, 69, 72, 78, 127], "hug": [59, 101], "huggingfac": [36, 58, 59, 62, 77, 111, 131], "huggingface_all_mpnet_base_v2": [64, 72], "huggingface_baai_bge_smal": 72, "huggingface_bge_m3": 72, "huggingface_cointegrated_rubert_tiny2": 72, "huggingfaceembed": 72, "huggingfacellm": [75, 84, 85], "human": 54, "hybrid": [27, 44, 79, 120, 122], "hybrid cc": 118, "hybrid rrf": 119, "hybrid_cc": [0, 18, 64, 79, 116, 118, 120], "hybrid_dbsf": 64, "hybrid_rrf": [0, 18, 64, 73, 79, 116, 119, 120, 122], "hybrid_rsf": 64, "hybridcc": [18, 27], "hybridretriev": [18, 27], "hybridrrf": [18, 27], "hyde": [0, 18, 62, 72, 79, 116], "hydrogen": 115, "hyperparamet": [27, 122], "hypothet": 113, "i": [0, 5, 7, 8, 10, 11, 15, 19, 21, 23, 25, 26, 27, 28, 29, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 123, 125, 128, 129, 131], "id": [0, 23, 27, 29, 32, 36, 49, 52, 60, 66, 67, 68, 69, 70, 71, 91, 96, 101, 120, 129], "id_": 29, "id_column_nam": 29, "idcg": 55, "ideal": [55, 65, 66, 69], "ident": 50, "identifi": [36, 52, 62, 65, 66, 67, 68, 69, 71, 72, 102, 120], "idf": [54, 117], "idx_rang": 8, "ignor": 52, "imag": [36, 123, 131], "imagin": 36, "imdb": 115, "immedi": 116, "impact": [55, 83, 111, 116, 121], "implement": [65, 67, 127, 129], "import": [32, 33, 34, 36, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 59, 62, 65, 70, 72, 73, 86, 115, 117, 119, 127, 131], "importerror": 130, "imposs": [48, 127], "improv": [69, 83, 102, 107, 116, 129], "inc": [57, 58, 59, 127], "includ": [36, 50, 52, 54, 55, 62, 65, 72, 75, 84, 85, 101, 111, 116, 118, 126, 128, 129], "incorrect": [55, 88], "increas": [47, 55, 69, 97, 116, 128, 130], "increment": 52, "index": [0, 5, 10, 27, 29, 32, 36, 48, 50, 52, 60, 61, 63, 68, 75, 76, 79, 112, 130], "index_nam": [66, 68], "index_typ": 67, "index_valu": 29, "indic": [29, 36, 55], "individu": 128, "industri": 52, "infer": [96, 101], "influenc": 55, "info": [52, 59], "inform": [27, 32, 33, 34, 36, 38, 42, 43, 44, 46, 47, 50, 54, 55, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 84, 85, 88, 89, 90, 102, 106, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 131], "ingest": [66, 68, 69], "ingest_batch": [66, 68, 69], "ini": 59, "initi": [0, 15, 49, 51, 62, 72, 77, 102, 107, 130], "initial_corpu": 49, "initial_corpus_df": 51, "initial_qa": [49, 51], "initial_qa_df": 51, "initial_raw": 49, "initial_raw_df": 51, "inner": [67, 68, 69, 71, 129], "input": [0, 11, 20, 23, 26, 27, 29, 36, 39, 40, 53, 75, 76, 83, 104, 108, 109, 110, 112, 114, 118, 119, 124, 127], "input_str": 23, "input_tensor": 23, "input_text": 23, "inquir": 50, "insert": [29, 36, 66, 67, 68, 69, 71], "insid": [0, 59, 131], "inspect": 59, "inspir": [81, 87, 88, 89, 90, 91, 113], "instal": [52, 58, 62, 71, 72, 78, 117, 131], "instanc": [7, 8, 10, 21, 27, 28, 29, 36, 47, 50, 51, 62, 70, 72, 75], "instead": [0, 50, 73, 78, 131], "instruct": [21, 36, 59, 60, 61, 62, 63, 64, 72, 77, 78, 82, 105, 107, 117], "int": [0, 7, 8, 14, 15, 19, 21, 23, 27, 29, 36, 65, 66, 67, 68, 69, 71], "integ": 52, "integr": [61, 63, 72, 78, 100, 128], "intel": 101, "intellig": 52, "intend": 128, "interact": [15, 53], "interchang": 128, "interest": 127, "interfac": [15, 58, 61, 62, 72], "intermedi": 23, "internet": [15, 121], "interv": 0, "intfloat": 72, "introduc": [47, 54, 73, 126], "introductori": [46, 50], "intuit": 69, "invent": 50, "invokemodel": 0, "involv": [69, 102, 120], "io": 71, "ip": [65, 67, 68, 69, 71], "ir": [23, 93], "irrelev": 86, "is_best": 29, "is_dont_know": [8, 10], "is_exist": [66, 67, 68, 69, 71], "is_fields_notnon": [0, 28], "is_passage_depend": [8, 10], "issu": [58, 74, 96, 127, 130, 131], "italian": 32, "item": [29, 55, 90, 91], "iter": [0, 8], "iter_cont": 52, "iterrow": 129, "its": [11, 15, 27, 28, 29, 36, 40, 51, 53, 65, 66, 105, 111, 116, 121, 124, 126, 127], "itself": [46, 62, 72, 118, 124], "ivf_flat": 67, "ja": [10, 32, 46, 48, 50, 59, 117], "japanes": 32, "java_hom": 59, "jdk": 59, "jean": [36, 50], "jeffrei": 58, "jina": [0, 18, 79, 97, 125], "jina_rerank": [79, 102], "jina_reranker_pur": [18, 23], "jinaai": 97, "jinaai_api_kei": [97, 125], "jinarerank": [18, 23], "job": 124, "jq_schema": [42, 44], "json": [29, 41, 43, 44, 52, 131], "json_schema": 0, "json_to_html_t": 41, "judgment": 54, "just": [8, 11, 15, 27, 36, 40, 46, 48, 51, 57, 76, 117, 127, 131], "k": [19, 20, 21, 23, 25, 26, 27, 28, 36, 72, 80, 102, 120, 122], "keep": [0, 29, 51, 76, 88, 90, 91, 122, 131], "kei": [0, 7, 15, 28, 29, 32, 33, 34, 36, 40, 42, 43, 44, 62, 63, 64, 66, 68, 69, 71, 72, 76, 92, 97, 99, 108, 121, 122, 130, 131], "key_column_nam": 29, "keyword": [0, 7, 21, 54, 72, 75, 84, 85, 113, 114, 115], "kf1_polici": 127, "kim": 58, "kind": [36, 127, 130], "kiwi": [32, 117], "kiwi_result": 32, "kiwipiepi": 32, "kkma": 117, "know": [10, 36, 46, 47, 49, 51, 58, 60, 61, 63, 72, 111, 122, 123, 124, 128, 131], "knowledg": [36, 46], "known": [40, 55, 66], "ko": [10, 32, 44, 46, 48, 50, 59, 79, 102], "ko-rerank": 98, "ko_rerank": 79, "konlpi": [33, 59, 117], "korea": [57, 58, 59, 127], "korean": [32, 33, 72, 98, 125], "korerank": [0, 18, 98], "koreranker_run_model": [18, 23], "kosimcs": 72, "kwarg": [0, 7, 8, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 75, 84, 85, 113, 114, 115], "l": [23, 96, 104], "l2": [65, 67, 68, 69, 71, 129], "label": [55, 113], "lama_index": 40, "lambda": [0, 32, 48, 49, 51, 129], "lang": [9, 10, 11, 48, 49, 50, 51, 74], "langchain": [1, 4, 7, 32, 39, 40, 44, 114, 127], "langchain_chunk": [0, 1, 33], "langchain_commun": [40, 42], "langchain_docu": 5, "langchain_document_to_parquet": 40, "langchain_documents_to_parquet": [4, 5, 40, 73], "langchain_openai": 39, "langchain_pars": [0, 1, 38, 42, 44, 45, 51], "langchain_parse_pur": [1, 7], "langchain_text_splitt": 40, "languag": [10, 11, 32, 44, 46, 48, 50, 54, 59, 74, 75, 83, 84, 85, 92, 101, 107, 117, 128], "laredo": 50, "larg": [23, 54, 70, 72, 74, 75, 83, 84, 85, 92, 95, 97, 99, 100, 101, 112, 128], "larger": [66, 67, 68, 69, 71], "last": [38, 44], "last_modified_datetim": [32, 36, 38, 44, 88, 106], "lastli": [121, 122], "later": [55, 88, 131], "latest": [52, 77, 88, 106], "launch": [15, 53, 131], "lazyinit": [0, 32, 72], "lead": [83, 125], "learn": [39, 52, 58, 89, 90, 101, 121, 122, 124, 127, 129, 131], "least": [55, 90, 91, 124, 130], "legaci": [0, 1, 35, 39, 40, 73], "legal": 115, "len": 129, "length": [0, 23, 27, 29, 55, 56, 74, 76, 87, 89, 104, 108, 111, 129], "lengthen": 110, "less": [40, 55, 80, 83], "let": [55, 56, 65, 124, 127, 131], "level": [29, 54, 66, 80, 83, 102, 120, 128], "lexcial": 118, "lexic": [27, 118], "lexical_id": 27, "lexical_scor": 27, "lexical_theoretical_min_valu": [27, 118], "li": 105, "libmag": 59, "librari": [52, 59, 73, 77, 96, 131], "licens": 115, "life": 36, "light": 50, "like": [27, 29, 32, 36, 38, 44, 46, 49, 52, 55, 59, 70, 75, 76, 78, 83, 84, 85, 107, 111, 117, 118, 119, 122, 124, 127, 129, 130, 131], "likelihood": 107, "limit": [23, 68, 76, 93, 94, 95, 96, 97, 101, 103, 104, 108, 127, 128, 130], "line": [0, 15, 51, 52, 58, 59, 66, 67, 68, 69, 71, 74, 80, 83, 86, 102, 111, 116], "linear": 127, "lingua": [83, 125], "link": [8, 15, 53, 54, 60, 64, 70], "linked_corpu": [1, 8], "linked_raw": [1, 8], "linkedin": 58, "linux": 130, "list": [0, 1, 5, 7, 9, 14, 15, 19, 21, 23, 26, 27, 28, 29, 32, 36, 39, 40, 43, 44, 50, 52, 55, 66, 67, 68, 69, 71, 72, 75, 84, 85, 94, 95, 96, 105, 115, 118, 122, 129], "lite": [96, 108], "liter": [15, 55], "literal_ev": 122, "littl": [26, 40, 47, 51, 57, 127], "live": 65, "ll": [44, 51, 52, 53, 55, 65, 71, 116, 125], "llama": [5, 10, 21, 32, 40, 44, 48, 50, 60, 61, 63, 75, 76, 79, 82, 96], "llama3": [48, 64, 130], "llama_cloud_api_kei": [7, 43], "llama_docu": 5, "llama_document_to_parquet": 40, "llama_documents_to_parquet": [4, 5], "llama_gen_queri": [1, 8, 49, 50, 51, 73], "llama_index": [1, 4, 34, 40, 46, 47, 48, 49, 50, 51, 62, 72, 74, 84, 85, 112, 130], "llama_index_chunk": [0, 1, 32, 34, 49, 51], "llama_index_gen_gt": [1, 8, 46, 49, 51], "llama_index_generate_bas": [8, 9], "llama_index_llm": [0, 18, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 103, 111, 113, 114, 115, 124, 127, 130], "llama_index_query_evolv": [1, 8, 47], "llama_pars": [1, 7, 38, 43, 44, 45], "llama_parse_pur": [1, 7], "llama_text_node_to_parquet": [4, 5, 40], "llamaindex": [7, 40, 47, 48, 50, 62, 72, 75, 77, 81, 88, 89, 90, 103, 127], "llamaindexcompressor": [18, 21], "llamaindexllm": [18, 19], "llamapars": [0, 1, 43, 44], "llm": [0, 9, 10, 11, 19, 21, 23, 35, 36, 40, 41, 46, 47, 49, 50, 51, 52, 54, 58, 59, 60, 63, 66, 67, 68, 69, 71, 74, 77, 78, 79, 83, 84, 85, 86, 96, 102, 103, 109, 110, 111, 112, 113, 114, 115, 116, 124, 125, 127, 131], "llm evalu": 74, "llm infer": 77, "llm metric": [54, 126, 130], "llm_lingua": [21, 82], "llm_name": 21, "llmlingua": 82, "llmlingua_pur": [18, 21], "load": [0, 5, 15, 29, 36, 40, 59, 66, 67, 68, 69, 71, 129], "load_bm25_corpu": [18, 27], "load_data": 40, "load_dotenv": 59, "load_summary_fil": [0, 29], "load_yaml": [1, 14], "load_yaml_config": [0, 29], "loader": [38, 40, 42, 44], "local": [40, 52, 57, 58, 61, 62, 65, 70, 72, 103, 121, 131], "local model": [62, 72], "localhost": [57, 65, 67, 69, 71, 78], "locat": [59, 68, 127], "log": [52, 59, 75, 129], "log2": 55, "log_cli": 59, "log_cli_level": 59, "logarithm": 55, "logarithmic": 55, "logic": [54, 129], "logprob": 76, "long": [67, 79, 83, 111, 123, 125, 127], "long context reord": 110, "long_context_reord": [0, 18, 79, 110], "longcontextreord": [18, 25], "longer": [73, 78], "longllm": 125, "longllmlingua": [0, 18, 82], "look": [27, 32, 36, 38, 44, 49, 55, 56, 117, 118, 119, 122, 127], "loop": [29, 128, 130], "loss": 68, "lost in the middl": 110, "lot": [36, 48, 124, 131], "low": 10, "lower": [29, 48, 55, 70, 83, 87, 91, 130], "lowercas": [33, 34, 42], "m": [23, 59, 96, 104], "m3": 72, "mac": [59, 130], "machin": [52, 65, 78], "made": [47, 48, 56, 127, 131], "magic": 127, "mai": [55, 66, 67, 68, 69, 71, 77, 128, 130], "main": [35, 61, 66, 67, 68, 69, 71, 72, 125, 127], "major": [62, 72], "make": [0, 8, 27, 29, 35, 36, 39, 50, 58, 59, 60, 61, 63, 64, 66, 69, 75, 77, 83, 84, 85, 109, 110, 111, 112, 124, 127, 129, 131], "make_basic_gen_gt": [8, 11, 46, 49, 51], "make_batch": [0, 29], "make_combin": [0, 29], "make_concise_gen_gt": [8, 11, 46, 49, 51], "make_custom_gen_gt": [8, 11, 46], "make_gen_gt_llama_index": [8, 11], "make_gen_gt_openai": [8, 11], "make_generator_callable_param": [0, 18], "make_llm": [18, 21], "make_node_lin": 0, "make_qa_with_existing_qa": 40, "make_retrieval_gt_cont": [1, 8, 49, 51], "make_single_content_qa": [40, 73], "make_trial_summary_md": 0, "maker": [52, 64, 79, 109, 112, 124, 125, 127], "malayalam": 32, "malfunct": 131, "manag": [57, 59, 65, 66, 67, 68, 69, 71, 122], "mandatori": 129, "manhattan": [69, 71], "mani": [47, 55, 75, 77, 84, 85, 115, 124], "manual": 131, "map": [0, 1, 8, 9, 10, 11, 15, 23, 32, 48, 49, 129], "marco": [23, 96, 104], "margin": 54, "markdown": [29, 43, 44, 45], "marker": [57, 58, 59, 127], "markov": 124, "match": [36, 54, 69, 129], "matter": 127, "max": [10, 27, 76, 118], "max_length": 104, "max_retri": [0, 69], "max_token": [0, 62, 72, 75, 76, 77, 78, 84, 85, 113, 114, 115, 116], "max_token_s": 19, "maximum": [0, 62, 69, 72, 77, 78, 104], "md": [40, 44], "me": [109, 110, 111, 112, 124, 127], "mean": [0, 10, 27, 29, 36, 40, 46, 47, 54, 56, 77, 78, 86, 117, 118, 123, 124, 128, 130], "measur": [0, 54, 56, 111, 116, 120, 129], "measure_spe": 0, "mechan": 128, "med": 100, "meet": 54, "meger": 127, "member": [36, 50], "memori": [65, 66, 67, 68, 69, 71, 93, 94, 95, 96, 101, 104, 130], "mention": [52, 53], "merced": 115, "merg": [45, 85, 127, 128], "messag": [0, 9, 23, 42, 47, 50], "messagerol": [47, 50], "messages_to_prompt": 0, "messagestoprompttyp": 0, "metad": 14, "metadata": [0, 9, 10, 11, 14, 15, 23, 32, 88, 106], "meteor": [64, 66, 67, 68, 69, 71, 74, 111, 122, 126, 127, 129, 130], "method": [0, 5, 7, 15, 27, 28, 32, 38, 39, 45, 46, 47, 48, 49, 50, 51, 54, 59, 66, 67, 68, 69, 70, 71, 74, 111, 112, 116, 117, 118, 120, 122, 124, 126, 130], "metric": [0, 16, 28, 36, 64, 65, 66, 67, 68, 69, 71, 73, 74, 80, 83, 86, 102, 111, 116, 120, 122, 123, 126, 127, 128, 129, 130], "metric_input": 129, "metric_nam": [54, 74, 129], "metricinput": 0, "mexican": 50, "might": [39, 59, 76, 124, 129, 130, 131], "milvu": [0, 70, 72], "milvus_db": 67, "milvus_token": [67, 70], "milvus_uri": [67, 70], "min": [27, 118], "mind": [122, 131], "mini": [10, 11, 43, 44, 48, 50, 66, 67, 68, 69, 71], "minilm": [23, 96, 104], "minimum": [27, 115, 118, 131], "mip": [70, 121], "miss": 130, "mistak": [48, 130, 131], "mistral": [61, 62, 72, 77, 78, 117], "mistralai": [61, 62, 72, 77, 78, 117], "mix": 128, "mixbread": 125, "mixedbread": [23, 102], "mixedbread rerank": 99, "mixedbreadai": [0, 18, 99], "mixedbreadai_rerank": 99, "mixedbreadai_rerank_pur": [18, 23], "mixedbreadairerank": [18, 23], "mm": [27, 88, 118, 120], "mmarco": 100, "mobil": 66, "mock": [62, 65, 72], "mockllm": [62, 72], "modal": 36, "mode": [0, 77, 80, 81], "model": [0, 7, 9, 10, 11, 15, 23, 36, 40, 45, 48, 49, 50, 53, 54, 55, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 80, 83, 84, 85, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 107, 110, 111, 113, 114, 115, 117, 121, 123, 124, 125, 127, 128, 129, 130, 131], "model_computed_field": [0, 8, 9, 10, 11, 15, 18, 23], "model_config": [0, 8, 9, 10, 11, 15, 18, 23], "model_field": [0, 8, 9, 10, 11, 15, 18, 23], "model_kwarg": [61, 72], "model_nam": [9, 10, 11, 21, 23, 29, 61, 72, 82, 93, 94, 95, 99, 100, 104], "model_post_init": 0, "modelid": 0, "modeling_enc_t5": [18, 23], "modest": 55, "modifi": [36, 38, 44, 60, 61, 63, 131], "modul": [33, 34, 41, 42, 43, 51, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 79, 80, 86, 123, 125, 126, 127, 130, 131], "modular": [123, 128], "modular rag": 127, "module_dict": 28, "module_nam": [0, 8], "module_param": [0, 7, 8, 28, 29], "module_typ": [0, 28, 32, 33, 34, 38, 41, 42, 43, 44, 45, 51, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 130], "module_type_exist": [0, 28], "monot5": [0, 18, 59, 79, 102], "monot5_run_model": [18, 23], "more": [27, 29, 33, 34, 36, 39, 42, 43, 47, 49, 50, 51, 54, 55, 58, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 83, 98, 102, 103, 111, 112, 115, 116, 117, 122, 123, 126, 128, 131], "most": [40, 51, 55, 62, 67, 69, 72, 74, 102, 112, 117, 120, 121, 122, 124, 131], "mount": 59, "mpnet": 72, "mrr": 129, "msmarco": [23, 100], "mt5": 100, "much": [47, 48, 70, 127, 129, 130], "multi": [8, 36, 50, 79, 115, 116], "multi query expans": 114, "multi_context": 39, "multi_query_expans": [0, 18, 62, 72, 79, 114], "multilingu": [72, 92, 117], "multimod": 7, "multipl": [8, 27, 29, 38, 44, 51, 60, 67, 70, 114, 115, 118, 119, 122, 123, 124, 127, 128], "multiqueryexpans": [18, 26], "multiqueryretriev": 114, "multitask": 72, "must": [0, 5, 8, 15, 20, 27, 29, 33, 34, 36, 40, 44, 50, 51, 52, 55, 59, 62, 64, 66, 72, 77, 80, 88, 100, 106, 109, 110, 112, 115, 118, 122, 127, 128, 129, 130, 131], "mxbai": [23, 99], "mxbai_api_kei": [99, 125], "my_bucket": 66, "my_collect": 66, "my_scop": 66, "my_vector_collect": [67, 69, 71], "my_vector_index": [66, 68], "n": [8, 23, 32, 41, 49, 51, 54, 59, 64, 66, 67, 68, 69, 71, 76, 106, 109, 110, 111, 112, 116, 127], "naiv": [47, 125, 127], "name": [0, 7, 8, 9, 10, 11, 15, 23, 26, 29, 43, 50, 52, 60, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 82, 83, 86, 89, 90, 102, 103, 111, 116, 117, 118, 119, 123, 129, 131], "namespac": 68, "natur": [49, 54, 101], "naver": 41, "ndarrai": 29, "ndcg": 129, "necessari": [40, 59, 116], "need": [0, 32, 35, 36, 39, 40, 43, 45, 47, 51, 53, 55, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 83, 92, 97, 99, 108, 111, 115, 117, 121, 122, 123, 127, 129, 130, 131], "nemotron": 63, "nest": 29, "nest_asyncio": [52, 130, 131], "nested_list": 29, "network": 69, "neural": 69, "never": 58, "new": [0, 8, 9, 35, 36, 47, 50, 51, 53, 59, 62, 66, 67, 68, 69, 71, 72, 77, 122, 126, 127, 130, 131], "new_corpu": 8, "new_corpus_df": 51, "new_gen_gt": 11, "new_qa": 51, "newjeans1": 36, "newjeans2": 36, "next": [56, 79, 80, 92, 97, 99, 108, 111, 127], "next_id": 36, "next_public_api_url": 57, "next_public_host_url": 57, "ngrok": 15, "nim": 62, "nim_config": 63, "nlg": 54, "nlist": 67, "nltk": 59, "node": [0, 5, 15, 36, 40, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 79, 113, 114, 115, 118, 125, 126], "node_dict": 28, "node_dir": 0, "node_lin": [64, 66, 67, 68, 69, 71, 73, 80, 83, 86, 102, 111, 116, 122, 123, 126, 127], "node_line_1": [60, 61, 62, 63, 72, 122, 127], "node_line_2": [122, 127], "node_line_3": 122, "node_line_dict": 0, "node_line_dir": [0, 28], "node_line_nam": [60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 80, 83, 86, 102, 111, 116, 120, 122, 123, 126, 127], "node_nam": 0, "node_param": [0, 28], "node_pars": [34, 40], "node_summary_df": 0, "node_typ": [0, 15, 28, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 80, 83, 86, 102, 111, 116, 120, 122, 126, 127, 130], "node_view": 0, "nodewithscor": 23, "non": 45, "none": [0, 5, 7, 8, 15, 18, 23, 28, 29, 52, 65, 67, 70, 74, 83, 111], "nonetyp": [0, 15], "normal": [27, 95, 118], "normalize_dbsf": [18, 27], "normalize_mean": 126, "normalize_method": [27, 118, 120], "normalize_mm": [18, 27], "normalize_str": [0, 29], "normalize_tmm": [18, 27], "normalize_unicod": [0, 29], "normalize_z": [18, 27], "norwegian": 32, "nosql": 66, "notabl": 110, "note": [66, 67, 68, 69, 71, 80], "notion": 79, "nousresearch": [21, 82], "now": [36, 39, 40, 49, 51, 64, 77, 121, 122, 124, 126, 127, 129, 130, 131], "np": 29, "npm": 57, "ntabl": 41, "nuevo": 50, "null": 52, "nullabl": 52, "num_passag": 81, "num_quest": 40, "number": [0, 23, 27, 29, 38, 40, 44, 52, 55, 56, 62, 66, 67, 68, 69, 71, 72, 77, 78, 80, 81, 83, 86, 115, 116, 123, 128, 131], "numer": 58, "nvidia": 62, "o": 59, "object": [0, 8, 9, 10, 11, 15, 23, 28, 29, 40, 52, 75, 84, 85, 88, 106, 113, 114, 115], "observ": [53, 110], "obtain": 102, "occur": [36, 76, 77, 122, 127, 130], "ocr": [41, 45], "offer": [69, 118], "offici": 29, "often": [40, 50, 117, 130], "ok": 52, "okai": [36, 47, 72], "okt": 117, "ollama": [48, 62, 72], "ollama_config": 64, "onc": [36, 47, 51, 64, 75, 77, 84, 85, 92, 97, 118, 123, 127, 131], "one": [0, 8, 29, 32, 36, 40, 44, 49, 50, 51, 55, 70, 88, 90, 91, 111, 122, 123, 124, 128, 130], "ones": 50, "onli": [15, 19, 21, 23, 25, 26, 27, 28, 29, 32, 36, 38, 43, 44, 46, 49, 50, 51, 52, 56, 59, 64, 67, 69, 70, 71, 75, 84, 85, 88, 111, 112, 123, 124, 125, 127, 129, 131], "oom": [103, 130], "open": [68, 71, 101, 121, 124, 130], "openai": [7, 9, 10, 11, 40, 43, 44, 47, 48, 49, 50, 51, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 80, 83, 84, 85, 89, 90, 103, 111, 113, 114, 115, 116, 120, 124, 127], "openai_api_kei": [43, 59, 76, 130], "openai_chroma": 121, "openai_couchbas": 66, "openai_embed_3_larg": [40, 66, 67, 68, 69, 70, 71, 72, 73], "openai_embed_3_smal": [70, 72, 73, 129], "openai_gen_gt": [1, 8, 46], "openai_gen_queri": [1, 8, 50], "openai_lik": 72, "openai_llm": [0, 18, 79, 111], "openai_milvu": [67, 121], "openai_pinecon": 68, "openai_qdr": 69, "openai_query_evolv": [1, 8, 47], "openai_truncate_by_token": [0, 29], "openai_weavi": 71, "openaiembed": 39, "openailik": [61, 62, 63, 72, 130], "openaillm": [18, 19], "openapi": 52, "openvino": [0, 18, 102], "openvino rerank": 101, "openvino_rerank": 101, "openvino_run_model": [18, 23], "openvinorerank": [18, 23, 101], "oper": [36, 65, 67, 77, 83, 120, 128], "oppos": 80, "opt": [73, 77, 78], "optim": [15, 32, 35, 36, 38, 39, 44, 48, 49, 51, 57, 58, 60, 61, 63, 64, 76, 77, 83, 89, 90, 101, 117, 118, 119, 122, 123, 126, 127, 128, 129], "option": [0, 5, 32, 38, 44, 52, 53, 59, 64, 65, 67, 68, 69, 71, 72, 74, 80, 82, 83, 86, 98, 99, 100, 102, 105, 107, 111, 116, 118, 119, 122, 124, 126, 128, 129, 131], "order": [15, 54, 55], "org": 58, "organ": [68, 123, 125], "orient": 54, "origin": [0, 9, 27, 29, 36, 47, 78, 88, 107, 129], "original_queri": 47, "original_str": 32, "original_text": 14, "other": [15, 27, 29, 35, 36, 46, 47, 50, 54, 55, 57, 59, 75, 83, 84, 85, 86, 101, 103, 113, 114, 115, 118, 122, 123, 124, 127, 129, 131], "otherwis": [38, 44, 66], "our": [27, 32, 36, 38, 40, 41, 44, 58, 59, 79, 87, 91, 113, 114, 115, 124, 127, 130, 131], "out": [36, 51, 55, 57, 58, 59, 64, 67, 72, 74, 77, 86, 87, 88, 89, 90, 91, 122, 123, 127, 130, 131], "outcom": [111, 116], "outlin": 70, "outperform": 54, "output": [0, 9, 11, 15, 39, 50, 54, 62, 72, 74, 82, 107, 111, 116, 130], "output_cl": 19, "output_filepath": [5, 40], "output_pars": 0, "output_path": [15, 131], "over": [65, 77, 128], "overal": [54, 102, 124], "overfit": 131, "overlap": 56, "overview": [65, 66, 67, 68, 69, 71], "overwrit": 5, "own": [7, 36, 37, 41, 43, 47, 51, 58, 65, 72, 86, 113, 114, 115, 124, 128, 129, 131], "owner": 96, "p": 71, "p4dyxfmsa": [58, 127], "packag": [59, 62, 72, 73, 130], "page": [7, 32, 36, 38, 41, 44, 45, 49, 52, 57, 59, 79, 103], "paid": 45, "pair": [29, 35, 40, 54], "panda": [0, 28, 29, 39, 40, 51, 129], "paper": [50, 54, 107, 113, 115, 127], "paradigm": [54, 127], "parallel": [69, 77, 96], "param": [0, 10, 26, 67, 73, 77, 123], "param_list": [18, 21], "paramet": [0, 5, 7, 8, 10, 11, 15, 20, 21, 23, 27, 28, 29, 32, 40, 43, 47, 53, 54, 64, 70, 122, 123, 124, 128, 129, 130, 131], "parent": 15, "parquet": [0, 5, 8, 32, 36, 38, 39, 40, 44, 49, 51, 59, 60, 61, 63, 64, 70, 123, 129, 130, 131], "pars": [0, 1, 8, 32, 33, 34, 35, 36, 41, 52, 57, 122], "parse_all_fil": [1, 7], "parse_config": [32, 38, 44, 51], "parse_inst": 7, "parse_method": [7, 33, 38, 42, 44, 45, 51], "parse_modul": 42, "parse_project_dir": 51, "parsed_data_path": [32, 51], "parsed_result": 44, "parser": 51, "parser_nod": [1, 7], "part": [35, 55, 66, 125, 128], "particularli": [69, 70], "pass": [0, 39, 75, 79, 84, 85, 113, 114, 115, 127], "pass_compressor": [0, 18, 79], "pass_passage_augment": [0, 18, 79], "pass_passage_filt": [0, 18, 79], "pass_query_expans": [0, 18, 79], "pass_rerank": [0, 18, 79], "pass_valu": 127, "passag": [0, 8, 10, 15, 20, 21, 23, 27, 32, 36, 47, 52, 55, 56, 59, 64, 66, 67, 68, 69, 71, 79, 81, 83, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 113, 117, 118, 119, 121, 125, 127, 129, 130, 131], "passage augment": [80, 81], "passage compressor": [83, 84, 85], "passage compressor metr": 56, "passage filt": [86, 87, 88, 89, 90, 91], "passage_augment": 80, "passage_depend": [1, 8, 48], "passage_dependency_filter_llama_index": [8, 10, 48], "passage_dependency_filter_openai": [8, 10, 48], "passage_filt": 86, "passage_id": 27, "passage_index": [0, 15, 52], "passage_rerank": 127, "passageaugment": [0, 18], "passagecompressor": [0, 18], "passagefilt": [0, 18], "passagererank": [0, 18], "passcompressor": [18, 21], "passpassageaugment": [18, 20], "passpassagefilt": [18, 22], "passqueryexpans": [18, 26], "passrerank": [18, 23], "password": [66, 67], "path": [7, 8, 14, 15, 22, 23, 25, 26, 27, 28, 29, 32, 38, 39, 40, 44, 51, 52, 59, 60, 61, 63, 64, 65, 70, 73, 96, 101, 117, 130, 131], "pattern": [38, 44], "payload": [52, 69], "pd": [0, 5, 23, 28, 29, 39, 40, 51, 129], "pdf": [38, 44], "pdfminer": [38, 42, 44, 51], "pdfplumber": [38, 42, 45], "peopl": 47, "per": [38, 40, 44, 56, 68, 90, 91, 126, 130], "percentag": 55, "percentil": [79, 86], "percentile cutoff": 87, "percentile_cutoff": [0, 18, 87], "percentilecutoff": [18, 22], "perfect": [48, 127], "perform": [8, 26, 32, 36, 38, 45, 48, 50, 51, 53, 55, 56, 58, 66, 67, 68, 69, 71, 74, 76, 80, 83, 86, 101, 102, 110, 111, 116, 124, 127, 129], "persist": [65, 70, 72, 73], "persistentcli": 40, "perspect": 114, "pertin": 102, "phase": [70, 102, 116], "phrase": [11, 46, 50], "piec": 26, "pinecon": [0, 70], "pinecone_api_kei": 68, "pinecone_db": 68, "pip": [52, 58, 59, 63, 117, 130], "pipelin": [15, 35, 49, 51, 52, 53, 57, 58, 59, 96, 118, 123, 124, 127, 129], "pipeline_dict": 131, "pkl": 123, "place": 50, "placehold": 40, "plan": [36, 43, 74, 127], "pleas": [23, 27, 36, 51, 55, 59, 60, 62, 63, 70, 72, 74, 77, 79, 82, 107, 111, 116, 117, 122, 127, 128, 130, 131], "plu": [27, 36, 39, 59, 62, 72, 77, 88, 89, 90, 106, 111, 115, 117, 121, 122], "plz": 60, "point": [59, 64], "polish": 32, "pop": [29, 36], "pop_param": [0, 29], "poppler": 59, "popular": [54, 117], "port": [0, 15, 52, 65, 71, 78, 131], "porter_stemm": [27, 73], "portugues": 32, "posit": [55, 110], "possibl": [124, 127, 130], "post": 127, "post_retrieve_node_lin": [64, 66, 67, 68, 69, 71, 74, 111], "potenti": 83, "power": [48, 92, 97, 108, 127], "ppv": 55, "pre": [46, 47, 48, 59, 127, 131], "pre_retrieve_node_lin": 116, "precis": [54, 83, 113, 120], "pred": 55, "predefin": [74, 83, 102], "predict": 55, "prefix": 107, "prefix_prompt": [23, 107], "prepar": [64, 66], "preprocess": 0, "preprocess_text": [0, 29], "present": [54, 59], "pretti": 127, "prev": [79, 80], "prev next augment": 81, "prev_id": 36, "prev_next_augment": [0, 18, 36, 79, 80, 81], "prevent": [11, 32, 68, 76, 103, 127], "previou": [0, 20, 23, 54, 73, 91, 124, 127], "previous_result": [0, 19, 20, 21, 22, 23, 25, 26, 27, 28], "primari": [80, 86, 102, 105], "primarili": 45, "primit": 40, "print": [0, 23, 52], "prior": [40, 83], "priorit": 102, "privat": 0, "pro": 43, "prob": 75, "probabl": [76, 77, 124, 129], "problem": [40, 51, 54, 127, 130], "process": [23, 29, 35, 40, 51, 52, 53, 58, 65, 66, 67, 68, 69, 71, 74, 77, 83, 101, 102, 105, 111, 114, 116, 120, 123, 124, 128, 129, 130, 131], "process_batch": [0, 29], "processed_data": 5, "prod": 59, "produc": 54, "product": [59, 67, 68, 69, 70, 71, 129, 131], "profil": 0, "profile_nam": [0, 60], "programmat": 0, "progress": 0, "project": [15, 52, 57, 58, 59, 64, 70, 130], "project_dir": [0, 7, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 38, 44, 51, 52, 53, 59, 60, 61, 63, 64, 65, 70, 73, 130, 131], "project_directori": [70, 130, 131], "prompt": [0, 1, 8, 19, 21, 23, 28, 46, 47, 50, 52, 64, 66, 67, 68, 69, 71, 75, 77, 78, 79, 103, 107, 109, 110, 112, 113, 114, 124, 125, 127, 129], "prompt1": 40, "prompt2": 40, "prompt3": 40, "prompt_mak": [64, 66, 67, 68, 69, 71, 111, 124, 127], "promptmak": [0, 18], "prompts_ratio": 40, "promt": 47, "proper": 76, "properli": [29, 59, 70, 117], "properti": [0, 8, 71], "propos": 127, "protect": 68, "provid": [40, 41, 43, 46, 50, 52, 53, 54, 57, 65, 67, 68, 70, 75, 84, 85, 100, 107, 131], "pseudo": 76, "pt": 100, "ptt5": 100, "public": 15, "publicli": 15, "pull": 64, "punctuat": 29, "punkt_tab": 59, "punktsentencetoken": 32, "pure": [0, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28], "purpos": [66, 67, 68, 69, 71, 80, 86, 102, 116, 128], "push": 130, "put": [36, 40, 43, 82, 125, 130], "pwd": 59, "py": 52, "pyarrow": 129, "pydant": [0, 9, 10, 11, 15, 23], "pydantic_program_mod": 0, "pydanticprogrammod": 0, "pymupdf": 42, "pyopenssl": 59, "pypdf": 42, "pypdfdirectori": 42, "pypdfdirectoryload": 42, "pypdfium2": 42, "pypi": 58, "pytest": 59, "python": [0, 29, 33, 36, 40, 59, 96, 109, 122, 130], "python3": 59, "pythoncodetextsplitt": 33, "pytorch": [59, 77], "q": [40, 78], "qa": [0, 1, 32, 35, 46, 47, 48, 50, 59, 60, 61, 63, 64, 70, 73, 123, 129, 130, 131], "qa_creation_func": 40, "qa_data": 28, "qa_data_path": [59, 60, 61, 63, 64, 70, 130, 131], "qa_df": [8, 29, 39, 40, 46, 48, 50, 129], "qa_save_path": 8, "qa_test": 131, "qa_valid": 59, "qacreat": [1, 4, 39, 40, 73], "qdrant": [0, 70], "qdrant_db": 69, "qid": [8, 50], "qualiti": [54, 102, 131], "quantit": 128, "quantiz": 130, "queri": [0, 1, 8, 9, 15, 21, 23, 26, 27, 28, 29, 42, 46, 51, 52, 53, 64, 65, 67, 68, 69, 71, 73, 79, 80, 83, 84, 86, 89, 90, 91, 98, 99, 100, 102, 103, 105, 108, 109, 110, 111, 112, 113, 120, 121, 124, 125, 127, 129], "query decompos": 115, "query expans": [113, 114, 115, 116], "query_bundl": 23, "query_decompos": [0, 18, 62, 72, 79, 115, 116], "query_embed": 23, "query_evolve_openai_bas": [8, 9], "query_expans": [15, 111, 116, 124], "query_wrapper_prompt": 0, "querybundl": 23, "querydecompos": [18, 26], "queryexpans": [0, 18], "queryrequest": [0, 15], "question": [8, 10, 23, 26, 35, 36, 40, 46, 47, 54, 58, 64, 66, 67, 68, 69, 71, 82, 105, 107, 109, 110, 111, 112, 115, 127, 131], "question_num_per_cont": 40, "quick": [69, 70], "quickli": 83, "quit": [54, 74], "qwen": 78, "qwen2": 78, "r": 59, "rag": [10, 15, 32, 35, 36, 38, 39, 40, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130], "rag api": 52, "rag dataset": [36, 39, 40], "rag deploi": [52, 53], "rag evalu": [36, 39, 40, 54, 55, 56, 74, 126, 130], "rag gui": 57, "rag llm": [62, 72], "rag metr": [54, 55, 56, 126, 130], "rag model": [62, 72], "rag optim": [58, 122, 124, 125, 128], "rag perform": 124, "rag structur": 128, "rag tutori": 131, "rag web": 53, "raga": [1, 4, 37, 47, 55], "raise_for_statu": 52, "ran": 123, "random": [0, 62, 72, 77, 78], "random_single_hop": [1, 8, 49, 51, 73], "random_st": 8, "randomli": [40, 49], "rang": [49, 118, 119], "range_single_hop": [1, 8, 49], "rank": [27, 96, 117, 119, 129], "rank_zephyr_7b_v1_ful": 96, "rankgpt": [0, 18, 79, 102], "rankgpt_rerank_prompt": [23, 103], "rankgptrerank": 23, "rate": [55, 69, 130], "ratio": 40, "ratio_dict": 40, "raw": [1, 8, 35, 36, 38, 41, 42, 43, 44, 45, 49, 51, 58, 73], "raw_df": [8, 51], "raw_end_idx": 8, "raw_id": 8, "raw_inst": 51, "raw_start_idx": 8, "re": [67, 69, 71, 89, 90, 96, 127, 129, 130], "read": [0, 58, 64, 66, 67, 68, 69, 71, 109, 110, 111, 112, 122, 127], "read_parquet": [39, 40, 51, 129], "readi": [40, 59, 60, 61, 63, 64, 69, 124, 131], "real": [36, 40, 53, 76, 127], "realist": 47, "realli": [27, 36, 47, 77, 124, 127], "reason": [39, 130], "reasoning_evolve_raga": [8, 9, 47], "reassess": 102, "recal": [54, 83, 120], "receiv": [29, 53], "recenc": [0, 18, 79, 86], "recency_filt": [79, 88], "recencyfilt": [18, 22], "reciproc": [27, 119, 126], "recogn": 130, "recognit": 101, "recommend": [47, 50, 51, 59, 61, 70, 72, 76, 111, 117, 123, 125, 127, 130, 131], "reconstruct": 29, "reconstruct_list": [0, 29], "record": 123, "recurs": [29, 57, 85], "recursivecharact": 33, "recursivecharactertextsplitt": 40, "reduc": [55, 83], "reduct": 83, "refer": [51, 54, 55, 62, 64, 70, 72, 73, 74, 79, 111, 116, 128, 131], "refin": [0, 18, 62, 72, 79, 83, 102], "reflect": 117, "region": [0, 68], "region_nam": 0, "regist": 63, "reiniti": 78, "relat": [36, 54, 55, 75, 84, 85, 86, 107, 113, 114, 115], "relationship": 14, "releas": [37, 50], "relev": [23, 36, 40, 50, 52, 55, 74, 83, 99, 100, 102, 103, 113, 116, 120], "reliabl": 69, "remain": [51, 128], "remap": 51, "remeb": 40, "rememb": [55, 59, 124], "remind": 131, "remot": [15, 65, 70], "remov": [27, 28, 29, 40, 48], "reorder": [79, 102, 111], "replac": [0, 8, 9, 10, 11, 15, 23, 29, 47, 52, 53, 60, 66, 79, 111], "replace_valu": 29, "replace_value_in_dict": [0, 29], "repo": [36, 58, 60, 63, 117, 131], "repositori": [59, 64], "repres": [73, 121, 124], "request": [0, 69, 127], "request_timeout": 130, "requir": [0, 9, 10, 11, 15, 23, 38, 43, 44, 50, 52, 54, 59, 62, 65, 66, 67, 68, 69, 70, 71, 72, 75, 83, 84, 85, 99, 100, 113, 114, 115, 118, 119, 125, 128, 129], "rerank": [23, 36, 59, 79, 83, 88, 92, 97, 100, 102, 103, 105, 107, 108, 125, 127], "reranker_recal": 127, "reset": [36, 48, 130], "reset_index": [48, 49, 51, 130], "resid": 128, "resolv": 130, "resourc": [65, 70, 73, 124], "respect": [56, 70], "respond": [46, 116], "respons": [0, 8, 9, 10, 11, 46, 47, 53, 62, 67, 72, 83, 84, 116], "rest": [51, 103], "restart_evalu": 131, "restart_tri": 131, "result": [0, 8, 15, 20, 23, 27, 29, 33, 34, 40, 43, 45, 48, 50, 51, 52, 54, 55, 56, 58, 64, 76, 80, 91, 102, 111, 116, 118, 120, 123, 126, 127, 129, 130], "result_column": [0, 15, 52], "result_en_qa": 48, "result_qa": [46, 50], "result_to_datafram": [0, 29], "result_typ": [43, 44, 45], "retreived_cont": [109, 110, 112], "retri": [0, 69, 124], "retriev": [0, 10, 15, 18, 21, 23, 32, 36, 46, 48, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 85, 92, 96, 97, 102, 107, 108, 111, 112, 113, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128], "retrieval metr": 55, "retrieval_cont": 0, "retrieval_f1": [64, 66, 67, 68, 69, 71, 73, 80, 86, 102, 116, 120, 129], "retrieval_gt": [0, 8, 28, 32, 40, 50, 51, 70, 129], "retrieval_gt_cont": [0, 8, 28, 129], "retrieval_map": 129, "retrieval_modul": 116, "retrieval_mrr": 129, "retrieval_ndcg": 129, "retrieval_precis": [64, 66, 67, 68, 69, 71, 80, 86, 102, 116, 120, 126, 129], "retrieval_recal": [64, 66, 67, 68, 69, 71, 73, 80, 86, 102, 116, 120, 126, 127, 129], "retrieval_result": 55, "retrieval_result_df": 129, "retrieval_token_f1": 83, "retrieval_token_precis": 83, "retrieval_token_recal": 83, "retrievalrespons": [0, 15], "retrieve metr": 55, "retrieve_node_lin": [64, 66, 67, 68, 69, 71, 73, 80, 83, 86, 102, 120], "retrieve_scor": [20, 129], "retrieved_cont": [0, 20, 28, 64, 66, 67, 68, 69, 71, 109, 110, 111, 112, 127, 129], "retrieved_id": [0, 20, 28, 129], "retrieved_passag": [0, 15, 52], "retrievedpassag": [0, 15], "return": [0, 5, 7, 8, 10, 11, 15, 20, 21, 23, 26, 27, 28, 29, 32, 45, 47, 51, 52, 66, 67, 68, 69, 71, 75, 76, 86, 88, 115, 121, 122, 129], "return_index": 0, "revers": [29, 87, 91], "rich": 0, "right": [10, 40, 57, 62, 63, 72, 127, 131], "rl_polici": 127, "rm": 59, "roadmap": [58, 123], "roberta": 72, "robust": [50, 69], "role": [47, 50], "root": [57, 59], "roug": [64, 66, 67, 68, 69, 71, 74, 111, 122, 126, 127, 129, 130], "row": [9, 10, 11, 27, 28, 29, 36, 47, 123, 129], "rpm": 97, "rr": 55, "rrf": [27, 118, 120, 122], "rrf_calcul": [18, 27], "rrf_k": [27, 64, 116, 119, 122], "rrf_pure": [18, 27], "rubert": 72, "rude": 47, "run": [0, 1, 8, 15, 18, 28, 49, 58, 62, 71, 72, 83, 87, 88, 89, 90, 91, 122, 123, 124, 125], "run_api": [52, 131], "run_api_serv": [0, 15, 52, 131], "run_evalu": [0, 18, 27, 28], "run_nod": [0, 28, 73], "run_node_lin": 0, "run_pars": [1, 7], "run_queri": 52, "run_web": [0, 15, 53, 131], "runner": [0, 15, 52, 131], "runrespons": [0, 15], "runtim": 101, "russian": 32, "safe": 29, "said": 54, "same": [0, 26, 27, 29, 46, 47, 50, 53, 55, 60, 80, 103, 115, 123, 124, 128, 131], "sampl": [0, 1, 32, 38, 40, 44, 50, 51, 55, 73, 77, 78, 130, 131], "sample yaml fil": 125, "sample_config": [59, 60, 63, 131], "samplingparam": 77, "satisfactori": [40, 51], "satisfi": [23, 108], "save": [5, 8, 10, 15, 32, 36, 38, 41, 43, 44, 78, 122, 131], "save_parquet_saf": [0, 29], "save_path": 8, "scalabl": [40, 66, 69], "scale": [27, 83, 118, 126], "schema": [0, 1, 35, 42, 46, 48, 50, 51, 52, 71, 73, 129], "scope_nam": 66, "scoped_index": 66, "score": [0, 10, 15, 23, 27, 29, 52, 56, 66, 68, 83, 87, 90, 91, 117, 118, 119, 120], "script": [29, 36], "search": [29, 52, 66, 67, 68, 69, 71, 96, 116, 117, 121], "search_str": 14, "second": [0, 50, 56, 67, 68, 70, 123, 127], "secret": [0, 122], "section": [32, 38, 44, 49, 72, 121, 122, 126, 128, 131], "secur": 130, "see": [32, 35, 38, 43, 44, 52, 55, 56, 60, 62, 63, 66, 67, 68, 69, 71, 72, 108, 122, 123, 124, 127, 129, 130], "seek": [50, 54], "segment": 54, "select": [0, 8, 27, 40, 48, 50, 63, 117, 123, 124, 126, 127, 128], "select_best": 0, "select_best_averag": 0, "select_best_rr": 0, "select_bm25_token": [18, 27], "select_normalize_mean": 0, "select_top_k": [0, 29], "self": [29, 66, 115], "sem_scor": [111, 122, 129], "semant": [27, 54, 69, 74, 117, 118, 129], "semantic_id": 27, "semantic_llama_index": [32, 34], "semantic_scor": 27, "semantic_theoretical_min_valu": [27, 118], "semanticdoubl": 32, "semanticdoublemerg": 34, "semitechnologi": 71, "semscor": 54, "send": [0, 92, 97], "sensit": 55, "sent": 52, "sentenc": [23, 46, 48, 50, 54, 72, 79, 89, 90, 102, 112, 117], "sentence transform": 104, "sentence_splitt": 32, "sentence_splitter_modul": 32, "sentence_transform": [0, 18], "sentence_transformer_rerank": [79, 104], "sentence_transformer_run_model": [18, 23], "sentencetransformerrerank": [18, 23], "sentencetransformerstoken": 33, "sentencewindow": [32, 34], "separ": [125, 130], "sequenc": [0, 23, 128], "seri": 29, "serializeasani": 23, "seriou": [130, 131], "serv": [57, 64, 74, 78, 83, 102, 107, 111, 116, 120, 128], "server": [15, 29, 57, 58, 65, 66, 67, 68, 69, 71, 76, 121], "server_nam": [15, 53], "server_port": [15, 53], "servic": [52, 65, 66, 68, 69, 71], "session": [0, 23, 52], "set": [7, 8, 10, 15, 27, 29, 40, 41, 42, 57, 58, 59, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 102, 103, 107, 108, 111, 113, 114, 115, 116, 118, 122, 123, 124, 127, 128, 130], "set_initial_st": 0, "set_page_config": 0, "set_page_head": 0, "setup": [64, 70, 124], "sever": [54, 59, 76, 129, 130, 131], "shape": 29, "share": [15, 53, 131], "shareabl": 15, "shell": 59, "short": [46, 65, 127], "shot": [107, 113, 115], "should": [0, 7, 9, 10, 11, 15, 23, 32, 42, 44, 46, 50, 51, 54, 57, 62, 66, 67, 68, 69, 71, 72, 76, 88, 129, 130], "show": [50, 123, 124, 127], "shown": 70, "side": 76, "sigma": [27, 118], "signal": 107, "significantli": [83, 116, 128], "similar": [54, 65, 66, 67, 68, 69, 71, 74, 79, 80, 86, 87, 91, 117, 118, 119, 121, 124, 129], "similarity percentile cutoff": 89, "similarity_metr": [65, 67, 68, 69, 71], "similarity_percentile_cutoff": [0, 18, 79, 89], "similarity_threshold_cutoff": [0, 18, 79, 86, 90], "simpl": [1, 4, 11, 39, 48, 54, 57, 59, 64, 66, 67, 68, 69, 70, 71, 74, 117, 127], "simple_openai": 59, "simpledirectoryread": 40, "simpler": 47, "simpli": [62, 72, 106, 131], "simul": 128, "sinc": [37, 40, 48, 51, 53, 55, 72, 74, 76, 103, 109, 111, 112], "singl": [0, 7, 8, 15, 29, 36, 40, 46, 49, 58, 65, 66, 67, 68, 69, 71, 77, 115, 122, 123, 127, 128], "site": 65, "situat": 118, "six": [44, 56], "size": [7, 76, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 118, 130], "sk": 59, "skip": 111, "skip_valid": [77, 130], "slice_tensor": [18, 23], "slice_tokenizer_result": [18, 23], "slovenian": 32, "slow": 77, "slower": [48, 83], "small": 72, "smaller": [55, 70], "so": [0, 11, 15, 27, 32, 36, 40, 41, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 62, 72, 77, 80, 83, 86, 87, 88, 89, 90, 91, 102, 111, 115, 116, 119, 122, 123, 124, 127, 130, 131], "softwar": 121, "solut": [40, 51, 69, 127], "some": [14, 27, 36, 47, 48, 49, 50, 54, 56, 59, 72, 76, 92, 97, 118, 124, 130], "someon": [10, 115], "someth": [40, 109, 110, 111, 112], "sometim": [47, 48, 76, 130], "sonnet": [43, 60], "soon": 127, "sort": [29, 106], "sort_by_scor": [0, 29], "sota": 96, "sound": 55, "sourc": [0, 1, 5, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 36, 44, 68, 71, 101, 118, 119, 121], "spanish": 32, "spars": [27, 117], "spearman": 54, "special": [29, 83], "specif": [29, 38, 46, 47, 50, 52, 70, 74, 83, 99, 100, 105, 117, 128, 131], "specifi": [7, 36, 52, 59, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 85, 98, 100, 105, 106, 111, 116, 118, 119, 124, 126, 128, 129], "speech": 101, "speed": [0, 74, 77, 83, 102, 111, 116, 120, 122, 128], "speed_threshold": [74, 80, 83, 86, 102, 111, 116, 120, 122, 126, 128], "spice": 115, "split": [32, 45, 123, 128, 131], "split_by_sentence_kiwi": [0, 1, 32], "split_datafram": [0, 29], "split_docu": 40, "split_into_s": 32, "splitter": [33, 34], "squad": 29, "squar": 115, "src": 59, "ss": 88, "sse": 29, "ssl": 65, "stabl": 50, "stage": [59, 107], "standalon": 77, "standard": [0, 54], "start": [15, 29, 36, 37, 52, 57, 59, 69, 110, 129, 130, 131], "start_chunk": [32, 51], "start_end_idx": 32, "start_idx": [0, 15, 52], "start_pars": [0, 38, 44, 51], "start_trial": [70, 77, 130, 131], "starter": [58, 131], "state": [50, 124], "statist": 55, "statu": 52, "status_cod": 52, "stem": [54, 117], "stemmer": 117, "step": [8, 23, 32, 38, 44, 45, 49, 59, 65, 102, 127, 129], "still": [124, 127, 130], "storag": [41, 65], "store": [8, 32, 52, 57, 64, 65, 66, 67, 68, 69, 70, 71, 121], "str": [0, 1, 5, 7, 8, 9, 10, 11, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 40, 45, 46, 65, 66, 67, 68, 69, 71], "straight": 127, "strateg": 128, "strategi": [15, 28, 36, 64, 66, 67, 68, 69, 71, 73, 80, 86, 122, 127, 130], "strategy_nam": 0, "strategyqa": 115, "stream": [18, 19, 76], "stream_queri": 52, "streamlit": 131, "streamrespons": [0, 15], "strictli": 46, "string": [0, 27, 28, 29, 32, 36, 40, 52, 66, 67, 79, 107, 111, 122], "structur": [9, 11, 27, 50, 52, 65, 122, 127, 129, 131], "structured_output": [18, 19], "studi": [110, 117], "sub": 115, "submodul": [1, 4], "subset": 8, "success": 70, "successfulli": [32, 38, 44, 131], "sudo": 130, "suffix": 107, "suffix_prompt": [23, 107], "suggest": [36, 124, 127, 130], "suit": [67, 68, 69, 71], "sum": 55, "summar": [54, 79, 83], "summari": [15, 29, 32, 38, 44, 46, 52, 55, 124, 131], "summary_df": [15, 29], "summary_df_to_yaml": [0, 15], "summary_path": 29, "super": [47, 50, 96], "support": [10, 11, 27, 36, 39, 40, 48, 49, 50, 55, 58, 59, 65, 69, 71, 75, 76, 78, 79, 84, 85, 89, 90, 92, 96, 97, 101, 118, 122, 125, 127, 128, 130, 131], "sure": [59, 60, 61, 63, 64, 131], "survei": 127, "swap": 128, "swedish": 32, "synonym": 54, "syntax": 70, "synthet": [40, 51], "system": [0, 10, 36, 47, 48, 50, 52, 59, 66, 67, 68, 69, 70, 71, 74, 75, 83, 84, 85, 102, 111, 120, 128, 129], "system_prompt": [0, 11, 46, 47], "t": [10, 29, 36, 38, 39, 40, 44, 46, 47, 49, 51, 52, 53, 55, 58, 59, 66, 67, 68, 69, 71, 111, 115, 118, 125, 127, 130], "tabl": [10, 44], "table_detect": [41, 44, 45], "table_hybrid_pars": [0, 1, 38, 44, 45], "table_param": 45, "table_parse_modul": 45, "tailor": [83, 119, 128], "take": [62, 66, 67, 68, 69, 71, 72, 125, 127], "taken": 29, "target": [21, 29, 59, 82, 127], "target_dict": [0, 29], "target_kei": 29, "target_modul": [27, 64, 116, 118, 122], "target_module_param": [27, 118], "target_node_lin": 127, "target_token": [21, 82], "tart": [18, 23, 59, 79, 100, 102], "task": [0, 29, 54, 74, 101], "task_ev": 0, "tcultmq5": 58, "team": 41, "techniqu": 128, "tecolot": 50, "tell": [109, 110, 111, 112], "temperatur": [0, 39, 40, 48, 62, 64, 72, 74, 75, 76, 77, 78, 84, 85, 103, 113, 114, 115, 116, 124, 130], "temporari": [65, 128], "temporarili": 128, "tenant": 65, "tensor_parallel_s": 77, "term": [55, 116], "termin": 64, "tesseract": 59, "test": [53, 55, 59, 62, 65, 72, 74, 80, 83, 86, 102, 116, 118, 122, 123, 124], "test01": 59, "test_siz": 39, "test_weight_s": [118, 120], "testset": 39, "text": [0, 5, 7, 21, 27, 29, 32, 33, 34, 35, 36, 38, 40, 43, 44, 45, 46, 50, 52, 60, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 82, 84, 85, 104, 107], "text_kei": [66, 71], "text_nod": 5, "text_param": 45, "text_parse_modul": 45, "text_splitt": 33, "textnod": [5, 40], "textur": 115, "tf": 117, "than": [27, 36, 46, 48, 50, 54, 70, 77, 80, 88, 115, 117, 123, 124, 127, 130], "thei": [40, 50, 54, 66, 83, 122, 127, 128], "them": [27, 29, 36, 43, 44, 55, 66, 67, 68, 69, 70, 71, 85, 124, 125], "theoret": [27, 118], "therefor": [40, 45, 51, 55, 56, 111, 116], "thi": [0, 5, 9, 10, 11, 15, 19, 21, 23, 25, 26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 100, 102, 103, 105, 106, 107, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "thing": [122, 131], "think": [36, 122, 124, 127], "third": [27, 55, 56], "those": [48, 50, 118], "thought": 54, "three": [32, 35, 38, 44, 56, 88, 123, 125, 127], "threshold": [0, 74, 79, 83, 86, 88, 102, 111, 116, 120, 122, 128], "threshold cutoff": 91, "threshold_cutoff": [0, 18, 91], "threshold_datetim": 88, "through": [58, 61, 72, 101, 111, 116], "thu": 55, "tier": [68, 130], "time": [36, 44, 47, 53, 58, 67, 70, 74, 78, 79, 83, 86, 87, 88, 89, 102, 111, 116, 120, 123, 124, 125, 128, 131], "time_rerank": [0, 18, 79, 106], "timeout": [0, 67, 130], "timererank": [18, 23, 106], "tiny2": 72, "tinybert": [23, 96], "tip": 59, "titan": 60, "tmm": [27, 118, 120], "to_list": [0, 29], "to_parquet": [1, 8, 49, 51], "token": [0, 10, 18, 19, 21, 23, 27, 32, 49, 51, 54, 62, 67, 70, 72, 74, 77, 78, 82, 83, 103, 111, 129], "token_false_id": 23, "token_limit": 29, "token_threshold": [74, 111], "token_true_id": 23, "tokenization_enc_t5": [18, 23], "tokenize_ja_sudachipi": [18, 27], "tokenize_ko_kiwi": [18, 27], "tokenize_ko_kkma": [18, 27], "tokenize_ko_okt": [18, 27], "tokenize_porter_stemm": [18, 27], "tokenize_spac": [18, 27], "tokenizer_output": 23, "tokentextsplitt": 40, "tolist": 129, "too": [47, 92, 97, 123, 124], "took": 123, "tool": 58, "toolkit": 101, "top": [20, 23, 77, 80, 102, 116, 120, 122, 123], "top_k": [20, 23, 27, 29, 40, 64, 66, 67, 68, 69, 71, 73, 80, 86, 102, 116, 118, 119, 120, 122, 126, 127], "top_logprob": 76, "top_n": 23, "top_p": 77, "topic": 54, "topn": 55, "torch_dtyp": [61, 72], "total": 56, "tpm": 97, "track": 36, "trail": [70, 123, 131], "trail_fold": 15, "train": [46, 123, 131], "transform": [0, 23, 52, 72, 77, 79, 102], "translat": 54, "treat": [36, 122], "tree": [79, 83], "tree summar": 85, "tree_summar": [0, 18, 62, 72, 79, 83, 85], "treesummar": [18, 21], "trend": 52, "trial": [15, 52, 130], "trial_dir": [0, 29, 52, 131], "trial_fold": [53, 131], "trial_path": [0, 15, 53], "troubl": [58, 70, 130], "troubleshoot": [58, 59], "true": [0, 5, 9, 10, 11, 15, 23, 28, 29, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 55, 59, 66, 70, 76, 77, 87, 91, 108, 130], "truncat": [23, 108], "truncate_by_token": [18, 19], "truth": [36, 46, 48, 54, 55, 74, 124, 129], "try": [57, 59, 127, 130], "tune": 114, "tupl": [0, 7, 14, 23, 27, 28, 29, 36, 118, 119], "turbo": [39, 40, 74, 75, 76, 83, 84, 85, 103, 111, 114, 115, 124, 130], "turkish": 32, "tutori": [35, 39, 52, 53, 58, 127], "twice": 44, "twitter": 58, "two": [8, 27, 36, 40, 43, 44, 54, 55, 57, 61, 70, 72, 77, 97, 126, 127, 131], "two_hop_increment": 50, "txt": [40, 59], "type": [0, 15, 27, 28, 29, 32, 36, 38, 40, 43, 46, 47, 52, 55, 62, 69, 71, 72, 74, 76, 77, 78, 92, 93, 94, 95, 96, 97, 101, 104, 108, 113, 114, 115, 116, 117, 120, 127, 131], "typic": [50, 70, 110], "tyre": 127, "u": [68, 115], "ui": 66, "ultim": 58, "ultra": 96, "unanswer": 10, "unavail": 46, "uncertain": 129, "under": [57, 124, 130], "underscor": 83, "understand": [123, 124], "understudi": 54, "unexpect": [36, 131], "unicamp": 100, "uniform": 39, "unigram": 54, "unintend": [48, 122], "union": [0, 15], "uniqu": [27, 36, 52, 83, 128], "unit": 40, "unless": 29, "unstructur": [42, 44], "unstructured_api_kei": 42, "unstructuredmarkdown": [42, 44], "unstructuredpdf": 42, "unstructuredxml": [42, 44], "until": 128, "up": [36, 43, 56, 57, 59, 79, 83, 85, 128, 131], "updat": [8, 36, 51, 62, 72], "update_corpu": [1, 8, 51], "upgrad": [59, 77, 130], "upon": 59, "upr": [0, 18, 59, 79, 102, 127], "uprscor": [18, 23], "upsert": [5, 29], "upstage_api_kei": 42, "upstagedocumentpars": [42, 44], "upstagedocumentparseload": 42, "upstagelayoutanalysi": 45, "uri": [67, 70, 78], "url": [52, 62, 69, 71, 72], "us": [0, 5, 7, 8, 9, 10, 11, 15, 21, 23, 27, 29, 35, 36, 38, 41, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 127], "usag": [27, 83, 103, 121], "use_bf16": [23, 107], "use_fp16": [94, 95], "use_own_kei": [7, 43], "use_vendor_multimodal_model": [7, 43, 44], "user": [0, 15, 36, 40, 47, 53, 57, 67, 69, 80, 81, 107, 111, 114, 120, 123, 126, 127, 131], "user_prompt": 47, "usernam": [66, 67], "usr": 59, "usual": [46, 47], "util": [0, 1, 52, 64, 102], "v": 59, "v0": [37, 40, 59, 61, 62, 72, 74, 77, 78, 117], "v1": [0, 9, 10, 11, 15, 23, 29, 60, 63, 72, 97, 99, 100], "v2": [23, 72, 92, 94, 96, 100, 104], "v3": 92, "vagu": 48, "valid": [8, 66, 67, 68, 69, 71, 124, 130], "validate_corpus_dataset": [0, 29], "validate_qa_dataset": [0, 29], "validate_qa_from_corpus_dataset": [0, 29], "validate_strategy_input": 0, "valu": [0, 15, 20, 27, 28, 29, 33, 34, 36, 40, 42, 44, 47, 54, 55, 62, 71, 72, 87, 88, 89, 90, 91, 106, 118, 119, 122, 124, 126, 129, 130], "valuabl": 40, "value_column_nam": 29, "valueerror": 130, "vari": [48, 116, 118, 128], "variabl": [7, 29, 42, 59, 70, 76, 92, 97, 99, 108, 130], "variant": 100, "variat": [36, 116], "variou": [32, 38, 44, 58, 64, 65, 67, 74, 83, 101, 102, 111, 120], "ve": 70, "vector": [65, 66, 67, 68, 69, 71, 121, 127], "vector db": [70, 121], "vectordb": [0, 18, 40, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 116, 117, 120, 122, 123], "vendor": [7, 43], "vendor_multimodal_api_kei": [7, 43], "vendor_multimodal_model_nam": [7, 43, 44], "verbos": [23, 103], "veri": 58, "verifi": [50, 70], "version": [0, 15, 27, 36, 50, 72, 73, 77, 117, 124, 126, 129, 130, 131], "versionrespons": [0, 15], "video": 36, "view": [57, 58], "viscond": 115, "vision": 101, "visit": [27, 60, 61, 63, 65], "vllm": [0, 18, 74, 79, 111, 130], "vllm_api": 78, "voil\u00e0": 127, "voyag": 23, "voyage_api_kei": [108, 125], "voyage_cli": 23, "voyageai": [0, 18, 108, 125], "voyageai_rerank": 102, "voyageai_rerank_pur": [18, 23], "voyageairerank": [18, 23], "vram": 130, "wa": [27, 32, 38, 41, 44, 50, 52, 54, 55, 62, 72, 124, 125, 130], "wai": [43, 46, 47, 48, 50, 53, 60, 61, 67, 72, 122, 124, 127, 130], "wait": [59, 67, 77], "want": [8, 15, 27, 28, 29, 33, 34, 36, 40, 42, 43, 45, 48, 50, 51, 56, 58, 59, 60, 61, 62, 63, 72, 73, 88, 92, 93, 94, 95, 96, 97, 101, 104, 106, 108, 117, 118, 119, 122, 124, 128, 129], "water": 56, "we": [0, 32, 35, 36, 38, 40, 44, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 62, 64, 70, 72, 74, 77, 111, 116, 117, 121, 122, 123, 124, 125, 127, 130, 131], "weaviat": [0, 69, 70], "weaviate_api_kei": 71, "weaviate_db": 71, "weaviate_url": 71, "web": [15, 57, 58], "websit": 63, "weight": [27, 54, 64, 116, 118, 119], "weight_rang": [73, 118, 119, 120], "welcom": 127, "well": [32, 38, 40, 44, 49, 54, 55, 58, 78], "were": 53, "what": [10, 32, 36, 38, 44, 50, 55, 58, 62, 63, 64, 72, 73, 107, 109, 110, 111, 112, 115, 123, 128], "when": [0, 10, 15, 36, 41, 47, 50, 56, 59, 62, 68, 70, 72, 74, 76, 77, 86, 88, 97, 106, 110, 111, 115, 121, 122, 123, 128, 131], "where": [48, 58, 64, 66, 67, 68, 69, 71, 83, 120, 123], "whether": [0, 5, 7, 15, 23, 43, 46, 54, 66, 68, 76, 94, 95, 107, 108], "which": [15, 27, 29, 36, 40, 44, 47, 50, 53, 54, 55, 56, 57, 58, 62, 64, 71, 72, 73, 75, 83, 84, 85, 86, 97, 111, 117, 118, 119, 122, 124, 125, 127, 130, 131], "whichev": 55, "while": [40, 48, 59, 128], "whitespac": 29, "who": [50, 57, 131], "whole": [0, 8, 19, 21, 23, 25, 26, 27, 28, 124, 131], "why": [36, 124, 127], "wikipedia": 50, "wildcard": [38, 44], "window": [79, 111], "window_replac": [0, 18, 79, 112], "window_s": 32, "windowreplac": [18, 25], "wise": 103, "within": [46, 50, 68, 74, 83, 102, 111, 120, 128], "withjsonschema": 0, "without": [45, 46, 58, 60, 61, 63, 70, 73, 75, 76, 80, 83, 84, 85, 86, 102, 113, 116, 118, 127, 131], "wonder": 124, "word": [11, 35, 46, 54, 117, 129], "work": [40, 59, 67, 118, 122, 130, 131], "would": [55, 123], "wrapper": 0, "write": [23, 35, 47, 59, 66, 103, 107, 115, 118, 122, 124, 127], "written": [33, 34, 42], "wrong": [32, 40, 127], "www": 58, "x": [0, 23, 32, 52, 58, 62, 129], "x86": 101, "xml": 44, "xsmall": 99, "yaml": [0, 15, 29, 52, 54, 58, 59, 62, 67, 69, 70, 73, 79, 124, 126, 127, 128, 130], "yaml_filepath": 0, "yaml_path": [0, 14, 15, 29, 53, 131], "yaml_to_markdown": 0, "yarn": 57, "ye": 50, "yet": [39, 59, 127], "yml": [15, 122], "you": [0, 5, 7, 8, 10, 15, 20, 23, 27, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 108, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131], "your": [0, 15, 32, 35, 36, 37, 38, 41, 43, 44, 46, 47, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 76, 77, 78, 86, 92, 96, 97, 99, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 124, 126, 127, 130], "your_api_bas": [61, 62, 72], "your_api_kei": [61, 62, 63, 65, 72, 130], "your_cohere_api_kei": [92, 125], "your_dir_path": 40, "your_jina_api_kei": [97, 125], "your_mixedbread_api_kei": [99, 125], "your_openai_api_kei": 43, "your_profile_nam": 60, "your_voyageai_api_kei": [108, 125], "yourself": [27, 117, 118], "yyyi": 88, "z": [27, 118, 120], "zcal": 58, "zero": [107, 113]}, "titles": ["autorag package", "autorag.data package", "autorag.data.chunk package", "autorag.data.corpus package", "autorag.data.legacy package", "autorag.data.legacy.corpus package", "autorag.data.legacy.qacreation package", "autorag.data.parse package", "autorag.data.qa package", "autorag.data.qa.evolve package", "autorag.data.qa.filter package", "autorag.data.qa.generation_gt package", "autorag.data.qa.query package", "autorag.data.qacreation package", "autorag.data.utils package", "autorag.deploy package", "autorag.evaluation package", "autorag.evaluation.metric package", "autorag.nodes package", "autorag.nodes.generator package", "autorag.nodes.passageaugmenter package", "autorag.nodes.passagecompressor package", "autorag.nodes.passagefilter package", "autorag.nodes.passagereranker package", "autorag.nodes.passagereranker.tart package", "autorag.nodes.promptmaker package", "autorag.nodes.queryexpansion package", "autorag.nodes.retrieval package", "autorag.schema package", "autorag.utils package", "autorag.vectordb package", "autorag", "Chunk", "Langchain Chunk", "Llama Index Chunk", "Data Creation", "Dataset Format", "Legacy", "Parse", "RAGAS evaluation data generation", "Start creating your own evaluation data", "Clova", "Langchain Parse", "Llama Parse", "Parse", "Table Hybrid Parse", "Answer Generation", "Query Evolving", "Filtering", "QA creation", "Query Generation", "Evaluation data creation tutorial", "API endpoint", "Web Interface", "Generation Metrics", "Retrieval Metrics", "Retrieval Token Metrics", "AutoRAG GUI", "AutoRAG documentation", "Installation and Setup", "AWS Bedrock x AutoRAG", "HuggingFace LLM x AutoRAG", "Configure LLM", "Nvidia Nim x AutoRAG", "OLLAMA x AutoRAG", "Chroma", "Couchbase", "Milvus", "Pinecone", "Qdrant", "Configure Vector DB", "Weaviate", "Configure LLM &amp; Embedding models", "Migration Guide", "8. Generator", "llama_index LLM", "OpenAI LLM", "vllm", "vLLM API", "Available List", "3. Passage Augmenter", "Prev Next Augmenter", "Long LLM Lingua", "6. Passage_Compressor", "Refine", "Tree Summarize", "5. Passage Filter", "Percentile Cutoff", "Recency Filter", "Similarity Percentile Cutoff", "Similarity Threshold Cutoff", "Threshold Cutoff", "cohere_reranker", "Colbert Reranker", "Flag Embedding LLM Reranker", "Flag Embedding Reranker", "FlashRank Reranker", "jina_reranker", "Ko-reranker", "Mixedbread AI Reranker", "MonoT5", "OpenVINO Reranker", "4. Passage_Reranker", "RankGPT", "Sentence Transformer Reranker", "TART", "Time Reranker", "UPR", "voyageai_reranker", "F-String", "Long Context Reorder", "7. Prompt Maker", "Window Replacement", "HyDE", "Multi Query Expansion", "Query Decompose", "<strong>1. Query Expansion</strong>", "BM25", "Hybrid - cc", "Hybrid - rrf", "2. Retrieval", "Vectordb", "Make a custom config YAML file", "Folder Structure", "How optimization works", "Sample YAML file guide", "Strategy", "Road to Modular RAG", "Structure", "Evaluate your RAG", "TroubleShooting", "Tutorial"], "titleterms": {"": 55, "0": [55, 56], "1": [32, 33, 34, 38, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 71, 76, 116, 130, 131], "2": [32, 33, 34, 38, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 71, 76, 120, 130, 131], "3": [32, 33, 34, 38, 42, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 73, 76, 80, 130, 131], "4": [32, 34, 38, 42, 44, 49, 50, 51, 52, 54, 55, 102, 130], "5": [34, 42, 49, 54, 55, 59, 86, 130], "6": [42, 49, 54, 55, 59, 83], "7": [42, 73, 111], "8": 74, "For": 117, "If": 40, "The": [41, 130], "about": 127, "access": [52, 57, 59, 66], "accur": 76, "add": [32, 62, 72], "addit": [59, 70, 118, 119], "address": 66, "advanc": 129, "ai": 99, "align": 129, "all": [42, 44, 124], "allow": 66, "also": 131, "an": [57, 131], "ani": 117, "answer": [46, 49], "api": [15, 42, 52, 59, 78, 125, 130, 131], "appli": [55, 56], "applic": 57, "ask": 130, "augment": [80, 81], "auto": [40, 76], "autorag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 127, 130, 131], "autotoken": 117, "avail": [32, 33, 34, 42, 45, 79], "averag": 55, "aw": 60, "backend": 121, "base": [2, 6, 7, 11, 13, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 48], "basic": [35, 46, 55, 56], "bedrock": 60, "befor": [51, 92, 97, 99, 108], "benefit": [80, 83, 86, 102, 116], "bert": 54, "best": 124, "between": 86, "bleu": 54, "bm25": [27, 117], "bodi": 52, "both": 40, "bucket": 66, "build": [57, 59, 130], "cach": 59, "can": [58, 124], "cc": 118, "charact": 33, "check": [32, 38, 44], "chroma": [30, 65], "chunk": [2, 32, 33, 34, 51], "chunker": [0, 32], "cli": [0, 53], "client": [52, 65], "clone": 57, "cloud": 71, "clova": [7, 41], "cluster": 66, "code": [52, 70, 129, 131], "coher": [23, 54], "cohere_rerank": 92, "colab": 131, "colbert": [23, 93], "collect": 66, "column": [32, 38, 44], "come": 41, "command": [52, 70, 131], "common": [62, 72], "compact": 125, "complet": 50, "compos": 57, "compress": 47, "concept": [35, 50, 128], "concis": 46, "condit": 47, "config": [60, 61, 63, 64, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131], "configur": [62, 65, 66, 67, 68, 69, 70, 71, 72, 126, 129], "consider": 70, "consist": 54, "contact": 127, "contain": 59, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 49], "context": 110, "corpu": [3, 5, 36, 39, 40, 51, 130], "corpus_data": 130, "couchbas": [30, 66], "could": 130, "creat": [40, 66, 131], "creation": [35, 49, 51, 73], "csv": [42, 123], "cumul": 55, "curl": 52, "custom": [39, 40, 46, 47, 50, 59, 122, 131], "cutoff": [87, 89, 90, 91], "dashboard": [0, 131], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 35, 39, 40, 49, 51, 73, 123, 130], "data_path_glob": [38, 44], "databas": 70, "dataclass": 129, "dataset": [36, 131], "db": 70, "debug": 59, "decompos": 115, "deepeval_prompt": 17, "default": [44, 70, 115], "definit": [54, 55, 56, 74, 80, 83, 86, 102, 111, 116, 120], "depend": 48, "deploi": [15, 131], "detect": [41, 45], "determin": 71, "didn": 131, "differ": [86, 130], "directori": 59, "discount": 55, "do": 124, "doc_id": 36, "docker": [57, 59, 71], "document": [40, 58], "don": 48, "dontknow": 10, "download": 64, "dure": 131, "earli": 127, "ecosystem": 58, "edit": 66, "embed": [72, 94, 95], "endpoint": 52, "environ": [43, 63, 64, 122], "error": [130, 131], "eval": 54, "evalu": [0, 16, 17, 39, 40, 51, 124, 129, 131], "evaluate_gener": 129, "evaluate_retriev": 129, "evolv": [9, 47], "exampl": [32, 33, 34, 41, 42, 43, 45, 50, 52, 53, 55, 56, 66, 68, 71, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 128, 129], "exist": 40, "expans": [114, 116], "explan": [59, 118, 119, 128], "extract": [43, 131], "extract_evid": 8, "f": 109, "f1": [55, 56], "face": 130, "factoid": 50, "featur": [32, 40], "file": [32, 38, 42, 44, 51, 60, 61, 63, 64, 66, 68, 71, 72, 74, 80, 83, 86, 102, 111, 116, 120, 122, 125, 131], "filter": [10, 48, 49, 86, 88], "find": 131, "first": 131, "flag": [94, 95], "flag_embed": 23, "flag_embedding_llm": 23, "flashrank": [23, 96], "fluenci": 54, "folder": [32, 38, 44, 53, 123, 131], "format": [36, 131], "found": 130, "founder": 58, "frequent": 130, "from": [39, 40, 41, 57, 59, 130], "fstring": 25, "full": [70, 125], "function": 47, "g": 54, "gain": 55, "gener": [16, 17, 19, 39, 46, 49, 50, 54, 74, 129], "generation_gt": [11, 36, 40], "get": [49, 52, 58, 125], "gpu": [59, 77, 125, 130], "gradio": [15, 53], "gt": 49, "gui": [57, 58], "guid": [44, 73, 125], "half": 125, "have": [40, 42], "help": 58, "hf_home": 59, "hop": 50, "how": [33, 34, 42, 54, 58, 71, 124], "html": [41, 42], "huggingfac": [61, 72, 117], "hybrid": [45, 118, 119], "hybrid_cc": 27, "hybrid_rrf": 27, "hyde": [26, 113], "i": [32, 33, 34, 40, 42, 71, 80, 83, 86, 102, 116, 122, 124, 127, 130], "id": 130, "imag": 59, "import": [129, 130], "increment": 50, "index": [34, 40, 62, 66, 72, 123], "inform": 41, "ingest": 70, "initi": 65, "instal": [57, 59, 63, 64, 130], "instanc": [32, 38, 44], "instead": 53, "integr": 62, "interfac": [53, 131], "ip": 66, "japanes": [59, 117], "jina": 23, "jina_rerank": 97, "json": [42, 123], "jupyt": 130, "kei": [59, 65, 125], "know": [48, 127], "ko": 98, "ko_kiwi": 117, "ko_kkma": 117, "ko_okt": 117, "korean": [59, 117], "korerank": 23, "langchain": [3, 5, 33, 42], "langchain_chunk": 2, "langchain_pars": 7, "languag": 43, "legaci": [4, 5, 6, 37, 72], "length": 130, "line": [70, 122, 123, 127, 128, 131], "lingua": 82, "list": [62, 79], "llama": [34, 43], "llama_gen_queri": 12, "llama_index": [3, 5, 6, 13, 75], "llama_index_chunk": 2, "llama_index_gen_gt": 11, "llama_index_llm": 19, "llama_index_query_evolv": 9, "llamaindex": [46, 130], "llamapars": 7, "llm": [48, 61, 62, 64, 72, 75, 76, 82, 94, 130], "local": 59, "log": 76, "long": [36, 82, 110], "long_context_reord": 25, "longllmlingua": 21, "make": [40, 47, 122], "maker": 111, "manual": 59, "map": [51, 55], "markdown": 42, "mean": [55, 126], "merger": 127, "metadata": 36, "meteor": 54, "method": [33, 34, 42, 44], "metric": [17, 54, 55, 56], "metricinput": [28, 129], "migrat": 73, "milvu": [30, 67], "mixedbread": 99, "mixedbreadai": 23, "model": [39, 43, 59, 62, 64, 72, 99, 100, 108], "modeling_enc_t5": 24, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 38, 44, 45, 62, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 128], "modular": 127, "monot5": [23, 100], "more": [62, 72, 124, 127], "mrr": 55, "multi": [77, 114], "multi_query_expans": 26, "multimod": 43, "multipl": 40, "must": 42, "name": [32, 72, 99, 100, 108], "ndcg": 55, "need": [42, 124], "newbi": 57, "next": [81, 124, 131], "ngrok": 52, "nim": 63, "node": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 74, 80, 83, 86, 102, 111, 116, 119, 120, 122, 123, 124, 127, 128, 131], "node_lin": 0, "non": 125, "normal": [55, 126], "note": [59, 96, 131], "notebook": 130, "nvidia": 63, "occur": 131, "ollama": [64, 130], "onli": 40, "openai": [46, 59, 76, 130], "openai_gen_gt": 11, "openai_gen_queri": 12, "openai_llm": [19, 76], "openai_query_evolv": 9, "openvino": [23, 101], "optim": [124, 130, 131], "option": [36, 70], "origin": 130, "output": [32, 38, 44, 76], "overview": [32, 38, 40, 44, 49, 50, 51, 70, 74, 83, 102, 111, 116, 120, 126], "own": 40, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "paramet": [38, 42, 44, 45, 52, 62, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126], "pars": [7, 38, 42, 43, 44, 45, 51, 59], "parser": [0, 38, 41, 44], "pass": 124, "pass_compressor": [21, 83], "pass_passage_augment": [20, 80], "pass_passage_filt": [22, 86], "pass_query_expans": [26, 116], "pass_rerank": [23, 102], "passag": [40, 48, 80, 86], "passage_compressor": 83, "passage_depend": 10, "passage_rerank": 102, "passageaugment": 20, "passagecompressor": 21, "passagefilt": 22, "passagererank": [23, 24], "path": [36, 53], "pdf": 42, "percentil": [87, 89], "percentile_cutoff": 22, "pinecon": [30, 68], "pipelin": [32, 38, 44, 131], "point": 41, "polici": 127, "porter_stemm": 117, "post": 52, "pre_retrieve_node_lin": 123, "precis": [55, 56], "prepar": [129, 131], "preprocess": 29, "prev": 81, "prev_next_augment": 20, "pro": 57, "prob": 76, "profil": 60, "project": [32, 38, 44, 53, 123, 131], "prompt": [9, 10, 11, 12, 40, 76, 111, 115], "promptmak": 25, "properti": 52, "provid": 47, "public": 52, "purpos": [74, 83, 120], "python": [52, 70, 131], "qa": [8, 9, 10, 11, 12, 36, 39, 40, 49, 51], "qacreat": [6, 13], "qdrant": [30, 69], "qid": 36, "queri": [12, 36, 40, 47, 49, 50, 66, 114, 115, 116], "query_decompos": 26, "query_expans": 123, "queryexpans": 26, "question": [39, 48, 49, 50, 130], "rag": [127, 129, 131], "raga": [6, 13, 39], "rank": [55, 126], "rankgpt": [23, 103], "raw": 40, "reason": 47, "recal": [55, 56], "recenc": [22, 88], "reciproc": 55, "recommend": 36, "refin": [21, 84], "relat": 130, "relev": 54, "reorder": 110, "replac": 112, "repositori": 57, "request": 52, "requesttimeout": 130, "rerank": [86, 93, 94, 95, 96, 98, 99, 101, 104, 106], "resourc": 123, "respons": 52, "restart": 131, "result": [32, 38, 44, 124, 131], "retriev": [16, 17, 27, 49, 52, 55, 56, 120, 129], "retrieval_cont": [16, 17], "retrieval_gt": [36, 55], "retrieve_node_lin": 123, "road": 127, "roug": 54, "row": 130, "rrf": 119, "rule": 48, "run": [2, 7, 19, 20, 21, 22, 23, 25, 26, 27, 32, 38, 44, 52, 53, 57, 59, 60, 61, 63, 64, 130, 131], "runner": 53, "sampl": [8, 36, 49, 52, 123, 125], "save": [40, 49], "schema": [8, 28], "scope": 66, "score": [54, 55, 71, 129], "see": 131, "sem": 54, "sem_scor": 74, "semant": 34, "sentenc": [32, 33, 34, 104], "sentence_transform": 23, "separ": 41, "server": [52, 64, 78, 130, 131], "set": [32, 38, 39, 43, 44, 51, 60, 63, 64], "setup": 59, "short": 36, "similar": [89, 90], "similarity_percentile_cutoff": 22, "similarity_threshold_cutoff": 22, "simpl": [6, 13, 34, 125], "sourc": [57, 59], "space": 117, "specif": [44, 54], "specifi": [32, 38, 44, 53, 122, 131], "splitter": 32, "start": [32, 38, 40, 44, 51, 58, 78], "start_end_idx": 36, "step": 131, "stori": 36, "strategi": [0, 74, 83, 102, 111, 116, 120, 124, 126, 128], "stream": 52, "streamlit": 53, "string": 109, "structur": [123, 128], "submodul": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 57], "subpackag": [0, 1, 4, 8, 16, 18, 23], "success": 52, "sudachipi": 117, "summar": [85, 128], "summari": 123, "support": [0, 32, 38, 43, 44, 62, 70, 72, 74, 83, 99, 100, 102, 108, 111, 116, 120, 121], "swap": 124, "system": 131, "t": [48, 124, 131], "tabl": [41, 43, 45], "table_hybrid_pars": 7, "talk": 58, "tart": [24, 105], "test": 131, "text": 41, "threshold": [90, 91], "threshold_cutoff": 22, "time": 106, "time_rerank": 23, "token": [33, 34, 56, 76, 117], "tokenization_enc_t5": 24, "transform": 104, "tree": 85, "tree_summar": 21, "trial": [53, 123, 131], "trial_path": 131, "troubl": [59, 117], "troubleshoot": 130, "truncat": 76, "tunnel": 52, "tupl": 122, "tutori": [51, 131], "two": 50, "type": [39, 42, 44, 50, 65], "u": 127, "unanswer": 48, "understand": 55, "up": [60, 63, 64], "upr": [23, 107], "us": [32, 33, 34, 39, 40, 42, 43, 44, 52, 53, 54, 57, 59, 60, 61, 62, 63, 72, 76, 77, 117, 122, 124, 126, 129, 130, 131], "usag": [50, 52, 66, 67, 68, 69, 70, 71, 92, 97, 99, 108], "user": 59, "util": [14, 16, 17, 18, 29], "v0": 73, "v1": 52, "valid": [0, 131], "variabl": [43, 122], "vector": 70, "vectordb": [27, 30, 121], "version": [52, 57, 59, 127], "vllm": [19, 72, 77, 78], "voyageai": 23, "voyageai_rerank": 108, "want": [32, 38, 44, 53, 127, 131], "weaviat": [30, 71], "web": [0, 53, 131], "what": [40, 80, 83, 86, 102, 116, 122, 127, 131], "wheel": 130, "when": [40, 130], "while": 130, "why": [53, 58, 76, 77, 131], "window": [34, 59, 112], "window_replac": 25, "work": 124, "write": [60, 61, 63, 64, 131], "x": [60, 61, 63, 64], "xml": 42, "yaml": [32, 33, 34, 38, 41, 42, 43, 44, 45, 51, 53, 60, 61, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 131], "you": [40, 51], "your": [40, 72, 129, 131]}})